Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPT
    COL
    DIGIT
    DIGITS
    LETTER

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SC programa_a bloque
Rule 2     programa_a -> programa_b
Rule 3     programa_a -> programa_b programa_a
Rule 4     programa_a -> empty
Rule 5     programa_b -> vars
Rule 6     programa_b -> vars_vect_mat
Rule 7     vars -> tiposimple vars_a SC
Rule 8     vars -> tipocompuesto vars_a SC
Rule 9     vars_a -> vars_b
Rule 10    vars_a -> vars_c vars_a
Rule 11    vars_b -> ID
Rule 12    vars_b -> ID EQ expresion
Rule 13    vars_c -> vars_b COMMA
Rule 14    vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC
Rule 15    vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
Rule 16    vars_vect_mat_a -> vars_vect_mat_c exp CSB
Rule 17    vars_vect_mat_b -> tiposimple ID
Rule 18    vars_vect_mat_c -> OSB
Rule 19    vars_vect_mat_d -> OSB exp CSB
Rule 20    m_exp -> m_exp_b
Rule 21    m_exp -> m_exp_b m_exp_a m_exp
Rule 22    m_exp_a -> ADD
Rule 23    m_exp_a -> SUB
Rule 24    m_exp_b -> term
Rule 25    term -> term_b
Rule 26    term -> term_b term_a term
Rule 27    term_a -> MULT
Rule 28    term_a -> DIV
Rule 29    term_b -> fact
Rule 30    tiposimple -> INT
Rule 31    tiposimple -> FLOAT
Rule 32    tiposimple -> CHAR
Rule 33    tipocompuesto -> DATAFRAME
Rule 34    tipocompuesto -> ID
Rule 35    tipocompuesto -> FILE
Rule 36    bloque -> OB bloque_a CB
Rule 37    bloque_a -> estatuto bloque_a
Rule 38    bloque_a -> estatuto
Rule 39    bloque_a -> empty
Rule 40    estatuto -> asignacion
Rule 41    estatuto -> condicion
Rule 42    estatuto -> llamada SC
Rule 43    estatuto -> while
Rule 44    estatuto -> for
Rule 45    estatuto -> classcreate
Rule 46    estatuto -> vars
Rule 47    estatuto -> classdeclare
Rule 48    estatuto -> llamadafuncionclase
Rule 49    estatuto -> function
Rule 50    estatuto -> return
Rule 51    estatuto -> print
Rule 52    estatuto -> input
Rule 53    return -> RETURN expresion SC
Rule 54    expresion -> m_exp
Rule 55    expresion -> m_exp expresion_a m_exp
Rule 56    expresion_a -> LT
Rule 57    expresion_a -> GT
Rule 58    expresion_a -> NE
Rule 59    expresion_a -> EQEQ
Rule 60    expresion_a -> LE
Rule 61    expresion_a -> GE
Rule 62    varcte -> ID
Rule 63    varcte -> CTE_I
Rule 64    varcte -> CTE_F
Rule 65    while -> while_b bloque
Rule 66    while_a -> WHILE
Rule 67    while_b -> while_a OP expresion CP
Rule 68    exp -> and_exp
Rule 69    exp -> exp_b exp
Rule 70    exp_b -> and_exp OR
Rule 71    and_exp -> expresion
Rule 72    and_exp -> and_exp_b and_exp
Rule 73    and_exp_b -> expresion AND
Rule 74    for -> for_a for_b bloque
Rule 75    for_a -> FOR
Rule 76    for_b -> for_e asignacionsencilla CP
Rule 77    for_c -> OP asignacionsencilla SC
Rule 78    for_d -> for_c expresion
Rule 79    for_e -> for_d SC
Rule 80    llamada -> llamada_d llamada_a CP
Rule 81    llamada_a -> llamada_e llamada_b
Rule 82    llamada_a -> llamada_b
Rule 83    llamada_b -> llamada_f llamada_a
Rule 84    llamada_b -> empty
Rule 85    llamada_c -> ID
Rule 86    llamada_d -> llamada_c OP
Rule 87    llamada_e -> expresion
Rule 88    llamada_e -> CTE_STRING
Rule 89    llamada_f -> COMMA
Rule 90    print -> PRINT OP expresion CP SC
Rule 91    input -> INPUT OP ID CP SC
Rule 92    fact -> OP fact_a exp CP
Rule 93    fact -> CTE_I
Rule 94    fact -> CTE_F
Rule 95    fact -> CTE_CHAR
Rule 96    fact -> ID
Rule 97    fact -> llamada
Rule 98    fact -> array_access
Rule 99    fact_a -> empty
Rule 100   classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB
Rule 101   classcreate_a -> vars classcreate_a
Rule 102   classcreate_a -> vars_vect_mat classcreate_a
Rule 103   classcreate_a -> empty
Rule 104   classcreate_c -> function classcreate_d
Rule 105   classcreate_c -> classcreate_d
Rule 106   classcreate_d -> classcreate_c
Rule 107   classcreate_d -> empty
Rule 108   condicion -> condicion_c bloque condicion_a
Rule 109   condicion_a -> condicion_d condicion_b bloque
Rule 110   condicion_a -> empty
Rule 111   condicion_b -> condicion
Rule 112   condicion_b -> empty
Rule 113   condicion_c -> IF OP exp CP
Rule 114   condicion_d -> ELSE
Rule 115   classdeclare -> CLASS_ID ID SC
Rule 116   llamadafuncionclase -> ID POINT llamada
Rule 117   asignacion -> ID EQ expresion SC
Rule 118   asignacion -> array_access EQ expresion SC
Rule 119   asignacionsencilla -> ID EQ expresion
Rule 120   function -> DEF function_e bloque
Rule 121   function_a -> VOID
Rule 122   function_a -> tiposimple
Rule 123   function_b -> function_d
Rule 124   function_b -> function_d COMMA function_b
Rule 125   function_b -> empty
Rule 126   function_c -> function_a ID
Rule 127   function_d -> tiposimple ID
Rule 128   function_e -> function_c OP function_b CP vars
Rule 129   function_e -> function_c OP function_b CP empty
Rule 130   array_access -> array_access_c array_access_d exp CSB
Rule 131   array_access -> array_access_c
Rule 132   array_access_a -> ID
Rule 133   array_access_b -> array_access_a OSB
Rule 134   array_access_c -> array_access_b exp CSB
Rule 135   array_access_d -> OSB
Rule 136   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 22
AND                  : 73
CAPT                 : 
CB                   : 36 100
CHAR                 : 32
CLASS                : 100
CLASS_ID             : 100 115
COL                  : 
COMMA                : 13 89 124
CP                   : 67 76 80 90 91 92 113 128 129
CSB                  : 16 19 130 134
CTE_CHAR             : 95
CTE_F                : 64 94
CTE_I                : 63 93
CTE_STRING           : 88
DATAFRAME            : 33
DEF                  : 120
DIGIT                : 
DIGITS               : 
DIV                  : 28
ELSE                 : 114
EQ                   : 12 117 118 119
EQEQ                 : 59
FILE                 : 35
FLOAT                : 31
FOR                  : 75
GE                   : 61
GT                   : 57
ID                   : 1 11 12 17 34 62 85 91 96 115 116 117 119 126 127 132
IF                   : 113
INPUT                : 91
INT                  : 30
LE                   : 60
LETTER               : 
LT                   : 56
MULT                 : 27
NE                   : 58
OB                   : 36 100
OP                   : 67 77 86 90 91 92 113 128 129
OR                   : 70
OSB                  : 18 19 133 135
POINT                : 116
PRINT                : 90
PROGRAM              : 1
RETURN               : 53
SC                   : 1 7 8 14 15 42 53 77 79 90 91 115 117 118
SUB                  : 23
VOID                 : 121
WHILE                : 66
error                : 

Nonterminals, with rules where they appear

and_exp              : 68 70 72
and_exp_b            : 72
array_access         : 98 118
array_access_a       : 133
array_access_b       : 134
array_access_c       : 130 131
array_access_d       : 130
asignacion           : 40
asignacionsencilla   : 76 77
bloque               : 1 65 74 108 109 120
bloque_a             : 36 37
classcreate          : 45
classcreate_a        : 100 101 102
classcreate_c        : 100 106
classcreate_d        : 104 105
classdeclare         : 47
condicion            : 41 111
condicion_a          : 108
condicion_b          : 109
condicion_c          : 108
condicion_d          : 109
empty                : 4 39 84 99 103 107 110 112 125 129
estatuto             : 37 38
exp                  : 16 19 69 92 113 130 134
exp_b                : 69
expresion            : 12 53 67 71 73 78 87 90 117 118 119
expresion_a          : 55
fact                 : 29
fact_a               : 92
for                  : 44
for_a                : 74
for_b                : 74
for_c                : 78
for_d                : 79
for_e                : 76
function             : 49 100 104
function_a           : 126
function_b           : 124 128 129
function_c           : 128 129
function_d           : 123 124
function_e           : 120
input                : 52
llamada              : 42 97 116
llamada_a            : 80 83
llamada_b            : 81 82
llamada_c            : 86
llamada_d            : 80
llamada_e            : 81
llamada_f            : 83
llamadafuncionclase  : 48
m_exp                : 21 54 55 55
m_exp_a              : 21
m_exp_b              : 20 21
print                : 51
programa             : 0
programa_a           : 1 3
programa_b           : 2 3
return               : 50
term                 : 24 26
term_a               : 26
term_b               : 25 26
tipocompuesto        : 8
tiposimple           : 7 17 122 127
varcte               : 
vars                 : 5 46 101 128
vars_a               : 7 8 10
vars_b               : 9 13
vars_c               : 10
vars_vect_mat        : 6 102
vars_vect_mat_a      : 14 15
vars_vect_mat_b      : 14 15
vars_vect_mat_c      : 16
vars_vect_mat_d      : 15
while                : 43
while_a              : 67
while_b              : 65

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SC programa_a bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SC programa_a bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SC programa_a bloque

    SC              shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SC . programa_a bloque
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (136) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

    OB              reduce using rule 136 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    programa_a                     shift and go to state 6
    programa_b                     shift and go to state 7
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 5

    (34) tipocompuesto -> ID .

    ID              reduce using rule 34 (tipocompuesto -> ID .)


state 6

    (1) programa -> PROGRAM ID SC programa_a . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 19

state 7

    (2) programa_a -> programa_b .
    (3) programa_a -> programa_b . programa_a
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (136) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

  ! reduce/reduce conflict for OB resolved using rule 2 (programa_a -> programa_b .)
    OB              reduce using rule 2 (programa_a -> programa_b .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

  ! OB              [ reduce using rule 136 (empty -> .) ]

    programa_b                     shift and go to state 7
    programa_a                     shift and go to state 21
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 8

    (4) programa_a -> empty .

    OB              reduce using rule 4 (programa_a -> empty .)


state 9

    (5) programa_b -> vars .

    INT             reduce using rule 5 (programa_b -> vars .)
    FLOAT           reduce using rule 5 (programa_b -> vars .)
    CHAR            reduce using rule 5 (programa_b -> vars .)
    DATAFRAME       reduce using rule 5 (programa_b -> vars .)
    ID              reduce using rule 5 (programa_b -> vars .)
    FILE            reduce using rule 5 (programa_b -> vars .)
    OB              reduce using rule 5 (programa_b -> vars .)


state 10

    (6) programa_b -> vars_vect_mat .

    INT             reduce using rule 6 (programa_b -> vars_vect_mat .)
    FLOAT           reduce using rule 6 (programa_b -> vars_vect_mat .)
    CHAR            reduce using rule 6 (programa_b -> vars_vect_mat .)
    DATAFRAME       reduce using rule 6 (programa_b -> vars_vect_mat .)
    ID              reduce using rule 6 (programa_b -> vars_vect_mat .)
    FILE            reduce using rule 6 (programa_b -> vars_vect_mat .)
    OB              reduce using rule 6 (programa_b -> vars_vect_mat .)


state 11

    (7) vars -> tiposimple . vars_a SC
    (17) vars_vect_mat_b -> tiposimple . ID
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 23

    vars_a                         shift and go to state 22
    vars_b                         shift and go to state 24
    vars_c                         shift and go to state 25

state 12

    (8) vars -> tipocompuesto . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 27

    vars_a                         shift and go to state 26
    vars_b                         shift and go to state 24
    vars_c                         shift and go to state 25

state 13

    (14) vars_vect_mat -> vars_vect_mat_b . vars_vect_mat_a SC
    (15) vars_vect_mat -> vars_vect_mat_b . vars_vect_mat_a vars_vect_mat_d SC
    (16) vars_vect_mat_a -> . vars_vect_mat_c exp CSB
    (18) vars_vect_mat_c -> . OSB

    OSB             shift and go to state 30

    vars_vect_mat_a                shift and go to state 28
    vars_vect_mat_c                shift and go to state 29

state 14

    (30) tiposimple -> INT .

    ID              reduce using rule 30 (tiposimple -> INT .)


state 15

    (31) tiposimple -> FLOAT .

    ID              reduce using rule 31 (tiposimple -> FLOAT .)


state 16

    (32) tiposimple -> CHAR .

    ID              reduce using rule 32 (tiposimple -> CHAR .)


state 17

    (33) tipocompuesto -> DATAFRAME .

    ID              reduce using rule 33 (tipocompuesto -> DATAFRAME .)


state 18

    (35) tipocompuesto -> FILE .

    ID              reduce using rule 35 (tipocompuesto -> FILE .)


state 19

    (1) programa -> PROGRAM ID SC programa_a bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SC programa_a bloque .)


state 20

    (36) bloque -> OB . bloque_a CB
    (37) bloque_a -> . estatuto bloque_a
    (38) bloque_a -> . estatuto
    (39) bloque_a -> . empty
    (40) estatuto -> . asignacion
    (41) estatuto -> . condicion
    (42) estatuto -> . llamada SC
    (43) estatuto -> . while
    (44) estatuto -> . for
    (45) estatuto -> . classcreate
    (46) estatuto -> . vars
    (47) estatuto -> . classdeclare
    (48) estatuto -> . llamadafuncionclase
    (49) estatuto -> . function
    (50) estatuto -> . return
    (51) estatuto -> . print
    (52) estatuto -> . input
    (136) empty -> .
    (117) asignacion -> . ID EQ expresion SC
    (118) asignacion -> . array_access EQ expresion SC
    (108) condicion -> . condicion_c bloque condicion_a
    (80) llamada -> . llamada_d llamada_a CP
    (65) while -> . while_b bloque
    (74) for -> . for_a for_b bloque
    (100) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (115) classdeclare -> . CLASS_ID ID SC
    (116) llamadafuncionclase -> . ID POINT llamada
    (120) function -> . DEF function_e bloque
    (53) return -> . RETURN expresion SC
    (90) print -> . PRINT OP expresion CP SC
    (91) input -> . INPUT OP ID CP SC
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (113) condicion_c -> . IF OP exp CP
    (86) llamada_d -> . llamada_c OP
    (67) while_b -> . while_a OP expresion CP
    (75) for_a -> . FOR
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (66) while_a -> . WHILE
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    CB              reduce using rule 136 (empty -> .)
    ID              shift and go to state 47
    CLASS           shift and go to state 53
    CLASS_ID        shift and go to state 54
    DEF             shift and go to state 56
    RETURN          shift and go to state 57
    PRINT           shift and go to state 58
    INPUT           shift and go to state 59
    IF              shift and go to state 61
    FOR             shift and go to state 64
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    FILE            shift and go to state 18
    WHILE           shift and go to state 66

    bloque_a                       shift and go to state 31
    estatuto                       shift and go to state 32
    empty                          shift and go to state 33
    asignacion                     shift and go to state 34
    condicion                      shift and go to state 35
    llamada                        shift and go to state 36
    while                          shift and go to state 37
    for                            shift and go to state 38
    classcreate                    shift and go to state 39
    vars                           shift and go to state 40
    classdeclare                   shift and go to state 41
    llamadafuncionclase            shift and go to state 42
    function                       shift and go to state 43
    return                         shift and go to state 44
    print                          shift and go to state 45
    input                          shift and go to state 46
    array_access                   shift and go to state 48
    condicion_c                    shift and go to state 49
    llamada_d                      shift and go to state 50
    while_b                        shift and go to state 51
    for_a                          shift and go to state 52
    tiposimple                     shift and go to state 55
    tipocompuesto                  shift and go to state 12
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    while_a                        shift and go to state 63
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 21

    (3) programa_a -> programa_b programa_a .

    OB              reduce using rule 3 (programa_a -> programa_b programa_a .)


state 22

    (7) vars -> tiposimple vars_a . SC

    SC              shift and go to state 68


state 23

    (17) vars_vect_mat_b -> tiposimple ID .
    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    OSB             reduce using rule 17 (vars_vect_mat_b -> tiposimple ID .)
    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 69


state 24

    (9) vars_a -> vars_b .
    (13) vars_c -> vars_b . COMMA

    SC              reduce using rule 9 (vars_a -> vars_b .)
    COMMA           shift and go to state 70


state 25

    (10) vars_a -> vars_c . vars_a
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 27

    vars_c                         shift and go to state 25
    vars_a                         shift and go to state 71
    vars_b                         shift and go to state 24

state 26

    (8) vars -> tipocompuesto vars_a . SC

    SC              shift and go to state 72


state 27

    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 69


state 28

    (14) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a . SC
    (15) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a . vars_vect_mat_d SC
    (19) vars_vect_mat_d -> . OSB exp CSB

    SC              shift and go to state 73
    OSB             shift and go to state 75

    vars_vect_mat_d                shift and go to state 74

state 29

    (16) vars_vect_mat_a -> vars_vect_mat_c . exp CSB
    (68) exp -> . and_exp
    (69) exp -> . exp_b exp
    (71) and_exp -> . expresion
    (72) and_exp -> . and_exp_b and_exp
    (70) exp_b -> . and_exp OR
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (73) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp                            shift and go to state 76
    and_exp                        shift and go to state 77
    exp_b                          shift and go to state 78
    expresion                      shift and go to state 79
    and_exp_b                      shift and go to state 80
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 30

    (18) vars_vect_mat_c -> OSB .

    OP              reduce using rule 18 (vars_vect_mat_c -> OSB .)
    CTE_I           reduce using rule 18 (vars_vect_mat_c -> OSB .)
    CTE_F           reduce using rule 18 (vars_vect_mat_c -> OSB .)
    CTE_CHAR        reduce using rule 18 (vars_vect_mat_c -> OSB .)
    ID              reduce using rule 18 (vars_vect_mat_c -> OSB .)


state 31

    (36) bloque -> OB bloque_a . CB

    CB              shift and go to state 93


state 32

    (37) bloque_a -> estatuto . bloque_a
    (38) bloque_a -> estatuto .
    (37) bloque_a -> . estatuto bloque_a
    (38) bloque_a -> . estatuto
    (39) bloque_a -> . empty
    (40) estatuto -> . asignacion
    (41) estatuto -> . condicion
    (42) estatuto -> . llamada SC
    (43) estatuto -> . while
    (44) estatuto -> . for
    (45) estatuto -> . classcreate
    (46) estatuto -> . vars
    (47) estatuto -> . classdeclare
    (48) estatuto -> . llamadafuncionclase
    (49) estatuto -> . function
    (50) estatuto -> . return
    (51) estatuto -> . print
    (52) estatuto -> . input
    (136) empty -> .
    (117) asignacion -> . ID EQ expresion SC
    (118) asignacion -> . array_access EQ expresion SC
    (108) condicion -> . condicion_c bloque condicion_a
    (80) llamada -> . llamada_d llamada_a CP
    (65) while -> . while_b bloque
    (74) for -> . for_a for_b bloque
    (100) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (115) classdeclare -> . CLASS_ID ID SC
    (116) llamadafuncionclase -> . ID POINT llamada
    (120) function -> . DEF function_e bloque
    (53) return -> . RETURN expresion SC
    (90) print -> . PRINT OP expresion CP SC
    (91) input -> . INPUT OP ID CP SC
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (113) condicion_c -> . IF OP exp CP
    (86) llamada_d -> . llamada_c OP
    (67) while_b -> . while_a OP expresion CP
    (75) for_a -> . FOR
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (66) while_a -> . WHILE
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

  ! reduce/reduce conflict for CB resolved using rule 38 (bloque_a -> estatuto .)
    CB              reduce using rule 38 (bloque_a -> estatuto .)
    ID              shift and go to state 47
    CLASS           shift and go to state 53
    CLASS_ID        shift and go to state 54
    DEF             shift and go to state 56
    RETURN          shift and go to state 57
    PRINT           shift and go to state 58
    INPUT           shift and go to state 59
    IF              shift and go to state 61
    FOR             shift and go to state 64
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    FILE            shift and go to state 18
    WHILE           shift and go to state 66

  ! CB              [ reduce using rule 136 (empty -> .) ]

    estatuto                       shift and go to state 32
    bloque_a                       shift and go to state 94
    empty                          shift and go to state 33
    asignacion                     shift and go to state 34
    condicion                      shift and go to state 35
    llamada                        shift and go to state 36
    while                          shift and go to state 37
    for                            shift and go to state 38
    classcreate                    shift and go to state 39
    vars                           shift and go to state 40
    classdeclare                   shift and go to state 41
    llamadafuncionclase            shift and go to state 42
    function                       shift and go to state 43
    return                         shift and go to state 44
    print                          shift and go to state 45
    input                          shift and go to state 46
    array_access                   shift and go to state 48
    condicion_c                    shift and go to state 49
    llamada_d                      shift and go to state 50
    while_b                        shift and go to state 51
    for_a                          shift and go to state 52
    tiposimple                     shift and go to state 55
    tipocompuesto                  shift and go to state 12
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    while_a                        shift and go to state 63
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 33

    (39) bloque_a -> empty .

    CB              reduce using rule 39 (bloque_a -> empty .)


state 34

    (40) estatuto -> asignacion .

    ID              reduce using rule 40 (estatuto -> asignacion .)
    CLASS           reduce using rule 40 (estatuto -> asignacion .)
    CLASS_ID        reduce using rule 40 (estatuto -> asignacion .)
    DEF             reduce using rule 40 (estatuto -> asignacion .)
    RETURN          reduce using rule 40 (estatuto -> asignacion .)
    PRINT           reduce using rule 40 (estatuto -> asignacion .)
    INPUT           reduce using rule 40 (estatuto -> asignacion .)
    IF              reduce using rule 40 (estatuto -> asignacion .)
    FOR             reduce using rule 40 (estatuto -> asignacion .)
    INT             reduce using rule 40 (estatuto -> asignacion .)
    FLOAT           reduce using rule 40 (estatuto -> asignacion .)
    CHAR            reduce using rule 40 (estatuto -> asignacion .)
    DATAFRAME       reduce using rule 40 (estatuto -> asignacion .)
    FILE            reduce using rule 40 (estatuto -> asignacion .)
    WHILE           reduce using rule 40 (estatuto -> asignacion .)
    CB              reduce using rule 40 (estatuto -> asignacion .)


state 35

    (41) estatuto -> condicion .

    ID              reduce using rule 41 (estatuto -> condicion .)
    CLASS           reduce using rule 41 (estatuto -> condicion .)
    CLASS_ID        reduce using rule 41 (estatuto -> condicion .)
    DEF             reduce using rule 41 (estatuto -> condicion .)
    RETURN          reduce using rule 41 (estatuto -> condicion .)
    PRINT           reduce using rule 41 (estatuto -> condicion .)
    INPUT           reduce using rule 41 (estatuto -> condicion .)
    IF              reduce using rule 41 (estatuto -> condicion .)
    FOR             reduce using rule 41 (estatuto -> condicion .)
    INT             reduce using rule 41 (estatuto -> condicion .)
    FLOAT           reduce using rule 41 (estatuto -> condicion .)
    CHAR            reduce using rule 41 (estatuto -> condicion .)
    DATAFRAME       reduce using rule 41 (estatuto -> condicion .)
    FILE            reduce using rule 41 (estatuto -> condicion .)
    WHILE           reduce using rule 41 (estatuto -> condicion .)
    CB              reduce using rule 41 (estatuto -> condicion .)


state 36

    (42) estatuto -> llamada . SC

    SC              shift and go to state 95


state 37

    (43) estatuto -> while .

    ID              reduce using rule 43 (estatuto -> while .)
    CLASS           reduce using rule 43 (estatuto -> while .)
    CLASS_ID        reduce using rule 43 (estatuto -> while .)
    DEF             reduce using rule 43 (estatuto -> while .)
    RETURN          reduce using rule 43 (estatuto -> while .)
    PRINT           reduce using rule 43 (estatuto -> while .)
    INPUT           reduce using rule 43 (estatuto -> while .)
    IF              reduce using rule 43 (estatuto -> while .)
    FOR             reduce using rule 43 (estatuto -> while .)
    INT             reduce using rule 43 (estatuto -> while .)
    FLOAT           reduce using rule 43 (estatuto -> while .)
    CHAR            reduce using rule 43 (estatuto -> while .)
    DATAFRAME       reduce using rule 43 (estatuto -> while .)
    FILE            reduce using rule 43 (estatuto -> while .)
    WHILE           reduce using rule 43 (estatuto -> while .)
    CB              reduce using rule 43 (estatuto -> while .)


state 38

    (44) estatuto -> for .

    ID              reduce using rule 44 (estatuto -> for .)
    CLASS           reduce using rule 44 (estatuto -> for .)
    CLASS_ID        reduce using rule 44 (estatuto -> for .)
    DEF             reduce using rule 44 (estatuto -> for .)
    RETURN          reduce using rule 44 (estatuto -> for .)
    PRINT           reduce using rule 44 (estatuto -> for .)
    INPUT           reduce using rule 44 (estatuto -> for .)
    IF              reduce using rule 44 (estatuto -> for .)
    FOR             reduce using rule 44 (estatuto -> for .)
    INT             reduce using rule 44 (estatuto -> for .)
    FLOAT           reduce using rule 44 (estatuto -> for .)
    CHAR            reduce using rule 44 (estatuto -> for .)
    DATAFRAME       reduce using rule 44 (estatuto -> for .)
    FILE            reduce using rule 44 (estatuto -> for .)
    WHILE           reduce using rule 44 (estatuto -> for .)
    CB              reduce using rule 44 (estatuto -> for .)


state 39

    (45) estatuto -> classcreate .

    ID              reduce using rule 45 (estatuto -> classcreate .)
    CLASS           reduce using rule 45 (estatuto -> classcreate .)
    CLASS_ID        reduce using rule 45 (estatuto -> classcreate .)
    DEF             reduce using rule 45 (estatuto -> classcreate .)
    RETURN          reduce using rule 45 (estatuto -> classcreate .)
    PRINT           reduce using rule 45 (estatuto -> classcreate .)
    INPUT           reduce using rule 45 (estatuto -> classcreate .)
    IF              reduce using rule 45 (estatuto -> classcreate .)
    FOR             reduce using rule 45 (estatuto -> classcreate .)
    INT             reduce using rule 45 (estatuto -> classcreate .)
    FLOAT           reduce using rule 45 (estatuto -> classcreate .)
    CHAR            reduce using rule 45 (estatuto -> classcreate .)
    DATAFRAME       reduce using rule 45 (estatuto -> classcreate .)
    FILE            reduce using rule 45 (estatuto -> classcreate .)
    WHILE           reduce using rule 45 (estatuto -> classcreate .)
    CB              reduce using rule 45 (estatuto -> classcreate .)


state 40

    (46) estatuto -> vars .

    ID              reduce using rule 46 (estatuto -> vars .)
    CLASS           reduce using rule 46 (estatuto -> vars .)
    CLASS_ID        reduce using rule 46 (estatuto -> vars .)
    DEF             reduce using rule 46 (estatuto -> vars .)
    RETURN          reduce using rule 46 (estatuto -> vars .)
    PRINT           reduce using rule 46 (estatuto -> vars .)
    INPUT           reduce using rule 46 (estatuto -> vars .)
    IF              reduce using rule 46 (estatuto -> vars .)
    FOR             reduce using rule 46 (estatuto -> vars .)
    INT             reduce using rule 46 (estatuto -> vars .)
    FLOAT           reduce using rule 46 (estatuto -> vars .)
    CHAR            reduce using rule 46 (estatuto -> vars .)
    DATAFRAME       reduce using rule 46 (estatuto -> vars .)
    FILE            reduce using rule 46 (estatuto -> vars .)
    WHILE           reduce using rule 46 (estatuto -> vars .)
    CB              reduce using rule 46 (estatuto -> vars .)


state 41

    (47) estatuto -> classdeclare .

    ID              reduce using rule 47 (estatuto -> classdeclare .)
    CLASS           reduce using rule 47 (estatuto -> classdeclare .)
    CLASS_ID        reduce using rule 47 (estatuto -> classdeclare .)
    DEF             reduce using rule 47 (estatuto -> classdeclare .)
    RETURN          reduce using rule 47 (estatuto -> classdeclare .)
    PRINT           reduce using rule 47 (estatuto -> classdeclare .)
    INPUT           reduce using rule 47 (estatuto -> classdeclare .)
    IF              reduce using rule 47 (estatuto -> classdeclare .)
    FOR             reduce using rule 47 (estatuto -> classdeclare .)
    INT             reduce using rule 47 (estatuto -> classdeclare .)
    FLOAT           reduce using rule 47 (estatuto -> classdeclare .)
    CHAR            reduce using rule 47 (estatuto -> classdeclare .)
    DATAFRAME       reduce using rule 47 (estatuto -> classdeclare .)
    FILE            reduce using rule 47 (estatuto -> classdeclare .)
    WHILE           reduce using rule 47 (estatuto -> classdeclare .)
    CB              reduce using rule 47 (estatuto -> classdeclare .)


state 42

    (48) estatuto -> llamadafuncionclase .

    ID              reduce using rule 48 (estatuto -> llamadafuncionclase .)
    CLASS           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    CLASS_ID        reduce using rule 48 (estatuto -> llamadafuncionclase .)
    DEF             reduce using rule 48 (estatuto -> llamadafuncionclase .)
    RETURN          reduce using rule 48 (estatuto -> llamadafuncionclase .)
    PRINT           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    INPUT           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    IF              reduce using rule 48 (estatuto -> llamadafuncionclase .)
    FOR             reduce using rule 48 (estatuto -> llamadafuncionclase .)
    INT             reduce using rule 48 (estatuto -> llamadafuncionclase .)
    FLOAT           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    CHAR            reduce using rule 48 (estatuto -> llamadafuncionclase .)
    DATAFRAME       reduce using rule 48 (estatuto -> llamadafuncionclase .)
    FILE            reduce using rule 48 (estatuto -> llamadafuncionclase .)
    WHILE           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    CB              reduce using rule 48 (estatuto -> llamadafuncionclase .)


state 43

    (49) estatuto -> function .

    ID              reduce using rule 49 (estatuto -> function .)
    CLASS           reduce using rule 49 (estatuto -> function .)
    CLASS_ID        reduce using rule 49 (estatuto -> function .)
    DEF             reduce using rule 49 (estatuto -> function .)
    RETURN          reduce using rule 49 (estatuto -> function .)
    PRINT           reduce using rule 49 (estatuto -> function .)
    INPUT           reduce using rule 49 (estatuto -> function .)
    IF              reduce using rule 49 (estatuto -> function .)
    FOR             reduce using rule 49 (estatuto -> function .)
    INT             reduce using rule 49 (estatuto -> function .)
    FLOAT           reduce using rule 49 (estatuto -> function .)
    CHAR            reduce using rule 49 (estatuto -> function .)
    DATAFRAME       reduce using rule 49 (estatuto -> function .)
    FILE            reduce using rule 49 (estatuto -> function .)
    WHILE           reduce using rule 49 (estatuto -> function .)
    CB              reduce using rule 49 (estatuto -> function .)


state 44

    (50) estatuto -> return .

    ID              reduce using rule 50 (estatuto -> return .)
    CLASS           reduce using rule 50 (estatuto -> return .)
    CLASS_ID        reduce using rule 50 (estatuto -> return .)
    DEF             reduce using rule 50 (estatuto -> return .)
    RETURN          reduce using rule 50 (estatuto -> return .)
    PRINT           reduce using rule 50 (estatuto -> return .)
    INPUT           reduce using rule 50 (estatuto -> return .)
    IF              reduce using rule 50 (estatuto -> return .)
    FOR             reduce using rule 50 (estatuto -> return .)
    INT             reduce using rule 50 (estatuto -> return .)
    FLOAT           reduce using rule 50 (estatuto -> return .)
    CHAR            reduce using rule 50 (estatuto -> return .)
    DATAFRAME       reduce using rule 50 (estatuto -> return .)
    FILE            reduce using rule 50 (estatuto -> return .)
    WHILE           reduce using rule 50 (estatuto -> return .)
    CB              reduce using rule 50 (estatuto -> return .)


state 45

    (51) estatuto -> print .

    ID              reduce using rule 51 (estatuto -> print .)
    CLASS           reduce using rule 51 (estatuto -> print .)
    CLASS_ID        reduce using rule 51 (estatuto -> print .)
    DEF             reduce using rule 51 (estatuto -> print .)
    RETURN          reduce using rule 51 (estatuto -> print .)
    PRINT           reduce using rule 51 (estatuto -> print .)
    INPUT           reduce using rule 51 (estatuto -> print .)
    IF              reduce using rule 51 (estatuto -> print .)
    FOR             reduce using rule 51 (estatuto -> print .)
    INT             reduce using rule 51 (estatuto -> print .)
    FLOAT           reduce using rule 51 (estatuto -> print .)
    CHAR            reduce using rule 51 (estatuto -> print .)
    DATAFRAME       reduce using rule 51 (estatuto -> print .)
    FILE            reduce using rule 51 (estatuto -> print .)
    WHILE           reduce using rule 51 (estatuto -> print .)
    CB              reduce using rule 51 (estatuto -> print .)


state 46

    (52) estatuto -> input .

    ID              reduce using rule 52 (estatuto -> input .)
    CLASS           reduce using rule 52 (estatuto -> input .)
    CLASS_ID        reduce using rule 52 (estatuto -> input .)
    DEF             reduce using rule 52 (estatuto -> input .)
    RETURN          reduce using rule 52 (estatuto -> input .)
    PRINT           reduce using rule 52 (estatuto -> input .)
    INPUT           reduce using rule 52 (estatuto -> input .)
    IF              reduce using rule 52 (estatuto -> input .)
    FOR             reduce using rule 52 (estatuto -> input .)
    INT             reduce using rule 52 (estatuto -> input .)
    FLOAT           reduce using rule 52 (estatuto -> input .)
    CHAR            reduce using rule 52 (estatuto -> input .)
    DATAFRAME       reduce using rule 52 (estatuto -> input .)
    FILE            reduce using rule 52 (estatuto -> input .)
    WHILE           reduce using rule 52 (estatuto -> input .)
    CB              reduce using rule 52 (estatuto -> input .)


state 47

    (117) asignacion -> ID . EQ expresion SC
    (116) llamadafuncionclase -> ID . POINT llamada
    (34) tipocompuesto -> ID .
    (85) llamada_c -> ID .
    (132) array_access_a -> ID .

    EQ              shift and go to state 96
    POINT           shift and go to state 97
    ID              reduce using rule 34 (tipocompuesto -> ID .)
    OP              reduce using rule 85 (llamada_c -> ID .)
    OSB             reduce using rule 132 (array_access_a -> ID .)


state 48

    (118) asignacion -> array_access . EQ expresion SC

    EQ              shift and go to state 98


state 49

    (108) condicion -> condicion_c . bloque condicion_a
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 99

state 50

    (80) llamada -> llamada_d . llamada_a CP
    (81) llamada_a -> . llamada_e llamada_b
    (82) llamada_a -> . llamada_b
    (87) llamada_e -> . expresion
    (88) llamada_e -> . CTE_STRING
    (83) llamada_b -> . llamada_f llamada_a
    (84) llamada_b -> . empty
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (89) llamada_f -> . COMMA
    (136) empty -> .
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    CTE_STRING      shift and go to state 104
    COMMA           shift and go to state 107
    CP              reduce using rule 136 (empty -> .)
    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    llamada_d                      shift and go to state 50
    llamada_a                      shift and go to state 100
    llamada_e                      shift and go to state 101
    llamada_b                      shift and go to state 102
    expresion                      shift and go to state 103
    llamada_f                      shift and go to state 105
    empty                          shift and go to state 106
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 51

    (65) while -> while_b . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 108

state 52

    (74) for -> for_a . for_b bloque
    (76) for_b -> . for_e asignacionsencilla CP
    (79) for_e -> . for_d SC
    (78) for_d -> . for_c expresion
    (77) for_c -> . OP asignacionsencilla SC

    OP              shift and go to state 113

    for_b                          shift and go to state 109
    for_e                          shift and go to state 110
    for_d                          shift and go to state 111
    for_c                          shift and go to state 112

state 53

    (100) classcreate -> CLASS . CLASS_ID OB classcreate_a function classcreate_c CB

    CLASS_ID        shift and go to state 114


state 54

    (115) classdeclare -> CLASS_ID . ID SC

    ID              shift and go to state 115


state 55

    (7) vars -> tiposimple . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 27

    vars_a                         shift and go to state 22
    vars_b                         shift and go to state 24
    vars_c                         shift and go to state 25

state 56

    (120) function -> DEF . function_e bloque
    (128) function_e -> . function_c OP function_b CP vars
    (129) function_e -> . function_c OP function_b CP empty
    (126) function_c -> . function_a ID
    (121) function_a -> . VOID
    (122) function_a -> . tiposimple
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR

    VOID            shift and go to state 119
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    function_e                     shift and go to state 116
    function_c                     shift and go to state 117
    function_a                     shift and go to state 118
    tiposimple                     shift and go to state 120

state 57

    (53) return -> RETURN . expresion SC
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 121
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 58

    (90) print -> PRINT . OP expresion CP SC

    OP              shift and go to state 122


state 59

    (91) input -> INPUT . OP ID CP SC

    OP              shift and go to state 123


state 60

    (130) array_access -> array_access_c . array_access_d exp CSB
    (131) array_access -> array_access_c .
    (135) array_access_d -> . OSB

    EQ              reduce using rule 131 (array_access -> array_access_c .)
    MULT            reduce using rule 131 (array_access -> array_access_c .)
    DIV             reduce using rule 131 (array_access -> array_access_c .)
    ADD             reduce using rule 131 (array_access -> array_access_c .)
    SUB             reduce using rule 131 (array_access -> array_access_c .)
    LT              reduce using rule 131 (array_access -> array_access_c .)
    GT              reduce using rule 131 (array_access -> array_access_c .)
    NE              reduce using rule 131 (array_access -> array_access_c .)
    EQEQ            reduce using rule 131 (array_access -> array_access_c .)
    LE              reduce using rule 131 (array_access -> array_access_c .)
    GE              reduce using rule 131 (array_access -> array_access_c .)
    AND             reduce using rule 131 (array_access -> array_access_c .)
    OR              reduce using rule 131 (array_access -> array_access_c .)
    CSB             reduce using rule 131 (array_access -> array_access_c .)
    COMMA           reduce using rule 131 (array_access -> array_access_c .)
    CP              reduce using rule 131 (array_access -> array_access_c .)
    SC              reduce using rule 131 (array_access -> array_access_c .)
    OSB             shift and go to state 125

    array_access_d                 shift and go to state 124

state 61

    (113) condicion_c -> IF . OP exp CP

    OP              shift and go to state 126


state 62

    (86) llamada_d -> llamada_c . OP

    OP              shift and go to state 127


state 63

    (67) while_b -> while_a . OP expresion CP

    OP              shift and go to state 128


state 64

    (75) for_a -> FOR .

    OP              reduce using rule 75 (for_a -> FOR .)


state 65

    (134) array_access_c -> array_access_b . exp CSB
    (68) exp -> . and_exp
    (69) exp -> . exp_b exp
    (71) and_exp -> . expresion
    (72) and_exp -> . and_exp_b and_exp
    (70) exp_b -> . and_exp OR
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (73) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    array_access_b                 shift and go to state 65
    exp                            shift and go to state 129
    and_exp                        shift and go to state 77
    exp_b                          shift and go to state 78
    expresion                      shift and go to state 79
    and_exp_b                      shift and go to state 80
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_a                 shift and go to state 67

state 66

    (66) while_a -> WHILE .

    OP              reduce using rule 66 (while_a -> WHILE .)


state 67

    (133) array_access_b -> array_access_a . OSB

    OSB             shift and go to state 130


state 68

    (7) vars -> tiposimple vars_a SC .

    INT             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FLOAT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CHAR            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DATAFRAME       reduce using rule 7 (vars -> tiposimple vars_a SC .)
    ID              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FILE            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    OB              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS_ID        reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DEF             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    RETURN          reduce using rule 7 (vars -> tiposimple vars_a SC .)
    PRINT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    INPUT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    IF              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FOR             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    WHILE           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CB              reduce using rule 7 (vars -> tiposimple vars_a SC .)


state 69

    (12) vars_b -> ID EQ . expresion
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 131
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 70

    (13) vars_c -> vars_b COMMA .

    ID              reduce using rule 13 (vars_c -> vars_b COMMA .)


state 71

    (10) vars_a -> vars_c vars_a .

    SC              reduce using rule 10 (vars_a -> vars_c vars_a .)


state 72

    (8) vars -> tipocompuesto vars_a SC .

    INT             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FLOAT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CHAR            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DATAFRAME       reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    ID              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FILE            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    OB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS_ID        reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DEF             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    RETURN          reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    PRINT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    INPUT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    IF              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FOR             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    WHILE           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)


state 73

    (14) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .

    INT             reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    FLOAT           reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    CHAR            reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    ID              reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    FILE            reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    OB              reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    DEF             reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)


state 74

    (15) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d . SC

    SC              shift and go to state 132


state 75

    (19) vars_vect_mat_d -> OSB . exp CSB
    (68) exp -> . and_exp
    (69) exp -> . exp_b exp
    (71) and_exp -> . expresion
    (72) and_exp -> . and_exp_b and_exp
    (70) exp_b -> . and_exp OR
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (73) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp                            shift and go to state 133
    and_exp                        shift and go to state 77
    exp_b                          shift and go to state 78
    expresion                      shift and go to state 79
    and_exp_b                      shift and go to state 80
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 76

    (16) vars_vect_mat_a -> vars_vect_mat_c exp . CSB

    CSB             shift and go to state 134


state 77

    (68) exp -> and_exp .
    (70) exp_b -> and_exp . OR

    CSB             reduce using rule 68 (exp -> and_exp .)
    CP              reduce using rule 68 (exp -> and_exp .)
    OR              shift and go to state 135


state 78

    (69) exp -> exp_b . exp
    (68) exp -> . and_exp
    (69) exp -> . exp_b exp
    (71) and_exp -> . expresion
    (72) and_exp -> . and_exp_b and_exp
    (70) exp_b -> . and_exp OR
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (73) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp_b                          shift and go to state 78
    exp                            shift and go to state 136
    and_exp                        shift and go to state 77
    expresion                      shift and go to state 79
    and_exp_b                      shift and go to state 80
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 79

    (71) and_exp -> expresion .
    (73) and_exp_b -> expresion . AND

    OR              reduce using rule 71 (and_exp -> expresion .)
    CSB             reduce using rule 71 (and_exp -> expresion .)
    CP              reduce using rule 71 (and_exp -> expresion .)
    AND             shift and go to state 137


state 80

    (72) and_exp -> and_exp_b . and_exp
    (71) and_exp -> . expresion
    (72) and_exp -> . and_exp_b and_exp
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (73) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    and_exp_b                      shift and go to state 80
    and_exp                        shift and go to state 138
    expresion                      shift and go to state 79
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 81

    (54) expresion -> m_exp .
    (55) expresion -> m_exp . expresion_a m_exp
    (56) expresion_a -> . LT
    (57) expresion_a -> . GT
    (58) expresion_a -> . NE
    (59) expresion_a -> . EQEQ
    (60) expresion_a -> . LE
    (61) expresion_a -> . GE

    AND             reduce using rule 54 (expresion -> m_exp .)
    OR              reduce using rule 54 (expresion -> m_exp .)
    CSB             reduce using rule 54 (expresion -> m_exp .)
    COMMA           reduce using rule 54 (expresion -> m_exp .)
    CP              reduce using rule 54 (expresion -> m_exp .)
    SC              reduce using rule 54 (expresion -> m_exp .)
    LT              shift and go to state 140
    GT              shift and go to state 141
    NE              shift and go to state 142
    EQEQ            shift and go to state 143
    LE              shift and go to state 144
    GE              shift and go to state 145

    expresion_a                    shift and go to state 139

state 82

    (20) m_exp -> m_exp_b .
    (21) m_exp -> m_exp_b . m_exp_a m_exp
    (22) m_exp_a -> . ADD
    (23) m_exp_a -> . SUB

    LT              reduce using rule 20 (m_exp -> m_exp_b .)
    GT              reduce using rule 20 (m_exp -> m_exp_b .)
    NE              reduce using rule 20 (m_exp -> m_exp_b .)
    EQEQ            reduce using rule 20 (m_exp -> m_exp_b .)
    LE              reduce using rule 20 (m_exp -> m_exp_b .)
    GE              reduce using rule 20 (m_exp -> m_exp_b .)
    AND             reduce using rule 20 (m_exp -> m_exp_b .)
    OR              reduce using rule 20 (m_exp -> m_exp_b .)
    CSB             reduce using rule 20 (m_exp -> m_exp_b .)
    COMMA           reduce using rule 20 (m_exp -> m_exp_b .)
    CP              reduce using rule 20 (m_exp -> m_exp_b .)
    SC              reduce using rule 20 (m_exp -> m_exp_b .)
    ADD             shift and go to state 147
    SUB             shift and go to state 148

    m_exp_a                        shift and go to state 146

state 83

    (24) m_exp_b -> term .

    ADD             reduce using rule 24 (m_exp_b -> term .)
    SUB             reduce using rule 24 (m_exp_b -> term .)
    LT              reduce using rule 24 (m_exp_b -> term .)
    GT              reduce using rule 24 (m_exp_b -> term .)
    NE              reduce using rule 24 (m_exp_b -> term .)
    EQEQ            reduce using rule 24 (m_exp_b -> term .)
    LE              reduce using rule 24 (m_exp_b -> term .)
    GE              reduce using rule 24 (m_exp_b -> term .)
    AND             reduce using rule 24 (m_exp_b -> term .)
    OR              reduce using rule 24 (m_exp_b -> term .)
    CSB             reduce using rule 24 (m_exp_b -> term .)
    COMMA           reduce using rule 24 (m_exp_b -> term .)
    CP              reduce using rule 24 (m_exp_b -> term .)
    SC              reduce using rule 24 (m_exp_b -> term .)


state 84

    (25) term -> term_b .
    (26) term -> term_b . term_a term
    (27) term_a -> . MULT
    (28) term_a -> . DIV

    ADD             reduce using rule 25 (term -> term_b .)
    SUB             reduce using rule 25 (term -> term_b .)
    LT              reduce using rule 25 (term -> term_b .)
    GT              reduce using rule 25 (term -> term_b .)
    NE              reduce using rule 25 (term -> term_b .)
    EQEQ            reduce using rule 25 (term -> term_b .)
    LE              reduce using rule 25 (term -> term_b .)
    GE              reduce using rule 25 (term -> term_b .)
    AND             reduce using rule 25 (term -> term_b .)
    OR              reduce using rule 25 (term -> term_b .)
    CSB             reduce using rule 25 (term -> term_b .)
    COMMA           reduce using rule 25 (term -> term_b .)
    CP              reduce using rule 25 (term -> term_b .)
    SC              reduce using rule 25 (term -> term_b .)
    MULT            shift and go to state 150
    DIV             shift and go to state 151

    term_a                         shift and go to state 149

state 85

    (29) term_b -> fact .

    MULT            reduce using rule 29 (term_b -> fact .)
    DIV             reduce using rule 29 (term_b -> fact .)
    ADD             reduce using rule 29 (term_b -> fact .)
    SUB             reduce using rule 29 (term_b -> fact .)
    LT              reduce using rule 29 (term_b -> fact .)
    GT              reduce using rule 29 (term_b -> fact .)
    NE              reduce using rule 29 (term_b -> fact .)
    EQEQ            reduce using rule 29 (term_b -> fact .)
    LE              reduce using rule 29 (term_b -> fact .)
    GE              reduce using rule 29 (term_b -> fact .)
    AND             reduce using rule 29 (term_b -> fact .)
    OR              reduce using rule 29 (term_b -> fact .)
    CSB             reduce using rule 29 (term_b -> fact .)
    COMMA           reduce using rule 29 (term_b -> fact .)
    CP              reduce using rule 29 (term_b -> fact .)
    SC              reduce using rule 29 (term_b -> fact .)


state 86

    (92) fact -> OP . fact_a exp CP
    (99) fact_a -> . empty
    (136) empty -> .

    OP              reduce using rule 136 (empty -> .)
    CTE_I           reduce using rule 136 (empty -> .)
    CTE_F           reduce using rule 136 (empty -> .)
    CTE_CHAR        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)

    fact_a                         shift and go to state 152
    empty                          shift and go to state 153

state 87

    (93) fact -> CTE_I .

    MULT            reduce using rule 93 (fact -> CTE_I .)
    DIV             reduce using rule 93 (fact -> CTE_I .)
    ADD             reduce using rule 93 (fact -> CTE_I .)
    SUB             reduce using rule 93 (fact -> CTE_I .)
    LT              reduce using rule 93 (fact -> CTE_I .)
    GT              reduce using rule 93 (fact -> CTE_I .)
    NE              reduce using rule 93 (fact -> CTE_I .)
    EQEQ            reduce using rule 93 (fact -> CTE_I .)
    LE              reduce using rule 93 (fact -> CTE_I .)
    GE              reduce using rule 93 (fact -> CTE_I .)
    AND             reduce using rule 93 (fact -> CTE_I .)
    OR              reduce using rule 93 (fact -> CTE_I .)
    CSB             reduce using rule 93 (fact -> CTE_I .)
    COMMA           reduce using rule 93 (fact -> CTE_I .)
    CP              reduce using rule 93 (fact -> CTE_I .)
    SC              reduce using rule 93 (fact -> CTE_I .)


state 88

    (94) fact -> CTE_F .

    MULT            reduce using rule 94 (fact -> CTE_F .)
    DIV             reduce using rule 94 (fact -> CTE_F .)
    ADD             reduce using rule 94 (fact -> CTE_F .)
    SUB             reduce using rule 94 (fact -> CTE_F .)
    LT              reduce using rule 94 (fact -> CTE_F .)
    GT              reduce using rule 94 (fact -> CTE_F .)
    NE              reduce using rule 94 (fact -> CTE_F .)
    EQEQ            reduce using rule 94 (fact -> CTE_F .)
    LE              reduce using rule 94 (fact -> CTE_F .)
    GE              reduce using rule 94 (fact -> CTE_F .)
    AND             reduce using rule 94 (fact -> CTE_F .)
    OR              reduce using rule 94 (fact -> CTE_F .)
    CSB             reduce using rule 94 (fact -> CTE_F .)
    COMMA           reduce using rule 94 (fact -> CTE_F .)
    CP              reduce using rule 94 (fact -> CTE_F .)
    SC              reduce using rule 94 (fact -> CTE_F .)


state 89

    (95) fact -> CTE_CHAR .

    MULT            reduce using rule 95 (fact -> CTE_CHAR .)
    DIV             reduce using rule 95 (fact -> CTE_CHAR .)
    ADD             reduce using rule 95 (fact -> CTE_CHAR .)
    SUB             reduce using rule 95 (fact -> CTE_CHAR .)
    LT              reduce using rule 95 (fact -> CTE_CHAR .)
    GT              reduce using rule 95 (fact -> CTE_CHAR .)
    NE              reduce using rule 95 (fact -> CTE_CHAR .)
    EQEQ            reduce using rule 95 (fact -> CTE_CHAR .)
    LE              reduce using rule 95 (fact -> CTE_CHAR .)
    GE              reduce using rule 95 (fact -> CTE_CHAR .)
    AND             reduce using rule 95 (fact -> CTE_CHAR .)
    OR              reduce using rule 95 (fact -> CTE_CHAR .)
    CSB             reduce using rule 95 (fact -> CTE_CHAR .)
    COMMA           reduce using rule 95 (fact -> CTE_CHAR .)
    CP              reduce using rule 95 (fact -> CTE_CHAR .)
    SC              reduce using rule 95 (fact -> CTE_CHAR .)


state 90

    (96) fact -> ID .
    (85) llamada_c -> ID .
    (132) array_access_a -> ID .

    MULT            reduce using rule 96 (fact -> ID .)
    DIV             reduce using rule 96 (fact -> ID .)
    ADD             reduce using rule 96 (fact -> ID .)
    SUB             reduce using rule 96 (fact -> ID .)
    LT              reduce using rule 96 (fact -> ID .)
    GT              reduce using rule 96 (fact -> ID .)
    NE              reduce using rule 96 (fact -> ID .)
    EQEQ            reduce using rule 96 (fact -> ID .)
    LE              reduce using rule 96 (fact -> ID .)
    GE              reduce using rule 96 (fact -> ID .)
    AND             reduce using rule 96 (fact -> ID .)
    OR              reduce using rule 96 (fact -> ID .)
    CSB             reduce using rule 96 (fact -> ID .)
    COMMA           reduce using rule 96 (fact -> ID .)
    CP              reduce using rule 96 (fact -> ID .)
    SC              reduce using rule 96 (fact -> ID .)
    OP              reduce using rule 85 (llamada_c -> ID .)
    OSB             reduce using rule 132 (array_access_a -> ID .)


state 91

    (97) fact -> llamada .

    MULT            reduce using rule 97 (fact -> llamada .)
    DIV             reduce using rule 97 (fact -> llamada .)
    ADD             reduce using rule 97 (fact -> llamada .)
    SUB             reduce using rule 97 (fact -> llamada .)
    LT              reduce using rule 97 (fact -> llamada .)
    GT              reduce using rule 97 (fact -> llamada .)
    NE              reduce using rule 97 (fact -> llamada .)
    EQEQ            reduce using rule 97 (fact -> llamada .)
    LE              reduce using rule 97 (fact -> llamada .)
    GE              reduce using rule 97 (fact -> llamada .)
    AND             reduce using rule 97 (fact -> llamada .)
    OR              reduce using rule 97 (fact -> llamada .)
    CSB             reduce using rule 97 (fact -> llamada .)
    COMMA           reduce using rule 97 (fact -> llamada .)
    CP              reduce using rule 97 (fact -> llamada .)
    SC              reduce using rule 97 (fact -> llamada .)


state 92

    (98) fact -> array_access .

    MULT            reduce using rule 98 (fact -> array_access .)
    DIV             reduce using rule 98 (fact -> array_access .)
    ADD             reduce using rule 98 (fact -> array_access .)
    SUB             reduce using rule 98 (fact -> array_access .)
    LT              reduce using rule 98 (fact -> array_access .)
    GT              reduce using rule 98 (fact -> array_access .)
    NE              reduce using rule 98 (fact -> array_access .)
    EQEQ            reduce using rule 98 (fact -> array_access .)
    LE              reduce using rule 98 (fact -> array_access .)
    GE              reduce using rule 98 (fact -> array_access .)
    AND             reduce using rule 98 (fact -> array_access .)
    OR              reduce using rule 98 (fact -> array_access .)
    CSB             reduce using rule 98 (fact -> array_access .)
    COMMA           reduce using rule 98 (fact -> array_access .)
    CP              reduce using rule 98 (fact -> array_access .)
    SC              reduce using rule 98 (fact -> array_access .)


state 93

    (36) bloque -> OB bloque_a CB .

    $end            reduce using rule 36 (bloque -> OB bloque_a CB .)
    ELSE            reduce using rule 36 (bloque -> OB bloque_a CB .)
    ID              reduce using rule 36 (bloque -> OB bloque_a CB .)
    CLASS           reduce using rule 36 (bloque -> OB bloque_a CB .)
    CLASS_ID        reduce using rule 36 (bloque -> OB bloque_a CB .)
    DEF             reduce using rule 36 (bloque -> OB bloque_a CB .)
    RETURN          reduce using rule 36 (bloque -> OB bloque_a CB .)
    PRINT           reduce using rule 36 (bloque -> OB bloque_a CB .)
    INPUT           reduce using rule 36 (bloque -> OB bloque_a CB .)
    IF              reduce using rule 36 (bloque -> OB bloque_a CB .)
    FOR             reduce using rule 36 (bloque -> OB bloque_a CB .)
    INT             reduce using rule 36 (bloque -> OB bloque_a CB .)
    FLOAT           reduce using rule 36 (bloque -> OB bloque_a CB .)
    CHAR            reduce using rule 36 (bloque -> OB bloque_a CB .)
    DATAFRAME       reduce using rule 36 (bloque -> OB bloque_a CB .)
    FILE            reduce using rule 36 (bloque -> OB bloque_a CB .)
    WHILE           reduce using rule 36 (bloque -> OB bloque_a CB .)
    CB              reduce using rule 36 (bloque -> OB bloque_a CB .)
    OB              reduce using rule 36 (bloque -> OB bloque_a CB .)


state 94

    (37) bloque_a -> estatuto bloque_a .

    CB              reduce using rule 37 (bloque_a -> estatuto bloque_a .)


state 95

    (42) estatuto -> llamada SC .

    ID              reduce using rule 42 (estatuto -> llamada SC .)
    CLASS           reduce using rule 42 (estatuto -> llamada SC .)
    CLASS_ID        reduce using rule 42 (estatuto -> llamada SC .)
    DEF             reduce using rule 42 (estatuto -> llamada SC .)
    RETURN          reduce using rule 42 (estatuto -> llamada SC .)
    PRINT           reduce using rule 42 (estatuto -> llamada SC .)
    INPUT           reduce using rule 42 (estatuto -> llamada SC .)
    IF              reduce using rule 42 (estatuto -> llamada SC .)
    FOR             reduce using rule 42 (estatuto -> llamada SC .)
    INT             reduce using rule 42 (estatuto -> llamada SC .)
    FLOAT           reduce using rule 42 (estatuto -> llamada SC .)
    CHAR            reduce using rule 42 (estatuto -> llamada SC .)
    DATAFRAME       reduce using rule 42 (estatuto -> llamada SC .)
    FILE            reduce using rule 42 (estatuto -> llamada SC .)
    WHILE           reduce using rule 42 (estatuto -> llamada SC .)
    CB              reduce using rule 42 (estatuto -> llamada SC .)


state 96

    (117) asignacion -> ID EQ . expresion SC
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 154
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 97

    (116) llamadafuncionclase -> ID POINT . llamada
    (80) llamada -> . llamada_d llamada_a CP
    (86) llamada_d -> . llamada_c OP
    (85) llamada_c -> . ID

    ID              shift and go to state 155

    llamada                        shift and go to state 156
    llamada_d                      shift and go to state 50
    llamada_c                      shift and go to state 62

state 98

    (118) asignacion -> array_access EQ . expresion SC
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    array_access                   shift and go to state 92
    expresion                      shift and go to state 157
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 99

    (108) condicion -> condicion_c bloque . condicion_a
    (109) condicion_a -> . condicion_d condicion_b bloque
    (110) condicion_a -> . empty
    (114) condicion_d -> . ELSE
    (136) empty -> .

    ELSE            shift and go to state 161
    ID              reduce using rule 136 (empty -> .)
    CLASS           reduce using rule 136 (empty -> .)
    CLASS_ID        reduce using rule 136 (empty -> .)
    DEF             reduce using rule 136 (empty -> .)
    RETURN          reduce using rule 136 (empty -> .)
    PRINT           reduce using rule 136 (empty -> .)
    INPUT           reduce using rule 136 (empty -> .)
    IF              reduce using rule 136 (empty -> .)
    FOR             reduce using rule 136 (empty -> .)
    INT             reduce using rule 136 (empty -> .)
    FLOAT           reduce using rule 136 (empty -> .)
    CHAR            reduce using rule 136 (empty -> .)
    DATAFRAME       reduce using rule 136 (empty -> .)
    FILE            reduce using rule 136 (empty -> .)
    WHILE           reduce using rule 136 (empty -> .)
    CB              reduce using rule 136 (empty -> .)
    OB              reduce using rule 136 (empty -> .)

    condicion_a                    shift and go to state 158
    condicion_d                    shift and go to state 159
    empty                          shift and go to state 160

state 100

    (80) llamada -> llamada_d llamada_a . CP

    CP              shift and go to state 162


state 101

    (81) llamada_a -> llamada_e . llamada_b
    (83) llamada_b -> . llamada_f llamada_a
    (84) llamada_b -> . empty
    (89) llamada_f -> . COMMA
    (136) empty -> .

    COMMA           shift and go to state 107
    CP              reduce using rule 136 (empty -> .)

    llamada_b                      shift and go to state 163
    llamada_f                      shift and go to state 105
    empty                          shift and go to state 106

state 102

    (82) llamada_a -> llamada_b .

    CP              reduce using rule 82 (llamada_a -> llamada_b .)


state 103

    (87) llamada_e -> expresion .

    COMMA           reduce using rule 87 (llamada_e -> expresion .)
    CP              reduce using rule 87 (llamada_e -> expresion .)


state 104

    (88) llamada_e -> CTE_STRING .

    COMMA           reduce using rule 88 (llamada_e -> CTE_STRING .)
    CP              reduce using rule 88 (llamada_e -> CTE_STRING .)


state 105

    (83) llamada_b -> llamada_f . llamada_a
    (81) llamada_a -> . llamada_e llamada_b
    (82) llamada_a -> . llamada_b
    (87) llamada_e -> . expresion
    (88) llamada_e -> . CTE_STRING
    (83) llamada_b -> . llamada_f llamada_a
    (84) llamada_b -> . empty
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (89) llamada_f -> . COMMA
    (136) empty -> .
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    CTE_STRING      shift and go to state 104
    COMMA           shift and go to state 107
    CP              reduce using rule 136 (empty -> .)
    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    llamada_f                      shift and go to state 105
    llamada_a                      shift and go to state 164
    llamada_e                      shift and go to state 101
    llamada_b                      shift and go to state 102
    expresion                      shift and go to state 103
    empty                          shift and go to state 106
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 106

    (84) llamada_b -> empty .

    CP              reduce using rule 84 (llamada_b -> empty .)


state 107

    (89) llamada_f -> COMMA .

    CTE_STRING      reduce using rule 89 (llamada_f -> COMMA .)
    COMMA           reduce using rule 89 (llamada_f -> COMMA .)
    OP              reduce using rule 89 (llamada_f -> COMMA .)
    CTE_I           reduce using rule 89 (llamada_f -> COMMA .)
    CTE_F           reduce using rule 89 (llamada_f -> COMMA .)
    CTE_CHAR        reduce using rule 89 (llamada_f -> COMMA .)
    ID              reduce using rule 89 (llamada_f -> COMMA .)
    CP              reduce using rule 89 (llamada_f -> COMMA .)


state 108

    (65) while -> while_b bloque .

    ID              reduce using rule 65 (while -> while_b bloque .)
    CLASS           reduce using rule 65 (while -> while_b bloque .)
    CLASS_ID        reduce using rule 65 (while -> while_b bloque .)
    DEF             reduce using rule 65 (while -> while_b bloque .)
    RETURN          reduce using rule 65 (while -> while_b bloque .)
    PRINT           reduce using rule 65 (while -> while_b bloque .)
    INPUT           reduce using rule 65 (while -> while_b bloque .)
    IF              reduce using rule 65 (while -> while_b bloque .)
    FOR             reduce using rule 65 (while -> while_b bloque .)
    INT             reduce using rule 65 (while -> while_b bloque .)
    FLOAT           reduce using rule 65 (while -> while_b bloque .)
    CHAR            reduce using rule 65 (while -> while_b bloque .)
    DATAFRAME       reduce using rule 65 (while -> while_b bloque .)
    FILE            reduce using rule 65 (while -> while_b bloque .)
    WHILE           reduce using rule 65 (while -> while_b bloque .)
    CB              reduce using rule 65 (while -> while_b bloque .)


state 109

    (74) for -> for_a for_b . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 165

state 110

    (76) for_b -> for_e . asignacionsencilla CP
    (119) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 167

    asignacionsencilla             shift and go to state 166

state 111

    (79) for_e -> for_d . SC

    SC              shift and go to state 168


state 112

    (78) for_d -> for_c . expresion
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 169
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 113

    (77) for_c -> OP . asignacionsencilla SC
    (119) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 167

    asignacionsencilla             shift and go to state 170

state 114

    (100) classcreate -> CLASS CLASS_ID . OB classcreate_a function classcreate_c CB

    OB              shift and go to state 171


state 115

    (115) classdeclare -> CLASS_ID ID . SC

    SC              shift and go to state 172


state 116

    (120) function -> DEF function_e . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 173

state 117

    (128) function_e -> function_c . OP function_b CP vars
    (129) function_e -> function_c . OP function_b CP empty

    OP              shift and go to state 174


state 118

    (126) function_c -> function_a . ID

    ID              shift and go to state 175


state 119

    (121) function_a -> VOID .

    ID              reduce using rule 121 (function_a -> VOID .)


state 120

    (122) function_a -> tiposimple .

    ID              reduce using rule 122 (function_a -> tiposimple .)


state 121

    (53) return -> RETURN expresion . SC

    SC              shift and go to state 176


state 122

    (90) print -> PRINT OP . expresion CP SC
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 177
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 123

    (91) input -> INPUT OP . ID CP SC

    ID              shift and go to state 178


state 124

    (130) array_access -> array_access_c array_access_d . exp CSB
    (68) exp -> . and_exp
    (69) exp -> . exp_b exp
    (71) and_exp -> . expresion
    (72) and_exp -> . and_exp_b and_exp
    (70) exp_b -> . and_exp OR
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (73) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    array_access_c                 shift and go to state 60
    exp                            shift and go to state 179
    and_exp                        shift and go to state 77
    exp_b                          shift and go to state 78
    expresion                      shift and go to state 79
    and_exp_b                      shift and go to state 80
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 125

    (135) array_access_d -> OSB .

    OP              reduce using rule 135 (array_access_d -> OSB .)
    CTE_I           reduce using rule 135 (array_access_d -> OSB .)
    CTE_F           reduce using rule 135 (array_access_d -> OSB .)
    CTE_CHAR        reduce using rule 135 (array_access_d -> OSB .)
    ID              reduce using rule 135 (array_access_d -> OSB .)


state 126

    (113) condicion_c -> IF OP . exp CP
    (68) exp -> . and_exp
    (69) exp -> . exp_b exp
    (71) and_exp -> . expresion
    (72) and_exp -> . and_exp_b and_exp
    (70) exp_b -> . and_exp OR
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (73) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp                            shift and go to state 180
    and_exp                        shift and go to state 77
    exp_b                          shift and go to state 78
    expresion                      shift and go to state 79
    and_exp_b                      shift and go to state 80
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 127

    (86) llamada_d -> llamada_c OP .

    CTE_STRING      reduce using rule 86 (llamada_d -> llamada_c OP .)
    COMMA           reduce using rule 86 (llamada_d -> llamada_c OP .)
    OP              reduce using rule 86 (llamada_d -> llamada_c OP .)
    CTE_I           reduce using rule 86 (llamada_d -> llamada_c OP .)
    CTE_F           reduce using rule 86 (llamada_d -> llamada_c OP .)
    CTE_CHAR        reduce using rule 86 (llamada_d -> llamada_c OP .)
    ID              reduce using rule 86 (llamada_d -> llamada_c OP .)
    CP              reduce using rule 86 (llamada_d -> llamada_c OP .)


state 128

    (67) while_b -> while_a OP . expresion CP
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 181
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 129

    (134) array_access_c -> array_access_b exp . CSB

    CSB             shift and go to state 182


state 130

    (133) array_access_b -> array_access_a OSB .

    OP              reduce using rule 133 (array_access_b -> array_access_a OSB .)
    CTE_I           reduce using rule 133 (array_access_b -> array_access_a OSB .)
    CTE_F           reduce using rule 133 (array_access_b -> array_access_a OSB .)
    CTE_CHAR        reduce using rule 133 (array_access_b -> array_access_a OSB .)
    ID              reduce using rule 133 (array_access_b -> array_access_a OSB .)


state 131

    (12) vars_b -> ID EQ expresion .

    COMMA           reduce using rule 12 (vars_b -> ID EQ expresion .)
    SC              reduce using rule 12 (vars_b -> ID EQ expresion .)


state 132

    (15) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .

    INT             reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    FLOAT           reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    CHAR            reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    DATAFRAME       reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    ID              reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    FILE            reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    OB              reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    DEF             reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)


state 133

    (19) vars_vect_mat_d -> OSB exp . CSB

    CSB             shift and go to state 183


state 134

    (16) vars_vect_mat_a -> vars_vect_mat_c exp CSB .

    SC              reduce using rule 16 (vars_vect_mat_a -> vars_vect_mat_c exp CSB .)
    OSB             reduce using rule 16 (vars_vect_mat_a -> vars_vect_mat_c exp CSB .)


state 135

    (70) exp_b -> and_exp OR .

    OP              reduce using rule 70 (exp_b -> and_exp OR .)
    CTE_I           reduce using rule 70 (exp_b -> and_exp OR .)
    CTE_F           reduce using rule 70 (exp_b -> and_exp OR .)
    CTE_CHAR        reduce using rule 70 (exp_b -> and_exp OR .)
    ID              reduce using rule 70 (exp_b -> and_exp OR .)


state 136

    (69) exp -> exp_b exp .

    CSB             reduce using rule 69 (exp -> exp_b exp .)
    CP              reduce using rule 69 (exp -> exp_b exp .)


state 137

    (73) and_exp_b -> expresion AND .

    OP              reduce using rule 73 (and_exp_b -> expresion AND .)
    CTE_I           reduce using rule 73 (and_exp_b -> expresion AND .)
    CTE_F           reduce using rule 73 (and_exp_b -> expresion AND .)
    CTE_CHAR        reduce using rule 73 (and_exp_b -> expresion AND .)
    ID              reduce using rule 73 (and_exp_b -> expresion AND .)


state 138

    (72) and_exp -> and_exp_b and_exp .

    OR              reduce using rule 72 (and_exp -> and_exp_b and_exp .)
    CSB             reduce using rule 72 (and_exp -> and_exp_b and_exp .)
    CP              reduce using rule 72 (and_exp -> and_exp_b and_exp .)


state 139

    (55) expresion -> m_exp expresion_a . m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    m_exp                          shift and go to state 184
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 140

    (56) expresion_a -> LT .

    OP              reduce using rule 56 (expresion_a -> LT .)
    CTE_I           reduce using rule 56 (expresion_a -> LT .)
    CTE_F           reduce using rule 56 (expresion_a -> LT .)
    CTE_CHAR        reduce using rule 56 (expresion_a -> LT .)
    ID              reduce using rule 56 (expresion_a -> LT .)


state 141

    (57) expresion_a -> GT .

    OP              reduce using rule 57 (expresion_a -> GT .)
    CTE_I           reduce using rule 57 (expresion_a -> GT .)
    CTE_F           reduce using rule 57 (expresion_a -> GT .)
    CTE_CHAR        reduce using rule 57 (expresion_a -> GT .)
    ID              reduce using rule 57 (expresion_a -> GT .)


state 142

    (58) expresion_a -> NE .

    OP              reduce using rule 58 (expresion_a -> NE .)
    CTE_I           reduce using rule 58 (expresion_a -> NE .)
    CTE_F           reduce using rule 58 (expresion_a -> NE .)
    CTE_CHAR        reduce using rule 58 (expresion_a -> NE .)
    ID              reduce using rule 58 (expresion_a -> NE .)


state 143

    (59) expresion_a -> EQEQ .

    OP              reduce using rule 59 (expresion_a -> EQEQ .)
    CTE_I           reduce using rule 59 (expresion_a -> EQEQ .)
    CTE_F           reduce using rule 59 (expresion_a -> EQEQ .)
    CTE_CHAR        reduce using rule 59 (expresion_a -> EQEQ .)
    ID              reduce using rule 59 (expresion_a -> EQEQ .)


state 144

    (60) expresion_a -> LE .

    OP              reduce using rule 60 (expresion_a -> LE .)
    CTE_I           reduce using rule 60 (expresion_a -> LE .)
    CTE_F           reduce using rule 60 (expresion_a -> LE .)
    CTE_CHAR        reduce using rule 60 (expresion_a -> LE .)
    ID              reduce using rule 60 (expresion_a -> LE .)


state 145

    (61) expresion_a -> GE .

    OP              reduce using rule 61 (expresion_a -> GE .)
    CTE_I           reduce using rule 61 (expresion_a -> GE .)
    CTE_F           reduce using rule 61 (expresion_a -> GE .)
    CTE_CHAR        reduce using rule 61 (expresion_a -> GE .)
    ID              reduce using rule 61 (expresion_a -> GE .)


state 146

    (21) m_exp -> m_exp_b m_exp_a . m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    m_exp_b                        shift and go to state 82
    m_exp                          shift and go to state 185
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 147

    (22) m_exp_a -> ADD .

    OP              reduce using rule 22 (m_exp_a -> ADD .)
    CTE_I           reduce using rule 22 (m_exp_a -> ADD .)
    CTE_F           reduce using rule 22 (m_exp_a -> ADD .)
    CTE_CHAR        reduce using rule 22 (m_exp_a -> ADD .)
    ID              reduce using rule 22 (m_exp_a -> ADD .)


state 148

    (23) m_exp_a -> SUB .

    OP              reduce using rule 23 (m_exp_a -> SUB .)
    CTE_I           reduce using rule 23 (m_exp_a -> SUB .)
    CTE_F           reduce using rule 23 (m_exp_a -> SUB .)
    CTE_CHAR        reduce using rule 23 (m_exp_a -> SUB .)
    ID              reduce using rule 23 (m_exp_a -> SUB .)


state 149

    (26) term -> term_b term_a . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    term_b                         shift and go to state 84
    term                           shift and go to state 186
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 150

    (27) term_a -> MULT .

    OP              reduce using rule 27 (term_a -> MULT .)
    CTE_I           reduce using rule 27 (term_a -> MULT .)
    CTE_F           reduce using rule 27 (term_a -> MULT .)
    CTE_CHAR        reduce using rule 27 (term_a -> MULT .)
    ID              reduce using rule 27 (term_a -> MULT .)


state 151

    (28) term_a -> DIV .

    OP              reduce using rule 28 (term_a -> DIV .)
    CTE_I           reduce using rule 28 (term_a -> DIV .)
    CTE_F           reduce using rule 28 (term_a -> DIV .)
    CTE_CHAR        reduce using rule 28 (term_a -> DIV .)
    ID              reduce using rule 28 (term_a -> DIV .)


state 152

    (92) fact -> OP fact_a . exp CP
    (68) exp -> . and_exp
    (69) exp -> . exp_b exp
    (71) and_exp -> . expresion
    (72) and_exp -> . and_exp_b and_exp
    (70) exp_b -> . and_exp OR
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (73) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp                            shift and go to state 187
    and_exp                        shift and go to state 77
    exp_b                          shift and go to state 78
    expresion                      shift and go to state 79
    and_exp_b                      shift and go to state 80
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 153

    (99) fact_a -> empty .

    OP              reduce using rule 99 (fact_a -> empty .)
    CTE_I           reduce using rule 99 (fact_a -> empty .)
    CTE_F           reduce using rule 99 (fact_a -> empty .)
    CTE_CHAR        reduce using rule 99 (fact_a -> empty .)
    ID              reduce using rule 99 (fact_a -> empty .)


state 154

    (117) asignacion -> ID EQ expresion . SC

    SC              shift and go to state 188


state 155

    (85) llamada_c -> ID .

    OP              reduce using rule 85 (llamada_c -> ID .)


state 156

    (116) llamadafuncionclase -> ID POINT llamada .

    ID              reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    CLASS           reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    CLASS_ID        reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    DEF             reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    RETURN          reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    PRINT           reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    INPUT           reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    IF              reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    FOR             reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    INT             reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    FLOAT           reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    CHAR            reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    DATAFRAME       reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    FILE            reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    WHILE           reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)
    CB              reduce using rule 116 (llamadafuncionclase -> ID POINT llamada .)


state 157

    (118) asignacion -> array_access EQ expresion . SC

    SC              shift and go to state 189


state 158

    (108) condicion -> condicion_c bloque condicion_a .

    ID              reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    CLASS           reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    CLASS_ID        reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    DEF             reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    RETURN          reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    PRINT           reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    INPUT           reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    IF              reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    FOR             reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    INT             reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    FLOAT           reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    CHAR            reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    DATAFRAME       reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    FILE            reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    WHILE           reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    CB              reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)
    OB              reduce using rule 108 (condicion -> condicion_c bloque condicion_a .)


state 159

    (109) condicion_a -> condicion_d . condicion_b bloque
    (111) condicion_b -> . condicion
    (112) condicion_b -> . empty
    (108) condicion -> . condicion_c bloque condicion_a
    (136) empty -> .
    (113) condicion_c -> . IF OP exp CP

    OB              reduce using rule 136 (empty -> .)
    IF              shift and go to state 61

    condicion_b                    shift and go to state 190
    condicion                      shift and go to state 191
    empty                          shift and go to state 192
    condicion_c                    shift and go to state 49

state 160

    (110) condicion_a -> empty .

    ID              reduce using rule 110 (condicion_a -> empty .)
    CLASS           reduce using rule 110 (condicion_a -> empty .)
    CLASS_ID        reduce using rule 110 (condicion_a -> empty .)
    DEF             reduce using rule 110 (condicion_a -> empty .)
    RETURN          reduce using rule 110 (condicion_a -> empty .)
    PRINT           reduce using rule 110 (condicion_a -> empty .)
    INPUT           reduce using rule 110 (condicion_a -> empty .)
    IF              reduce using rule 110 (condicion_a -> empty .)
    FOR             reduce using rule 110 (condicion_a -> empty .)
    INT             reduce using rule 110 (condicion_a -> empty .)
    FLOAT           reduce using rule 110 (condicion_a -> empty .)
    CHAR            reduce using rule 110 (condicion_a -> empty .)
    DATAFRAME       reduce using rule 110 (condicion_a -> empty .)
    FILE            reduce using rule 110 (condicion_a -> empty .)
    WHILE           reduce using rule 110 (condicion_a -> empty .)
    CB              reduce using rule 110 (condicion_a -> empty .)
    OB              reduce using rule 110 (condicion_a -> empty .)


state 161

    (114) condicion_d -> ELSE .

    IF              reduce using rule 114 (condicion_d -> ELSE .)
    OB              reduce using rule 114 (condicion_d -> ELSE .)


state 162

    (80) llamada -> llamada_d llamada_a CP .

    SC              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    MULT            reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    DIV             reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    ADD             reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    SUB             reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    LT              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    GT              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    NE              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    EQEQ            reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    LE              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    GE              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    AND             reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    OR              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    CSB             reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    COMMA           reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    CP              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    ID              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    CLASS           reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    CLASS_ID        reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    DEF             reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    RETURN          reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    PRINT           reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    INPUT           reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    IF              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    FOR             reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    INT             reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    FLOAT           reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    CHAR            reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    DATAFRAME       reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    FILE            reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    WHILE           reduce using rule 80 (llamada -> llamada_d llamada_a CP .)
    CB              reduce using rule 80 (llamada -> llamada_d llamada_a CP .)


state 163

    (81) llamada_a -> llamada_e llamada_b .

    CP              reduce using rule 81 (llamada_a -> llamada_e llamada_b .)


state 164

    (83) llamada_b -> llamada_f llamada_a .

    CP              reduce using rule 83 (llamada_b -> llamada_f llamada_a .)


state 165

    (74) for -> for_a for_b bloque .

    ID              reduce using rule 74 (for -> for_a for_b bloque .)
    CLASS           reduce using rule 74 (for -> for_a for_b bloque .)
    CLASS_ID        reduce using rule 74 (for -> for_a for_b bloque .)
    DEF             reduce using rule 74 (for -> for_a for_b bloque .)
    RETURN          reduce using rule 74 (for -> for_a for_b bloque .)
    PRINT           reduce using rule 74 (for -> for_a for_b bloque .)
    INPUT           reduce using rule 74 (for -> for_a for_b bloque .)
    IF              reduce using rule 74 (for -> for_a for_b bloque .)
    FOR             reduce using rule 74 (for -> for_a for_b bloque .)
    INT             reduce using rule 74 (for -> for_a for_b bloque .)
    FLOAT           reduce using rule 74 (for -> for_a for_b bloque .)
    CHAR            reduce using rule 74 (for -> for_a for_b bloque .)
    DATAFRAME       reduce using rule 74 (for -> for_a for_b bloque .)
    FILE            reduce using rule 74 (for -> for_a for_b bloque .)
    WHILE           reduce using rule 74 (for -> for_a for_b bloque .)
    CB              reduce using rule 74 (for -> for_a for_b bloque .)


state 166

    (76) for_b -> for_e asignacionsencilla . CP

    CP              shift and go to state 193


state 167

    (119) asignacionsencilla -> ID . EQ expresion

    EQ              shift and go to state 194


state 168

    (79) for_e -> for_d SC .

    ID              reduce using rule 79 (for_e -> for_d SC .)


state 169

    (78) for_d -> for_c expresion .

    SC              reduce using rule 78 (for_d -> for_c expresion .)


state 170

    (77) for_c -> OP asignacionsencilla . SC

    SC              shift and go to state 195


state 171

    (100) classcreate -> CLASS CLASS_ID OB . classcreate_a function classcreate_c CB
    (101) classcreate_a -> . vars classcreate_a
    (102) classcreate_a -> . vars_vect_mat classcreate_a
    (103) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (136) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

    DEF             reduce using rule 136 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    classcreate_a                  shift and go to state 196
    vars                           shift and go to state 197
    vars_vect_mat                  shift and go to state 198
    empty                          shift and go to state 199
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 172

    (115) classdeclare -> CLASS_ID ID SC .

    ID              reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    CLASS           reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    CLASS_ID        reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    DEF             reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    RETURN          reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    PRINT           reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    INPUT           reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    IF              reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    FOR             reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    INT             reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    FLOAT           reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    CHAR            reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    DATAFRAME       reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    FILE            reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    WHILE           reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)
    CB              reduce using rule 115 (classdeclare -> CLASS_ID ID SC .)


state 173

    (120) function -> DEF function_e bloque .

    ID              reduce using rule 120 (function -> DEF function_e bloque .)
    CLASS           reduce using rule 120 (function -> DEF function_e bloque .)
    CLASS_ID        reduce using rule 120 (function -> DEF function_e bloque .)
    DEF             reduce using rule 120 (function -> DEF function_e bloque .)
    RETURN          reduce using rule 120 (function -> DEF function_e bloque .)
    PRINT           reduce using rule 120 (function -> DEF function_e bloque .)
    INPUT           reduce using rule 120 (function -> DEF function_e bloque .)
    IF              reduce using rule 120 (function -> DEF function_e bloque .)
    FOR             reduce using rule 120 (function -> DEF function_e bloque .)
    INT             reduce using rule 120 (function -> DEF function_e bloque .)
    FLOAT           reduce using rule 120 (function -> DEF function_e bloque .)
    CHAR            reduce using rule 120 (function -> DEF function_e bloque .)
    DATAFRAME       reduce using rule 120 (function -> DEF function_e bloque .)
    FILE            reduce using rule 120 (function -> DEF function_e bloque .)
    WHILE           reduce using rule 120 (function -> DEF function_e bloque .)
    CB              reduce using rule 120 (function -> DEF function_e bloque .)


state 174

    (128) function_e -> function_c OP . function_b CP vars
    (129) function_e -> function_c OP . function_b CP empty
    (123) function_b -> . function_d
    (124) function_b -> . function_d COMMA function_b
    (125) function_b -> . empty
    (127) function_d -> . tiposimple ID
    (136) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR

    CP              reduce using rule 136 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    function_b                     shift and go to state 200
    empty                          shift and go to state 201
    function_d                     shift and go to state 202
    tiposimple                     shift and go to state 203

state 175

    (126) function_c -> function_a ID .

    OP              reduce using rule 126 (function_c -> function_a ID .)


state 176

    (53) return -> RETURN expresion SC .

    ID              reduce using rule 53 (return -> RETURN expresion SC .)
    CLASS           reduce using rule 53 (return -> RETURN expresion SC .)
    CLASS_ID        reduce using rule 53 (return -> RETURN expresion SC .)
    DEF             reduce using rule 53 (return -> RETURN expresion SC .)
    RETURN          reduce using rule 53 (return -> RETURN expresion SC .)
    PRINT           reduce using rule 53 (return -> RETURN expresion SC .)
    INPUT           reduce using rule 53 (return -> RETURN expresion SC .)
    IF              reduce using rule 53 (return -> RETURN expresion SC .)
    FOR             reduce using rule 53 (return -> RETURN expresion SC .)
    INT             reduce using rule 53 (return -> RETURN expresion SC .)
    FLOAT           reduce using rule 53 (return -> RETURN expresion SC .)
    CHAR            reduce using rule 53 (return -> RETURN expresion SC .)
    DATAFRAME       reduce using rule 53 (return -> RETURN expresion SC .)
    FILE            reduce using rule 53 (return -> RETURN expresion SC .)
    WHILE           reduce using rule 53 (return -> RETURN expresion SC .)
    CB              reduce using rule 53 (return -> RETURN expresion SC .)


state 177

    (90) print -> PRINT OP expresion . CP SC

    CP              shift and go to state 204


state 178

    (91) input -> INPUT OP ID . CP SC

    CP              shift and go to state 205


state 179

    (130) array_access -> array_access_c array_access_d exp . CSB

    CSB             shift and go to state 206


state 180

    (113) condicion_c -> IF OP exp . CP

    CP              shift and go to state 207


state 181

    (67) while_b -> while_a OP expresion . CP

    CP              shift and go to state 208


state 182

    (134) array_access_c -> array_access_b exp CSB .

    OSB             reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    EQ              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    MULT            reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    DIV             reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    ADD             reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    SUB             reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    LT              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    GT              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    NE              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    EQEQ            reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    LE              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    GE              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    AND             reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    OR              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    CSB             reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    COMMA           reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    CP              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)
    SC              reduce using rule 134 (array_access_c -> array_access_b exp CSB .)


state 183

    (19) vars_vect_mat_d -> OSB exp CSB .

    SC              reduce using rule 19 (vars_vect_mat_d -> OSB exp CSB .)


state 184

    (55) expresion -> m_exp expresion_a m_exp .

    AND             reduce using rule 55 (expresion -> m_exp expresion_a m_exp .)
    OR              reduce using rule 55 (expresion -> m_exp expresion_a m_exp .)
    CSB             reduce using rule 55 (expresion -> m_exp expresion_a m_exp .)
    COMMA           reduce using rule 55 (expresion -> m_exp expresion_a m_exp .)
    CP              reduce using rule 55 (expresion -> m_exp expresion_a m_exp .)
    SC              reduce using rule 55 (expresion -> m_exp expresion_a m_exp .)


state 185

    (21) m_exp -> m_exp_b m_exp_a m_exp .

    LT              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    GT              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    NE              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    EQEQ            reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    LE              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    GE              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    AND             reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    OR              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    CSB             reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    COMMA           reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    CP              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    SC              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)


state 186

    (26) term -> term_b term_a term .

    ADD             reduce using rule 26 (term -> term_b term_a term .)
    SUB             reduce using rule 26 (term -> term_b term_a term .)
    LT              reduce using rule 26 (term -> term_b term_a term .)
    GT              reduce using rule 26 (term -> term_b term_a term .)
    NE              reduce using rule 26 (term -> term_b term_a term .)
    EQEQ            reduce using rule 26 (term -> term_b term_a term .)
    LE              reduce using rule 26 (term -> term_b term_a term .)
    GE              reduce using rule 26 (term -> term_b term_a term .)
    AND             reduce using rule 26 (term -> term_b term_a term .)
    OR              reduce using rule 26 (term -> term_b term_a term .)
    CSB             reduce using rule 26 (term -> term_b term_a term .)
    COMMA           reduce using rule 26 (term -> term_b term_a term .)
    CP              reduce using rule 26 (term -> term_b term_a term .)
    SC              reduce using rule 26 (term -> term_b term_a term .)


state 187

    (92) fact -> OP fact_a exp . CP

    CP              shift and go to state 209


state 188

    (117) asignacion -> ID EQ expresion SC .

    ID              reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    CLASS           reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    CLASS_ID        reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    DEF             reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    RETURN          reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    PRINT           reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    INPUT           reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    IF              reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    FOR             reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    INT             reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    FLOAT           reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    CHAR            reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    DATAFRAME       reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    FILE            reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    WHILE           reduce using rule 117 (asignacion -> ID EQ expresion SC .)
    CB              reduce using rule 117 (asignacion -> ID EQ expresion SC .)


state 189

    (118) asignacion -> array_access EQ expresion SC .

    ID              reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    CLASS           reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    CLASS_ID        reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    DEF             reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    RETURN          reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    PRINT           reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    INPUT           reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    IF              reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    FOR             reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    INT             reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    FLOAT           reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    CHAR            reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    DATAFRAME       reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    FILE            reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    WHILE           reduce using rule 118 (asignacion -> array_access EQ expresion SC .)
    CB              reduce using rule 118 (asignacion -> array_access EQ expresion SC .)


state 190

    (109) condicion_a -> condicion_d condicion_b . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 210

state 191

    (111) condicion_b -> condicion .

    OB              reduce using rule 111 (condicion_b -> condicion .)


state 192

    (112) condicion_b -> empty .

    OB              reduce using rule 112 (condicion_b -> empty .)


state 193

    (76) for_b -> for_e asignacionsencilla CP .

    OB              reduce using rule 76 (for_b -> for_e asignacionsencilla CP .)


state 194

    (119) asignacionsencilla -> ID EQ . expresion
    (54) expresion -> . m_exp
    (55) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (92) fact -> . OP fact_a exp CP
    (93) fact -> . CTE_I
    (94) fact -> . CTE_F
    (95) fact -> . CTE_CHAR
    (96) fact -> . ID
    (97) fact -> . llamada
    (98) fact -> . array_access
    (80) llamada -> . llamada_d llamada_a CP
    (130) array_access -> . array_access_c array_access_d exp CSB
    (131) array_access -> . array_access_c
    (86) llamada_d -> . llamada_c OP
    (134) array_access_c -> . array_access_b exp CSB
    (85) llamada_c -> . ID
    (133) array_access_b -> . array_access_a OSB
    (132) array_access_a -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 211
    m_exp                          shift and go to state 81
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    array_access                   shift and go to state 92
    llamada_d                      shift and go to state 50
    array_access_c                 shift and go to state 60
    llamada_c                      shift and go to state 62
    array_access_b                 shift and go to state 65
    array_access_a                 shift and go to state 67

state 195

    (77) for_c -> OP asignacionsencilla SC .

    OP              reduce using rule 77 (for_c -> OP asignacionsencilla SC .)
    CTE_I           reduce using rule 77 (for_c -> OP asignacionsencilla SC .)
    CTE_F           reduce using rule 77 (for_c -> OP asignacionsencilla SC .)
    CTE_CHAR        reduce using rule 77 (for_c -> OP asignacionsencilla SC .)
    ID              reduce using rule 77 (for_c -> OP asignacionsencilla SC .)


state 196

    (100) classcreate -> CLASS CLASS_ID OB classcreate_a . function classcreate_c CB
    (120) function -> . DEF function_e bloque

    DEF             shift and go to state 56

    function                       shift and go to state 212

state 197

    (101) classcreate_a -> vars . classcreate_a
    (101) classcreate_a -> . vars classcreate_a
    (102) classcreate_a -> . vars_vect_mat classcreate_a
    (103) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (136) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

    DEF             reduce using rule 136 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    vars                           shift and go to state 197
    classcreate_a                  shift and go to state 213
    vars_vect_mat                  shift and go to state 198
    empty                          shift and go to state 199
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 198

    (102) classcreate_a -> vars_vect_mat . classcreate_a
    (101) classcreate_a -> . vars classcreate_a
    (102) classcreate_a -> . vars_vect_mat classcreate_a
    (103) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (136) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

    DEF             reduce using rule 136 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    vars_vect_mat                  shift and go to state 198
    classcreate_a                  shift and go to state 214
    vars                           shift and go to state 197
    empty                          shift and go to state 199
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 199

    (103) classcreate_a -> empty .

    DEF             reduce using rule 103 (classcreate_a -> empty .)


state 200

    (128) function_e -> function_c OP function_b . CP vars
    (129) function_e -> function_c OP function_b . CP empty

    CP              shift and go to state 215


state 201

    (125) function_b -> empty .

    CP              reduce using rule 125 (function_b -> empty .)


state 202

    (123) function_b -> function_d .
    (124) function_b -> function_d . COMMA function_b

    CP              reduce using rule 123 (function_b -> function_d .)
    COMMA           shift and go to state 216


state 203

    (127) function_d -> tiposimple . ID

    ID              shift and go to state 217


state 204

    (90) print -> PRINT OP expresion CP . SC

    SC              shift and go to state 218


state 205

    (91) input -> INPUT OP ID CP . SC

    SC              shift and go to state 219


state 206

    (130) array_access -> array_access_c array_access_d exp CSB .

    EQ              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    MULT            reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    DIV             reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    ADD             reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    SUB             reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    LT              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    GT              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    NE              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    EQEQ            reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    LE              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    GE              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    AND             reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    OR              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    CSB             reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    COMMA           reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    CP              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)
    SC              reduce using rule 130 (array_access -> array_access_c array_access_d exp CSB .)


state 207

    (113) condicion_c -> IF OP exp CP .

    OB              reduce using rule 113 (condicion_c -> IF OP exp CP .)


state 208

    (67) while_b -> while_a OP expresion CP .

    OB              reduce using rule 67 (while_b -> while_a OP expresion CP .)


state 209

    (92) fact -> OP fact_a exp CP .

    MULT            reduce using rule 92 (fact -> OP fact_a exp CP .)
    DIV             reduce using rule 92 (fact -> OP fact_a exp CP .)
    ADD             reduce using rule 92 (fact -> OP fact_a exp CP .)
    SUB             reduce using rule 92 (fact -> OP fact_a exp CP .)
    LT              reduce using rule 92 (fact -> OP fact_a exp CP .)
    GT              reduce using rule 92 (fact -> OP fact_a exp CP .)
    NE              reduce using rule 92 (fact -> OP fact_a exp CP .)
    EQEQ            reduce using rule 92 (fact -> OP fact_a exp CP .)
    LE              reduce using rule 92 (fact -> OP fact_a exp CP .)
    GE              reduce using rule 92 (fact -> OP fact_a exp CP .)
    AND             reduce using rule 92 (fact -> OP fact_a exp CP .)
    OR              reduce using rule 92 (fact -> OP fact_a exp CP .)
    CSB             reduce using rule 92 (fact -> OP fact_a exp CP .)
    COMMA           reduce using rule 92 (fact -> OP fact_a exp CP .)
    CP              reduce using rule 92 (fact -> OP fact_a exp CP .)
    SC              reduce using rule 92 (fact -> OP fact_a exp CP .)


state 210

    (109) condicion_a -> condicion_d condicion_b bloque .

    ID              reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS           reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS_ID        reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    DEF             reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    RETURN          reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    PRINT           reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    INPUT           reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    IF              reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    FOR             reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    INT             reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    FLOAT           reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    CHAR            reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    DATAFRAME       reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    FILE            reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    WHILE           reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    CB              reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)
    OB              reduce using rule 109 (condicion_a -> condicion_d condicion_b bloque .)


state 211

    (119) asignacionsencilla -> ID EQ expresion .

    CP              reduce using rule 119 (asignacionsencilla -> ID EQ expresion .)
    SC              reduce using rule 119 (asignacionsencilla -> ID EQ expresion .)


state 212

    (100) classcreate -> CLASS CLASS_ID OB classcreate_a function . classcreate_c CB
    (104) classcreate_c -> . function classcreate_d
    (105) classcreate_c -> . classcreate_d
    (120) function -> . DEF function_e bloque
    (106) classcreate_d -> . classcreate_c
    (107) classcreate_d -> . empty
    (136) empty -> .

    DEF             shift and go to state 56
    CB              reduce using rule 136 (empty -> .)

    function                       shift and go to state 220
    classcreate_c                  shift and go to state 221
    classcreate_d                  shift and go to state 222
    empty                          shift and go to state 223

state 213

    (101) classcreate_a -> vars classcreate_a .

    DEF             reduce using rule 101 (classcreate_a -> vars classcreate_a .)


state 214

    (102) classcreate_a -> vars_vect_mat classcreate_a .

    DEF             reduce using rule 102 (classcreate_a -> vars_vect_mat classcreate_a .)


state 215

    (128) function_e -> function_c OP function_b CP . vars
    (129) function_e -> function_c OP function_b CP . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (136) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE

    OB              reduce using rule 136 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    vars                           shift and go to state 224
    empty                          shift and go to state 225
    tiposimple                     shift and go to state 55
    tipocompuesto                  shift and go to state 12

state 216

    (124) function_b -> function_d COMMA . function_b
    (123) function_b -> . function_d
    (124) function_b -> . function_d COMMA function_b
    (125) function_b -> . empty
    (127) function_d -> . tiposimple ID
    (136) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR

    CP              reduce using rule 136 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    function_d                     shift and go to state 202
    function_b                     shift and go to state 226
    empty                          shift and go to state 201
    tiposimple                     shift and go to state 203

state 217

    (127) function_d -> tiposimple ID .

    COMMA           reduce using rule 127 (function_d -> tiposimple ID .)
    CP              reduce using rule 127 (function_d -> tiposimple ID .)


state 218

    (90) print -> PRINT OP expresion CP SC .

    ID              reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    CLASS           reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    CLASS_ID        reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    DEF             reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    RETURN          reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    PRINT           reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    INPUT           reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    IF              reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    FOR             reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    INT             reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    FLOAT           reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    CHAR            reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    DATAFRAME       reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    FILE            reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    WHILE           reduce using rule 90 (print -> PRINT OP expresion CP SC .)
    CB              reduce using rule 90 (print -> PRINT OP expresion CP SC .)


state 219

    (91) input -> INPUT OP ID CP SC .

    ID              reduce using rule 91 (input -> INPUT OP ID CP SC .)
    CLASS           reduce using rule 91 (input -> INPUT OP ID CP SC .)
    CLASS_ID        reduce using rule 91 (input -> INPUT OP ID CP SC .)
    DEF             reduce using rule 91 (input -> INPUT OP ID CP SC .)
    RETURN          reduce using rule 91 (input -> INPUT OP ID CP SC .)
    PRINT           reduce using rule 91 (input -> INPUT OP ID CP SC .)
    INPUT           reduce using rule 91 (input -> INPUT OP ID CP SC .)
    IF              reduce using rule 91 (input -> INPUT OP ID CP SC .)
    FOR             reduce using rule 91 (input -> INPUT OP ID CP SC .)
    INT             reduce using rule 91 (input -> INPUT OP ID CP SC .)
    FLOAT           reduce using rule 91 (input -> INPUT OP ID CP SC .)
    CHAR            reduce using rule 91 (input -> INPUT OP ID CP SC .)
    DATAFRAME       reduce using rule 91 (input -> INPUT OP ID CP SC .)
    FILE            reduce using rule 91 (input -> INPUT OP ID CP SC .)
    WHILE           reduce using rule 91 (input -> INPUT OP ID CP SC .)
    CB              reduce using rule 91 (input -> INPUT OP ID CP SC .)


state 220

    (104) classcreate_c -> function . classcreate_d
    (106) classcreate_d -> . classcreate_c
    (107) classcreate_d -> . empty
    (104) classcreate_c -> . function classcreate_d
    (105) classcreate_c -> . classcreate_d
    (136) empty -> .
    (120) function -> . DEF function_e bloque

    CB              reduce using rule 136 (empty -> .)
    DEF             shift and go to state 56

    function                       shift and go to state 220
    classcreate_d                  shift and go to state 227
    classcreate_c                  shift and go to state 228
    empty                          shift and go to state 223

state 221

    (100) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c . CB
    (106) classcreate_d -> classcreate_c .

  ! shift/reduce conflict for CB resolved as shift
    CB              shift and go to state 229

  ! CB              [ reduce using rule 106 (classcreate_d -> classcreate_c .) ]


state 222

    (105) classcreate_c -> classcreate_d .

    CB              reduce using rule 105 (classcreate_c -> classcreate_d .)


state 223

    (107) classcreate_d -> empty .

    CB              reduce using rule 107 (classcreate_d -> empty .)


state 224

    (128) function_e -> function_c OP function_b CP vars .

    OB              reduce using rule 128 (function_e -> function_c OP function_b CP vars .)


state 225

    (129) function_e -> function_c OP function_b CP empty .

    OB              reduce using rule 129 (function_e -> function_c OP function_b CP empty .)


state 226

    (124) function_b -> function_d COMMA function_b .

    CP              reduce using rule 124 (function_b -> function_d COMMA function_b .)


state 227

    (104) classcreate_c -> function classcreate_d .
    (105) classcreate_c -> classcreate_d .

  ! reduce/reduce conflict for CB resolved using rule 104 (classcreate_c -> function classcreate_d .)
    CB              reduce using rule 104 (classcreate_c -> function classcreate_d .)

  ! CB              [ reduce using rule 105 (classcreate_c -> classcreate_d .) ]


state 228

    (106) classcreate_d -> classcreate_c .

    CB              reduce using rule 106 (classcreate_d -> classcreate_c .)


state 229

    (100) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .

    ID              reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS           reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS_ID        reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DEF             reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    RETURN          reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    PRINT           reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INPUT           reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    IF              reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FOR             reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INT             reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FLOAT           reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CHAR            reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DATAFRAME       reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FILE            reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    WHILE           reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CB              reduce using rule 100 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CB in state 221 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa_a -> programa_b)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 32 resolved using rule (bloque_a -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 32
WARNING: reduce/reduce conflict in state 227 resolved using rule (classcreate_c -> function classcreate_d)
WARNING: rejected rule (classcreate_c -> classcreate_d) in state 227
