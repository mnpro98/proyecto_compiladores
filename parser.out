Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPT
    COL
    DIGIT
    DIGITS
    LETTER

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SC programa_a bloque
Rule 2     programa_a -> programa_b
Rule 3     programa_a -> programa_b programa_a
Rule 4     programa_a -> empty
Rule 5     programa_b -> vars
Rule 6     programa_b -> vars_vect_mat
Rule 7     vars -> tiposimple vars_a SC
Rule 8     vars -> tipocompuesto vars_a SC
Rule 9     vars_a -> vars_b
Rule 10    vars_a -> vars_c vars_a
Rule 11    vars_b -> ID
Rule 12    vars_b -> ID EQ expresion
Rule 13    vars_c -> vars_b COMMA
Rule 14    vars_vect_mat -> tiposimple ID vars_vect_mat_a SC
Rule 15    vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
Rule 16    vars_vect_mat_a -> OSB exp CSB
Rule 17    m_exp -> m_exp_b
Rule 18    m_exp -> m_exp_b m_exp_a m_exp
Rule 19    m_exp_a -> ADD
Rule 20    m_exp_a -> SUB
Rule 21    m_exp_b -> term
Rule 22    term -> term_b
Rule 23    term -> term_b term_a term
Rule 24    term_a -> MULT
Rule 25    term_a -> DIV
Rule 26    term_b -> fact
Rule 27    tiposimple -> INT
Rule 28    tiposimple -> FLOAT
Rule 29    tiposimple -> CHAR
Rule 30    tipocompuesto -> DATAFRAME
Rule 31    tipocompuesto -> ID
Rule 32    tipocompuesto -> FILE
Rule 33    bloque -> OB bloque_a CB
Rule 34    bloque_a -> estatuto bloque_a
Rule 35    bloque_a -> estatuto
Rule 36    bloque_a -> empty
Rule 37    estatuto -> asignacion
Rule 38    estatuto -> condicion
Rule 39    estatuto -> llamada
Rule 40    estatuto -> while
Rule 41    estatuto -> for
Rule 42    estatuto -> classcreate
Rule 43    estatuto -> vars
Rule 44    estatuto -> classdeclare
Rule 45    estatuto -> llamadafuncionclase
Rule 46    estatuto -> function
Rule 47    estatuto -> return
Rule 48    return -> RETURN expresion SC
Rule 49    expresion -> m_exp
Rule 50    expresion -> m_exp expresion_a m_exp
Rule 51    expresion_a -> LT
Rule 52    expresion_a -> GT
Rule 53    expresion_a -> NE
Rule 54    expresion_a -> EQEQ
Rule 55    expresion_a -> LE
Rule 56    expresion_a -> GE
Rule 57    varcte -> ID
Rule 58    varcte -> CTE_I
Rule 59    varcte -> CTE_F
Rule 60    while -> while_b bloque
Rule 61    while_a -> WHILE
Rule 62    while_b -> while_a OP expresion CP
Rule 63    exp -> and_exp exp_a
Rule 64    exp_a -> OR
Rule 65    exp_a -> empty
Rule 66    and_exp -> expresion and_exp_a
Rule 67    and_exp_a -> AND
Rule 68    and_exp_a -> empty
Rule 69    for -> for_a for_b bloque
Rule 70    for_a -> FOR
Rule 71    for_b -> for_e asignacionsencilla CP
Rule 72    for_c -> OP asignacionsencilla SC
Rule 73    for_d -> for_c expresion
Rule 74    for_e -> for_d SC
Rule 75    llamada -> llamada_d llamada_a CP SC
Rule 76    llamada_a -> llamada_e llamada_b
Rule 77    llamada_a -> llamada_b
Rule 78    llamada_b -> llamada_f llamada_a
Rule 79    llamada_b -> empty
Rule 80    llamada_c -> ID
Rule 81    llamada_d -> llamada_c OP
Rule 82    llamada_e -> expresion
Rule 83    llamada_e -> CTE_STRING
Rule 84    llamada_f -> COMMA
Rule 85    fact -> fact_a exp CP
Rule 86    fact -> CTE_I
Rule 87    fact -> CTE_F
Rule 88    fact -> CTE_CHAR
Rule 89    fact -> ID
Rule 90    fact -> llamada
Rule 91    fact_a -> OP
Rule 92    classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB
Rule 93    classcreate_a -> vars classcreate_a
Rule 94    classcreate_a -> vars_vect_mat classcreate_a
Rule 95    classcreate_a -> empty
Rule 96    classcreate_c -> function classcreate_d
Rule 97    classcreate_c -> classcreate_d
Rule 98    classcreate_d -> classcreate_c
Rule 99    classcreate_d -> empty
Rule 100   condicion -> condicion_c bloque condicion_a
Rule 101   condicion_a -> condicion_d condicion_b bloque
Rule 102   condicion_b -> condicion
Rule 103   condicion_b -> empty
Rule 104   condicion_c -> IF OP expresion CP
Rule 105   condicion_d -> ELSE
Rule 106   classdeclare -> CLASS_ID ID SC
Rule 107   llamadafuncionclase -> ID POINT llamada
Rule 108   asignacion -> ID asignacion_a asignacion_a EQ expresion SC
Rule 109   asignacion_a -> OSB exp CSB
Rule 110   asignacion_a -> empty
Rule 111   asignacionsencilla -> ID EQ expresion
Rule 112   function -> DEF function_e bloque
Rule 113   function_a -> VOID
Rule 114   function_a -> tiposimple
Rule 115   function_b -> function_d
Rule 116   function_b -> function_d COMMA function_b
Rule 117   function_b -> empty
Rule 118   function_c -> function_a ID
Rule 119   function_d -> tiposimple ID
Rule 120   function_e -> function_c OP function_b CP vars
Rule 121   function_e -> function_c OP function_b CP empty
Rule 122   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 19
AND                  : 67
CAPT                 : 
CB                   : 33 92
CHAR                 : 29
CLASS                : 92
CLASS_ID             : 92 106
COL                  : 
COMMA                : 13 84 116
CP                   : 62 71 75 85 104 120 121
CSB                  : 16 109
CTE_CHAR             : 88
CTE_F                : 59 87
CTE_I                : 58 86
CTE_STRING           : 83
DATAFRAME            : 30
DEF                  : 112
DIGIT                : 
DIGITS               : 
DIV                  : 25
ELSE                 : 105
EQ                   : 12 108 111
EQEQ                 : 54
FILE                 : 32
FLOAT                : 28
FOR                  : 70
GE                   : 56
GT                   : 52
ID                   : 1 11 12 14 15 31 57 80 89 106 107 108 111 118 119
IF                   : 104
INT                  : 27
LE                   : 55
LETTER               : 
LT                   : 51
MULT                 : 24
NE                   : 53
OB                   : 33 92
OP                   : 62 72 81 91 104 120 121
OR                   : 64
OSB                  : 16 109
POINT                : 107
PROGRAM              : 1
RETURN               : 48
SC                   : 1 7 8 14 15 48 72 74 75 106 108
SUB                  : 20
VOID                 : 113
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

and_exp              : 63
and_exp_a            : 66
asignacion           : 37
asignacion_a         : 108 108
asignacionsencilla   : 71 72
bloque               : 1 60 69 100 101 112
bloque_a             : 33 34
classcreate          : 42
classcreate_a        : 92 93 94
classcreate_c        : 92 98
classcreate_d        : 96 97
classdeclare         : 44
condicion            : 38 102
condicion_a          : 100
condicion_b          : 101
condicion_c          : 100
condicion_d          : 101
empty                : 4 36 65 68 79 95 99 103 110 117 121
estatuto             : 34 35
exp                  : 16 85 109
exp_a                : 63
expresion            : 12 48 62 66 73 82 104 108 111
expresion_a          : 50
fact                 : 26
fact_a               : 85
for                  : 41
for_a                : 69
for_b                : 69
for_c                : 73
for_d                : 74
for_e                : 71
function             : 46 92 96
function_a           : 118
function_b           : 116 120 121
function_c           : 120 121
function_d           : 115 116
function_e           : 112
llamada              : 39 90 107
llamada_a            : 75 78
llamada_b            : 76 77
llamada_c            : 81
llamada_d            : 75
llamada_e            : 76
llamada_f            : 78
llamadafuncionclase  : 45
m_exp                : 18 49 50 50
m_exp_a              : 18
m_exp_b              : 17 18
programa             : 0
programa_a           : 1 3
programa_b           : 2 3
return               : 47
term                 : 21 23
term_a               : 23
term_b               : 22 23
tipocompuesto        : 8
tiposimple           : 7 14 15 114 119
varcte               : 
vars                 : 5 43 93 120
vars_a               : 7 8 10
vars_b               : 9 13
vars_c               : 10
vars_vect_mat        : 6 94
vars_vect_mat_a      : 14 15 15
while                : 40
while_a              : 62
while_b              : 60

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SC programa_a bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SC programa_a bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SC programa_a bloque

    SC              shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SC . programa_a bloque
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (122) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    OB              reduce using rule 122 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    programa_a                     shift and go to state 6
    programa_b                     shift and go to state 7
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 5

    (31) tipocompuesto -> ID .

    ID              reduce using rule 31 (tipocompuesto -> ID .)


state 6

    (1) programa -> PROGRAM ID SC programa_a . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 18

state 7

    (2) programa_a -> programa_b .
    (3) programa_a -> programa_b . programa_a
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (122) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! reduce/reduce conflict for OB resolved using rule 2 (programa_a -> programa_b .)
    OB              reduce using rule 2 (programa_a -> programa_b .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! OB              [ reduce using rule 122 (empty -> .) ]

    programa_b                     shift and go to state 7
    programa_a                     shift and go to state 20
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 8

    (4) programa_a -> empty .

    OB              reduce using rule 4 (programa_a -> empty .)


state 9

    (5) programa_b -> vars .

    INT             reduce using rule 5 (programa_b -> vars .)
    FLOAT           reduce using rule 5 (programa_b -> vars .)
    CHAR            reduce using rule 5 (programa_b -> vars .)
    DATAFRAME       reduce using rule 5 (programa_b -> vars .)
    ID              reduce using rule 5 (programa_b -> vars .)
    FILE            reduce using rule 5 (programa_b -> vars .)
    OB              reduce using rule 5 (programa_b -> vars .)


state 10

    (6) programa_b -> vars_vect_mat .

    INT             reduce using rule 6 (programa_b -> vars_vect_mat .)
    FLOAT           reduce using rule 6 (programa_b -> vars_vect_mat .)
    CHAR            reduce using rule 6 (programa_b -> vars_vect_mat .)
    DATAFRAME       reduce using rule 6 (programa_b -> vars_vect_mat .)
    ID              reduce using rule 6 (programa_b -> vars_vect_mat .)
    FILE            reduce using rule 6 (programa_b -> vars_vect_mat .)
    OB              reduce using rule 6 (programa_b -> vars_vect_mat .)


state 11

    (7) vars -> tiposimple . vars_a SC
    (14) vars_vect_mat -> tiposimple . ID vars_vect_mat_a SC
    (15) vars_vect_mat -> tiposimple . ID vars_vect_mat_a vars_vect_mat_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 22

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 12

    (8) vars -> tipocompuesto . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_a                         shift and go to state 25
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 13

    (27) tiposimple -> INT .

    ID              reduce using rule 27 (tiposimple -> INT .)


state 14

    (28) tiposimple -> FLOAT .

    ID              reduce using rule 28 (tiposimple -> FLOAT .)


state 15

    (29) tiposimple -> CHAR .

    ID              reduce using rule 29 (tiposimple -> CHAR .)


state 16

    (30) tipocompuesto -> DATAFRAME .

    ID              reduce using rule 30 (tipocompuesto -> DATAFRAME .)


state 17

    (32) tipocompuesto -> FILE .

    ID              reduce using rule 32 (tipocompuesto -> FILE .)


state 18

    (1) programa -> PROGRAM ID SC programa_a bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SC programa_a bloque .)


state 19

    (33) bloque -> OB . bloque_a CB
    (34) bloque_a -> . estatuto bloque_a
    (35) bloque_a -> . estatuto
    (36) bloque_a -> . empty
    (37) estatuto -> . asignacion
    (38) estatuto -> . condicion
    (39) estatuto -> . llamada
    (40) estatuto -> . while
    (41) estatuto -> . for
    (42) estatuto -> . classcreate
    (43) estatuto -> . vars
    (44) estatuto -> . classdeclare
    (45) estatuto -> . llamadafuncionclase
    (46) estatuto -> . function
    (47) estatuto -> . return
    (122) empty -> .
    (108) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (100) condicion -> . condicion_c bloque condicion_a
    (75) llamada -> . llamada_d llamada_a CP SC
    (60) while -> . while_b bloque
    (69) for -> . for_a for_b bloque
    (92) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (106) classdeclare -> . CLASS_ID ID SC
    (107) llamadafuncionclase -> . ID POINT llamada
    (112) function -> . DEF function_e bloque
    (48) return -> . RETURN expresion SC
    (104) condicion_c -> . IF OP expresion CP
    (81) llamada_d -> . llamada_c OP
    (62) while_b -> . while_a OP expresion CP
    (70) for_a -> . FOR
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE
    (80) llamada_c -> . ID
    (61) while_a -> . WHILE

    CB              reduce using rule 122 (empty -> .)
    ID              shift and go to state 41
    CLASS           shift and go to state 46
    CLASS_ID        shift and go to state 47
    DEF             shift and go to state 49
    RETURN          shift and go to state 50
    IF              shift and go to state 51
    FOR             shift and go to state 54
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    WHILE           shift and go to state 55

    bloque_a                       shift and go to state 27
    estatuto                       shift and go to state 28
    empty                          shift and go to state 29
    asignacion                     shift and go to state 30
    condicion                      shift and go to state 31
    llamada                        shift and go to state 32
    while                          shift and go to state 33
    for                            shift and go to state 34
    classcreate                    shift and go to state 35
    vars                           shift and go to state 36
    classdeclare                   shift and go to state 37
    llamadafuncionclase            shift and go to state 38
    function                       shift and go to state 39
    return                         shift and go to state 40
    condicion_c                    shift and go to state 42
    llamada_d                      shift and go to state 43
    while_b                        shift and go to state 44
    for_a                          shift and go to state 45
    tiposimple                     shift and go to state 48
    tipocompuesto                  shift and go to state 12
    llamada_c                      shift and go to state 52
    while_a                        shift and go to state 53

state 20

    (3) programa_a -> programa_b programa_a .

    OB              reduce using rule 3 (programa_a -> programa_b programa_a .)


state 21

    (7) vars -> tiposimple vars_a . SC

    SC              shift and go to state 56


state 22

    (14) vars_vect_mat -> tiposimple ID . vars_vect_mat_a SC
    (15) vars_vect_mat -> tiposimple ID . vars_vect_mat_a vars_vect_mat_a SC
    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion
    (16) vars_vect_mat_a -> . OSB exp CSB

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 58
    OSB             shift and go to state 59

    vars_vect_mat_a                shift and go to state 57

state 23

    (9) vars_a -> vars_b .
    (13) vars_c -> vars_b . COMMA

    SC              reduce using rule 9 (vars_a -> vars_b .)
    COMMA           shift and go to state 60


state 24

    (10) vars_a -> vars_c . vars_a
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_c                         shift and go to state 24
    vars_a                         shift and go to state 61
    vars_b                         shift and go to state 23

state 25

    (8) vars -> tipocompuesto vars_a . SC

    SC              shift and go to state 62


state 26

    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 58


state 27

    (33) bloque -> OB bloque_a . CB

    CB              shift and go to state 63


state 28

    (34) bloque_a -> estatuto . bloque_a
    (35) bloque_a -> estatuto .
    (34) bloque_a -> . estatuto bloque_a
    (35) bloque_a -> . estatuto
    (36) bloque_a -> . empty
    (37) estatuto -> . asignacion
    (38) estatuto -> . condicion
    (39) estatuto -> . llamada
    (40) estatuto -> . while
    (41) estatuto -> . for
    (42) estatuto -> . classcreate
    (43) estatuto -> . vars
    (44) estatuto -> . classdeclare
    (45) estatuto -> . llamadafuncionclase
    (46) estatuto -> . function
    (47) estatuto -> . return
    (122) empty -> .
    (108) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (100) condicion -> . condicion_c bloque condicion_a
    (75) llamada -> . llamada_d llamada_a CP SC
    (60) while -> . while_b bloque
    (69) for -> . for_a for_b bloque
    (92) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (106) classdeclare -> . CLASS_ID ID SC
    (107) llamadafuncionclase -> . ID POINT llamada
    (112) function -> . DEF function_e bloque
    (48) return -> . RETURN expresion SC
    (104) condicion_c -> . IF OP expresion CP
    (81) llamada_d -> . llamada_c OP
    (62) while_b -> . while_a OP expresion CP
    (70) for_a -> . FOR
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE
    (80) llamada_c -> . ID
    (61) while_a -> . WHILE

  ! reduce/reduce conflict for CB resolved using rule 35 (bloque_a -> estatuto .)
    CB              reduce using rule 35 (bloque_a -> estatuto .)
    ID              shift and go to state 41
    CLASS           shift and go to state 46
    CLASS_ID        shift and go to state 47
    DEF             shift and go to state 49
    RETURN          shift and go to state 50
    IF              shift and go to state 51
    FOR             shift and go to state 54
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    WHILE           shift and go to state 55

  ! CB              [ reduce using rule 122 (empty -> .) ]

    estatuto                       shift and go to state 28
    bloque_a                       shift and go to state 64
    empty                          shift and go to state 29
    asignacion                     shift and go to state 30
    condicion                      shift and go to state 31
    llamada                        shift and go to state 32
    while                          shift and go to state 33
    for                            shift and go to state 34
    classcreate                    shift and go to state 35
    vars                           shift and go to state 36
    classdeclare                   shift and go to state 37
    llamadafuncionclase            shift and go to state 38
    function                       shift and go to state 39
    return                         shift and go to state 40
    condicion_c                    shift and go to state 42
    llamada_d                      shift and go to state 43
    while_b                        shift and go to state 44
    for_a                          shift and go to state 45
    tiposimple                     shift and go to state 48
    tipocompuesto                  shift and go to state 12
    llamada_c                      shift and go to state 52
    while_a                        shift and go to state 53

state 29

    (36) bloque_a -> empty .

    CB              reduce using rule 36 (bloque_a -> empty .)


state 30

    (37) estatuto -> asignacion .

    ID              reduce using rule 37 (estatuto -> asignacion .)
    CLASS           reduce using rule 37 (estatuto -> asignacion .)
    CLASS_ID        reduce using rule 37 (estatuto -> asignacion .)
    DEF             reduce using rule 37 (estatuto -> asignacion .)
    RETURN          reduce using rule 37 (estatuto -> asignacion .)
    IF              reduce using rule 37 (estatuto -> asignacion .)
    FOR             reduce using rule 37 (estatuto -> asignacion .)
    INT             reduce using rule 37 (estatuto -> asignacion .)
    FLOAT           reduce using rule 37 (estatuto -> asignacion .)
    CHAR            reduce using rule 37 (estatuto -> asignacion .)
    DATAFRAME       reduce using rule 37 (estatuto -> asignacion .)
    FILE            reduce using rule 37 (estatuto -> asignacion .)
    WHILE           reduce using rule 37 (estatuto -> asignacion .)
    CB              reduce using rule 37 (estatuto -> asignacion .)


state 31

    (38) estatuto -> condicion .

    ID              reduce using rule 38 (estatuto -> condicion .)
    CLASS           reduce using rule 38 (estatuto -> condicion .)
    CLASS_ID        reduce using rule 38 (estatuto -> condicion .)
    DEF             reduce using rule 38 (estatuto -> condicion .)
    RETURN          reduce using rule 38 (estatuto -> condicion .)
    IF              reduce using rule 38 (estatuto -> condicion .)
    FOR             reduce using rule 38 (estatuto -> condicion .)
    INT             reduce using rule 38 (estatuto -> condicion .)
    FLOAT           reduce using rule 38 (estatuto -> condicion .)
    CHAR            reduce using rule 38 (estatuto -> condicion .)
    DATAFRAME       reduce using rule 38 (estatuto -> condicion .)
    FILE            reduce using rule 38 (estatuto -> condicion .)
    WHILE           reduce using rule 38 (estatuto -> condicion .)
    CB              reduce using rule 38 (estatuto -> condicion .)


state 32

    (39) estatuto -> llamada .

    ID              reduce using rule 39 (estatuto -> llamada .)
    CLASS           reduce using rule 39 (estatuto -> llamada .)
    CLASS_ID        reduce using rule 39 (estatuto -> llamada .)
    DEF             reduce using rule 39 (estatuto -> llamada .)
    RETURN          reduce using rule 39 (estatuto -> llamada .)
    IF              reduce using rule 39 (estatuto -> llamada .)
    FOR             reduce using rule 39 (estatuto -> llamada .)
    INT             reduce using rule 39 (estatuto -> llamada .)
    FLOAT           reduce using rule 39 (estatuto -> llamada .)
    CHAR            reduce using rule 39 (estatuto -> llamada .)
    DATAFRAME       reduce using rule 39 (estatuto -> llamada .)
    FILE            reduce using rule 39 (estatuto -> llamada .)
    WHILE           reduce using rule 39 (estatuto -> llamada .)
    CB              reduce using rule 39 (estatuto -> llamada .)


state 33

    (40) estatuto -> while .

    ID              reduce using rule 40 (estatuto -> while .)
    CLASS           reduce using rule 40 (estatuto -> while .)
    CLASS_ID        reduce using rule 40 (estatuto -> while .)
    DEF             reduce using rule 40 (estatuto -> while .)
    RETURN          reduce using rule 40 (estatuto -> while .)
    IF              reduce using rule 40 (estatuto -> while .)
    FOR             reduce using rule 40 (estatuto -> while .)
    INT             reduce using rule 40 (estatuto -> while .)
    FLOAT           reduce using rule 40 (estatuto -> while .)
    CHAR            reduce using rule 40 (estatuto -> while .)
    DATAFRAME       reduce using rule 40 (estatuto -> while .)
    FILE            reduce using rule 40 (estatuto -> while .)
    WHILE           reduce using rule 40 (estatuto -> while .)
    CB              reduce using rule 40 (estatuto -> while .)


state 34

    (41) estatuto -> for .

    ID              reduce using rule 41 (estatuto -> for .)
    CLASS           reduce using rule 41 (estatuto -> for .)
    CLASS_ID        reduce using rule 41 (estatuto -> for .)
    DEF             reduce using rule 41 (estatuto -> for .)
    RETURN          reduce using rule 41 (estatuto -> for .)
    IF              reduce using rule 41 (estatuto -> for .)
    FOR             reduce using rule 41 (estatuto -> for .)
    INT             reduce using rule 41 (estatuto -> for .)
    FLOAT           reduce using rule 41 (estatuto -> for .)
    CHAR            reduce using rule 41 (estatuto -> for .)
    DATAFRAME       reduce using rule 41 (estatuto -> for .)
    FILE            reduce using rule 41 (estatuto -> for .)
    WHILE           reduce using rule 41 (estatuto -> for .)
    CB              reduce using rule 41 (estatuto -> for .)


state 35

    (42) estatuto -> classcreate .

    ID              reduce using rule 42 (estatuto -> classcreate .)
    CLASS           reduce using rule 42 (estatuto -> classcreate .)
    CLASS_ID        reduce using rule 42 (estatuto -> classcreate .)
    DEF             reduce using rule 42 (estatuto -> classcreate .)
    RETURN          reduce using rule 42 (estatuto -> classcreate .)
    IF              reduce using rule 42 (estatuto -> classcreate .)
    FOR             reduce using rule 42 (estatuto -> classcreate .)
    INT             reduce using rule 42 (estatuto -> classcreate .)
    FLOAT           reduce using rule 42 (estatuto -> classcreate .)
    CHAR            reduce using rule 42 (estatuto -> classcreate .)
    DATAFRAME       reduce using rule 42 (estatuto -> classcreate .)
    FILE            reduce using rule 42 (estatuto -> classcreate .)
    WHILE           reduce using rule 42 (estatuto -> classcreate .)
    CB              reduce using rule 42 (estatuto -> classcreate .)


state 36

    (43) estatuto -> vars .

    ID              reduce using rule 43 (estatuto -> vars .)
    CLASS           reduce using rule 43 (estatuto -> vars .)
    CLASS_ID        reduce using rule 43 (estatuto -> vars .)
    DEF             reduce using rule 43 (estatuto -> vars .)
    RETURN          reduce using rule 43 (estatuto -> vars .)
    IF              reduce using rule 43 (estatuto -> vars .)
    FOR             reduce using rule 43 (estatuto -> vars .)
    INT             reduce using rule 43 (estatuto -> vars .)
    FLOAT           reduce using rule 43 (estatuto -> vars .)
    CHAR            reduce using rule 43 (estatuto -> vars .)
    DATAFRAME       reduce using rule 43 (estatuto -> vars .)
    FILE            reduce using rule 43 (estatuto -> vars .)
    WHILE           reduce using rule 43 (estatuto -> vars .)
    CB              reduce using rule 43 (estatuto -> vars .)


state 37

    (44) estatuto -> classdeclare .

    ID              reduce using rule 44 (estatuto -> classdeclare .)
    CLASS           reduce using rule 44 (estatuto -> classdeclare .)
    CLASS_ID        reduce using rule 44 (estatuto -> classdeclare .)
    DEF             reduce using rule 44 (estatuto -> classdeclare .)
    RETURN          reduce using rule 44 (estatuto -> classdeclare .)
    IF              reduce using rule 44 (estatuto -> classdeclare .)
    FOR             reduce using rule 44 (estatuto -> classdeclare .)
    INT             reduce using rule 44 (estatuto -> classdeclare .)
    FLOAT           reduce using rule 44 (estatuto -> classdeclare .)
    CHAR            reduce using rule 44 (estatuto -> classdeclare .)
    DATAFRAME       reduce using rule 44 (estatuto -> classdeclare .)
    FILE            reduce using rule 44 (estatuto -> classdeclare .)
    WHILE           reduce using rule 44 (estatuto -> classdeclare .)
    CB              reduce using rule 44 (estatuto -> classdeclare .)


state 38

    (45) estatuto -> llamadafuncionclase .

    ID              reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CLASS           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CLASS_ID        reduce using rule 45 (estatuto -> llamadafuncionclase .)
    DEF             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    RETURN          reduce using rule 45 (estatuto -> llamadafuncionclase .)
    IF              reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FOR             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    INT             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FLOAT           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CHAR            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    DATAFRAME       reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FILE            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    WHILE           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CB              reduce using rule 45 (estatuto -> llamadafuncionclase .)


state 39

    (46) estatuto -> function .

    ID              reduce using rule 46 (estatuto -> function .)
    CLASS           reduce using rule 46 (estatuto -> function .)
    CLASS_ID        reduce using rule 46 (estatuto -> function .)
    DEF             reduce using rule 46 (estatuto -> function .)
    RETURN          reduce using rule 46 (estatuto -> function .)
    IF              reduce using rule 46 (estatuto -> function .)
    FOR             reduce using rule 46 (estatuto -> function .)
    INT             reduce using rule 46 (estatuto -> function .)
    FLOAT           reduce using rule 46 (estatuto -> function .)
    CHAR            reduce using rule 46 (estatuto -> function .)
    DATAFRAME       reduce using rule 46 (estatuto -> function .)
    FILE            reduce using rule 46 (estatuto -> function .)
    WHILE           reduce using rule 46 (estatuto -> function .)
    CB              reduce using rule 46 (estatuto -> function .)


state 40

    (47) estatuto -> return .

    ID              reduce using rule 47 (estatuto -> return .)
    CLASS           reduce using rule 47 (estatuto -> return .)
    CLASS_ID        reduce using rule 47 (estatuto -> return .)
    DEF             reduce using rule 47 (estatuto -> return .)
    RETURN          reduce using rule 47 (estatuto -> return .)
    IF              reduce using rule 47 (estatuto -> return .)
    FOR             reduce using rule 47 (estatuto -> return .)
    INT             reduce using rule 47 (estatuto -> return .)
    FLOAT           reduce using rule 47 (estatuto -> return .)
    CHAR            reduce using rule 47 (estatuto -> return .)
    DATAFRAME       reduce using rule 47 (estatuto -> return .)
    FILE            reduce using rule 47 (estatuto -> return .)
    WHILE           reduce using rule 47 (estatuto -> return .)
    CB              reduce using rule 47 (estatuto -> return .)


state 41

    (108) asignacion -> ID . asignacion_a asignacion_a EQ expresion SC
    (107) llamadafuncionclase -> ID . POINT llamada
    (31) tipocompuesto -> ID .
    (80) llamada_c -> ID .
    (109) asignacion_a -> . OSB exp CSB
    (110) asignacion_a -> . empty
    (122) empty -> .

  ! shift/reduce conflict for OSB resolved as shift
    POINT           shift and go to state 66
    ID              reduce using rule 31 (tipocompuesto -> ID .)
    OP              reduce using rule 80 (llamada_c -> ID .)
    OSB             shift and go to state 67
    EQ              reduce using rule 122 (empty -> .)

  ! OSB             [ reduce using rule 122 (empty -> .) ]

    asignacion_a                   shift and go to state 65
    empty                          shift and go to state 68

state 42

    (100) condicion -> condicion_c . bloque condicion_a
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 69

state 43

    (75) llamada -> llamada_d . llamada_a CP SC
    (76) llamada_a -> . llamada_e llamada_b
    (77) llamada_a -> . llamada_b
    (82) llamada_e -> . expresion
    (83) llamada_e -> . CTE_STRING
    (78) llamada_b -> . llamada_f llamada_a
    (79) llamada_b -> . empty
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (84) llamada_f -> . COMMA
    (122) empty -> .
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_STRING      shift and go to state 74
    COMMA           shift and go to state 78
    CP              reduce using rule 122 (empty -> .)
    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    llamada_d                      shift and go to state 43
    llamada_a                      shift and go to state 70
    llamada_e                      shift and go to state 71
    llamada_b                      shift and go to state 72
    expresion                      shift and go to state 73
    llamada_f                      shift and go to state 75
    empty                          shift and go to state 76
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_c                      shift and go to state 52

state 44

    (60) while -> while_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 90

state 45

    (69) for -> for_a . for_b bloque
    (71) for_b -> . for_e asignacionsencilla CP
    (74) for_e -> . for_d SC
    (73) for_d -> . for_c expresion
    (72) for_c -> . OP asignacionsencilla SC

    OP              shift and go to state 95

    for_b                          shift and go to state 91
    for_e                          shift and go to state 92
    for_d                          shift and go to state 93
    for_c                          shift and go to state 94

state 46

    (92) classcreate -> CLASS . CLASS_ID OB classcreate_a function classcreate_c CB

    CLASS_ID        shift and go to state 96


state 47

    (106) classdeclare -> CLASS_ID . ID SC

    ID              shift and go to state 97


state 48

    (7) vars -> tiposimple . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 49

    (112) function -> DEF . function_e bloque
    (120) function_e -> . function_c OP function_b CP vars
    (121) function_e -> . function_c OP function_b CP empty
    (118) function_c -> . function_a ID
    (113) function_a -> . VOID
    (114) function_a -> . tiposimple
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    VOID            shift and go to state 101
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function_e                     shift and go to state 98
    function_c                     shift and go to state 99
    function_a                     shift and go to state 100
    tiposimple                     shift and go to state 102

state 50

    (48) return -> RETURN . expresion SC
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    expresion                      shift and go to state 103
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 51

    (104) condicion_c -> IF . OP expresion CP

    OP              shift and go to state 104


state 52

    (81) llamada_d -> llamada_c . OP

    OP              shift and go to state 105


state 53

    (62) while_b -> while_a . OP expresion CP

    OP              shift and go to state 106


state 54

    (70) for_a -> FOR .

    OP              reduce using rule 70 (for_a -> FOR .)


state 55

    (61) while_a -> WHILE .

    OP              reduce using rule 61 (while_a -> WHILE .)


state 56

    (7) vars -> tiposimple vars_a SC .

    INT             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FLOAT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CHAR            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DATAFRAME       reduce using rule 7 (vars -> tiposimple vars_a SC .)
    ID              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FILE            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    OB              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS_ID        reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DEF             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    RETURN          reduce using rule 7 (vars -> tiposimple vars_a SC .)
    IF              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FOR             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    WHILE           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CB              reduce using rule 7 (vars -> tiposimple vars_a SC .)


state 57

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a . SC
    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a . vars_vect_mat_a SC
    (16) vars_vect_mat_a -> . OSB exp CSB

    SC              shift and go to state 108
    OSB             shift and go to state 59

    vars_vect_mat_a                shift and go to state 107

state 58

    (12) vars_b -> ID EQ . expresion
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    expresion                      shift and go to state 109
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 59

    (16) vars_vect_mat_a -> OSB . exp CSB
    (63) exp -> . and_exp exp_a
    (66) and_exp -> . expresion and_exp_a
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    exp                            shift and go to state 110
    and_exp                        shift and go to state 111
    expresion                      shift and go to state 112
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 60

    (13) vars_c -> vars_b COMMA .

    ID              reduce using rule 13 (vars_c -> vars_b COMMA .)


state 61

    (10) vars_a -> vars_c vars_a .

    SC              reduce using rule 10 (vars_a -> vars_c vars_a .)


state 62

    (8) vars -> tipocompuesto vars_a SC .

    INT             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FLOAT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CHAR            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DATAFRAME       reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    ID              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FILE            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    OB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS_ID        reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DEF             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    RETURN          reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    IF              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FOR             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    WHILE           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)


state 63

    (33) bloque -> OB bloque_a CB .

    $end            reduce using rule 33 (bloque -> OB bloque_a CB .)
    ELSE            reduce using rule 33 (bloque -> OB bloque_a CB .)
    ID              reduce using rule 33 (bloque -> OB bloque_a CB .)
    CLASS           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CLASS_ID        reduce using rule 33 (bloque -> OB bloque_a CB .)
    DEF             reduce using rule 33 (bloque -> OB bloque_a CB .)
    RETURN          reduce using rule 33 (bloque -> OB bloque_a CB .)
    IF              reduce using rule 33 (bloque -> OB bloque_a CB .)
    FOR             reduce using rule 33 (bloque -> OB bloque_a CB .)
    INT             reduce using rule 33 (bloque -> OB bloque_a CB .)
    FLOAT           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CHAR            reduce using rule 33 (bloque -> OB bloque_a CB .)
    DATAFRAME       reduce using rule 33 (bloque -> OB bloque_a CB .)
    FILE            reduce using rule 33 (bloque -> OB bloque_a CB .)
    WHILE           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CB              reduce using rule 33 (bloque -> OB bloque_a CB .)
    OB              reduce using rule 33 (bloque -> OB bloque_a CB .)


state 64

    (34) bloque_a -> estatuto bloque_a .

    CB              reduce using rule 34 (bloque_a -> estatuto bloque_a .)


state 65

    (108) asignacion -> ID asignacion_a . asignacion_a EQ expresion SC
    (109) asignacion_a -> . OSB exp CSB
    (110) asignacion_a -> . empty
    (122) empty -> .

    OSB             shift and go to state 67
    EQ              reduce using rule 122 (empty -> .)

    asignacion_a                   shift and go to state 113
    empty                          shift and go to state 68

state 66

    (107) llamadafuncionclase -> ID POINT . llamada
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    ID              shift and go to state 114

    llamada                        shift and go to state 115
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 67

    (109) asignacion_a -> OSB . exp CSB
    (63) exp -> . and_exp exp_a
    (66) and_exp -> . expresion and_exp_a
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    exp                            shift and go to state 116
    and_exp                        shift and go to state 111
    expresion                      shift and go to state 112
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 68

    (110) asignacion_a -> empty .

    OSB             reduce using rule 110 (asignacion_a -> empty .)
    EQ              reduce using rule 110 (asignacion_a -> empty .)


state 69

    (100) condicion -> condicion_c bloque . condicion_a
    (101) condicion_a -> . condicion_d condicion_b bloque
    (105) condicion_d -> . ELSE

    ELSE            shift and go to state 119

    condicion_a                    shift and go to state 117
    condicion_d                    shift and go to state 118

state 70

    (75) llamada -> llamada_d llamada_a . CP SC

    CP              shift and go to state 120


state 71

    (76) llamada_a -> llamada_e . llamada_b
    (78) llamada_b -> . llamada_f llamada_a
    (79) llamada_b -> . empty
    (84) llamada_f -> . COMMA
    (122) empty -> .

    COMMA           shift and go to state 78
    CP              reduce using rule 122 (empty -> .)

    llamada_b                      shift and go to state 121
    llamada_f                      shift and go to state 75
    empty                          shift and go to state 76

state 72

    (77) llamada_a -> llamada_b .

    CP              reduce using rule 77 (llamada_a -> llamada_b .)


state 73

    (82) llamada_e -> expresion .

    COMMA           reduce using rule 82 (llamada_e -> expresion .)
    CP              reduce using rule 82 (llamada_e -> expresion .)


state 74

    (83) llamada_e -> CTE_STRING .

    COMMA           reduce using rule 83 (llamada_e -> CTE_STRING .)
    CP              reduce using rule 83 (llamada_e -> CTE_STRING .)


state 75

    (78) llamada_b -> llamada_f . llamada_a
    (76) llamada_a -> . llamada_e llamada_b
    (77) llamada_a -> . llamada_b
    (82) llamada_e -> . expresion
    (83) llamada_e -> . CTE_STRING
    (78) llamada_b -> . llamada_f llamada_a
    (79) llamada_b -> . empty
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (84) llamada_f -> . COMMA
    (122) empty -> .
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_STRING      shift and go to state 74
    COMMA           shift and go to state 78
    CP              reduce using rule 122 (empty -> .)
    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    llamada_f                      shift and go to state 75
    llamada_a                      shift and go to state 122
    llamada_e                      shift and go to state 71
    llamada_b                      shift and go to state 72
    expresion                      shift and go to state 73
    empty                          shift and go to state 76
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 76

    (79) llamada_b -> empty .

    CP              reduce using rule 79 (llamada_b -> empty .)


state 77

    (49) expresion -> m_exp .
    (50) expresion -> m_exp . expresion_a m_exp
    (51) expresion_a -> . LT
    (52) expresion_a -> . GT
    (53) expresion_a -> . NE
    (54) expresion_a -> . EQEQ
    (55) expresion_a -> . LE
    (56) expresion_a -> . GE

    COMMA           reduce using rule 49 (expresion -> m_exp .)
    CP              reduce using rule 49 (expresion -> m_exp .)
    SC              reduce using rule 49 (expresion -> m_exp .)
    AND             reduce using rule 49 (expresion -> m_exp .)
    OR              reduce using rule 49 (expresion -> m_exp .)
    CSB             reduce using rule 49 (expresion -> m_exp .)
    LT              shift and go to state 124
    GT              shift and go to state 125
    NE              shift and go to state 126
    EQEQ            shift and go to state 127
    LE              shift and go to state 128
    GE              shift and go to state 129

    expresion_a                    shift and go to state 123

state 78

    (84) llamada_f -> COMMA .

    CTE_STRING      reduce using rule 84 (llamada_f -> COMMA .)
    COMMA           reduce using rule 84 (llamada_f -> COMMA .)
    CTE_I           reduce using rule 84 (llamada_f -> COMMA .)
    CTE_F           reduce using rule 84 (llamada_f -> COMMA .)
    CTE_CHAR        reduce using rule 84 (llamada_f -> COMMA .)
    ID              reduce using rule 84 (llamada_f -> COMMA .)
    OP              reduce using rule 84 (llamada_f -> COMMA .)
    CP              reduce using rule 84 (llamada_f -> COMMA .)


state 79

    (17) m_exp -> m_exp_b .
    (18) m_exp -> m_exp_b . m_exp_a m_exp
    (19) m_exp_a -> . ADD
    (20) m_exp_a -> . SUB

    LT              reduce using rule 17 (m_exp -> m_exp_b .)
    GT              reduce using rule 17 (m_exp -> m_exp_b .)
    NE              reduce using rule 17 (m_exp -> m_exp_b .)
    EQEQ            reduce using rule 17 (m_exp -> m_exp_b .)
    LE              reduce using rule 17 (m_exp -> m_exp_b .)
    GE              reduce using rule 17 (m_exp -> m_exp_b .)
    COMMA           reduce using rule 17 (m_exp -> m_exp_b .)
    CP              reduce using rule 17 (m_exp -> m_exp_b .)
    SC              reduce using rule 17 (m_exp -> m_exp_b .)
    AND             reduce using rule 17 (m_exp -> m_exp_b .)
    OR              reduce using rule 17 (m_exp -> m_exp_b .)
    CSB             reduce using rule 17 (m_exp -> m_exp_b .)
    ADD             shift and go to state 131
    SUB             shift and go to state 132

    m_exp_a                        shift and go to state 130

state 80

    (21) m_exp_b -> term .

    ADD             reduce using rule 21 (m_exp_b -> term .)
    SUB             reduce using rule 21 (m_exp_b -> term .)
    LT              reduce using rule 21 (m_exp_b -> term .)
    GT              reduce using rule 21 (m_exp_b -> term .)
    NE              reduce using rule 21 (m_exp_b -> term .)
    EQEQ            reduce using rule 21 (m_exp_b -> term .)
    LE              reduce using rule 21 (m_exp_b -> term .)
    GE              reduce using rule 21 (m_exp_b -> term .)
    COMMA           reduce using rule 21 (m_exp_b -> term .)
    CP              reduce using rule 21 (m_exp_b -> term .)
    SC              reduce using rule 21 (m_exp_b -> term .)
    AND             reduce using rule 21 (m_exp_b -> term .)
    OR              reduce using rule 21 (m_exp_b -> term .)
    CSB             reduce using rule 21 (m_exp_b -> term .)


state 81

    (22) term -> term_b .
    (23) term -> term_b . term_a term
    (24) term_a -> . MULT
    (25) term_a -> . DIV

    ADD             reduce using rule 22 (term -> term_b .)
    SUB             reduce using rule 22 (term -> term_b .)
    LT              reduce using rule 22 (term -> term_b .)
    GT              reduce using rule 22 (term -> term_b .)
    NE              reduce using rule 22 (term -> term_b .)
    EQEQ            reduce using rule 22 (term -> term_b .)
    LE              reduce using rule 22 (term -> term_b .)
    GE              reduce using rule 22 (term -> term_b .)
    COMMA           reduce using rule 22 (term -> term_b .)
    CP              reduce using rule 22 (term -> term_b .)
    SC              reduce using rule 22 (term -> term_b .)
    AND             reduce using rule 22 (term -> term_b .)
    OR              reduce using rule 22 (term -> term_b .)
    CSB             reduce using rule 22 (term -> term_b .)
    MULT            shift and go to state 134
    DIV             shift and go to state 135

    term_a                         shift and go to state 133

state 82

    (26) term_b -> fact .

    MULT            reduce using rule 26 (term_b -> fact .)
    DIV             reduce using rule 26 (term_b -> fact .)
    ADD             reduce using rule 26 (term_b -> fact .)
    SUB             reduce using rule 26 (term_b -> fact .)
    LT              reduce using rule 26 (term_b -> fact .)
    GT              reduce using rule 26 (term_b -> fact .)
    NE              reduce using rule 26 (term_b -> fact .)
    EQEQ            reduce using rule 26 (term_b -> fact .)
    LE              reduce using rule 26 (term_b -> fact .)
    GE              reduce using rule 26 (term_b -> fact .)
    COMMA           reduce using rule 26 (term_b -> fact .)
    CP              reduce using rule 26 (term_b -> fact .)
    SC              reduce using rule 26 (term_b -> fact .)
    AND             reduce using rule 26 (term_b -> fact .)
    OR              reduce using rule 26 (term_b -> fact .)
    CSB             reduce using rule 26 (term_b -> fact .)


state 83

    (85) fact -> fact_a . exp CP
    (63) exp -> . and_exp exp_a
    (66) and_exp -> . expresion and_exp_a
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    fact_a                         shift and go to state 83
    exp                            shift and go to state 136
    and_exp                        shift and go to state 111
    expresion                      shift and go to state 112
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 84

    (86) fact -> CTE_I .

    MULT            reduce using rule 86 (fact -> CTE_I .)
    DIV             reduce using rule 86 (fact -> CTE_I .)
    ADD             reduce using rule 86 (fact -> CTE_I .)
    SUB             reduce using rule 86 (fact -> CTE_I .)
    LT              reduce using rule 86 (fact -> CTE_I .)
    GT              reduce using rule 86 (fact -> CTE_I .)
    NE              reduce using rule 86 (fact -> CTE_I .)
    EQEQ            reduce using rule 86 (fact -> CTE_I .)
    LE              reduce using rule 86 (fact -> CTE_I .)
    GE              reduce using rule 86 (fact -> CTE_I .)
    COMMA           reduce using rule 86 (fact -> CTE_I .)
    CP              reduce using rule 86 (fact -> CTE_I .)
    SC              reduce using rule 86 (fact -> CTE_I .)
    AND             reduce using rule 86 (fact -> CTE_I .)
    OR              reduce using rule 86 (fact -> CTE_I .)
    CSB             reduce using rule 86 (fact -> CTE_I .)


state 85

    (87) fact -> CTE_F .

    MULT            reduce using rule 87 (fact -> CTE_F .)
    DIV             reduce using rule 87 (fact -> CTE_F .)
    ADD             reduce using rule 87 (fact -> CTE_F .)
    SUB             reduce using rule 87 (fact -> CTE_F .)
    LT              reduce using rule 87 (fact -> CTE_F .)
    GT              reduce using rule 87 (fact -> CTE_F .)
    NE              reduce using rule 87 (fact -> CTE_F .)
    EQEQ            reduce using rule 87 (fact -> CTE_F .)
    LE              reduce using rule 87 (fact -> CTE_F .)
    GE              reduce using rule 87 (fact -> CTE_F .)
    COMMA           reduce using rule 87 (fact -> CTE_F .)
    CP              reduce using rule 87 (fact -> CTE_F .)
    SC              reduce using rule 87 (fact -> CTE_F .)
    AND             reduce using rule 87 (fact -> CTE_F .)
    OR              reduce using rule 87 (fact -> CTE_F .)
    CSB             reduce using rule 87 (fact -> CTE_F .)


state 86

    (88) fact -> CTE_CHAR .

    MULT            reduce using rule 88 (fact -> CTE_CHAR .)
    DIV             reduce using rule 88 (fact -> CTE_CHAR .)
    ADD             reduce using rule 88 (fact -> CTE_CHAR .)
    SUB             reduce using rule 88 (fact -> CTE_CHAR .)
    LT              reduce using rule 88 (fact -> CTE_CHAR .)
    GT              reduce using rule 88 (fact -> CTE_CHAR .)
    NE              reduce using rule 88 (fact -> CTE_CHAR .)
    EQEQ            reduce using rule 88 (fact -> CTE_CHAR .)
    LE              reduce using rule 88 (fact -> CTE_CHAR .)
    GE              reduce using rule 88 (fact -> CTE_CHAR .)
    COMMA           reduce using rule 88 (fact -> CTE_CHAR .)
    CP              reduce using rule 88 (fact -> CTE_CHAR .)
    SC              reduce using rule 88 (fact -> CTE_CHAR .)
    AND             reduce using rule 88 (fact -> CTE_CHAR .)
    OR              reduce using rule 88 (fact -> CTE_CHAR .)
    CSB             reduce using rule 88 (fact -> CTE_CHAR .)


state 87

    (89) fact -> ID .
    (80) llamada_c -> ID .

    MULT            reduce using rule 89 (fact -> ID .)
    DIV             reduce using rule 89 (fact -> ID .)
    ADD             reduce using rule 89 (fact -> ID .)
    SUB             reduce using rule 89 (fact -> ID .)
    LT              reduce using rule 89 (fact -> ID .)
    GT              reduce using rule 89 (fact -> ID .)
    NE              reduce using rule 89 (fact -> ID .)
    EQEQ            reduce using rule 89 (fact -> ID .)
    LE              reduce using rule 89 (fact -> ID .)
    GE              reduce using rule 89 (fact -> ID .)
    COMMA           reduce using rule 89 (fact -> ID .)
    CP              reduce using rule 89 (fact -> ID .)
    SC              reduce using rule 89 (fact -> ID .)
    AND             reduce using rule 89 (fact -> ID .)
    OR              reduce using rule 89 (fact -> ID .)
    CSB             reduce using rule 89 (fact -> ID .)
    OP              reduce using rule 80 (llamada_c -> ID .)


state 88

    (90) fact -> llamada .

    MULT            reduce using rule 90 (fact -> llamada .)
    DIV             reduce using rule 90 (fact -> llamada .)
    ADD             reduce using rule 90 (fact -> llamada .)
    SUB             reduce using rule 90 (fact -> llamada .)
    LT              reduce using rule 90 (fact -> llamada .)
    GT              reduce using rule 90 (fact -> llamada .)
    NE              reduce using rule 90 (fact -> llamada .)
    EQEQ            reduce using rule 90 (fact -> llamada .)
    LE              reduce using rule 90 (fact -> llamada .)
    GE              reduce using rule 90 (fact -> llamada .)
    COMMA           reduce using rule 90 (fact -> llamada .)
    CP              reduce using rule 90 (fact -> llamada .)
    SC              reduce using rule 90 (fact -> llamada .)
    AND             reduce using rule 90 (fact -> llamada .)
    OR              reduce using rule 90 (fact -> llamada .)
    CSB             reduce using rule 90 (fact -> llamada .)


state 89

    (91) fact_a -> OP .

    CTE_I           reduce using rule 91 (fact_a -> OP .)
    CTE_F           reduce using rule 91 (fact_a -> OP .)
    CTE_CHAR        reduce using rule 91 (fact_a -> OP .)
    ID              reduce using rule 91 (fact_a -> OP .)
    OP              reduce using rule 91 (fact_a -> OP .)


state 90

    (60) while -> while_b bloque .

    ID              reduce using rule 60 (while -> while_b bloque .)
    CLASS           reduce using rule 60 (while -> while_b bloque .)
    CLASS_ID        reduce using rule 60 (while -> while_b bloque .)
    DEF             reduce using rule 60 (while -> while_b bloque .)
    RETURN          reduce using rule 60 (while -> while_b bloque .)
    IF              reduce using rule 60 (while -> while_b bloque .)
    FOR             reduce using rule 60 (while -> while_b bloque .)
    INT             reduce using rule 60 (while -> while_b bloque .)
    FLOAT           reduce using rule 60 (while -> while_b bloque .)
    CHAR            reduce using rule 60 (while -> while_b bloque .)
    DATAFRAME       reduce using rule 60 (while -> while_b bloque .)
    FILE            reduce using rule 60 (while -> while_b bloque .)
    WHILE           reduce using rule 60 (while -> while_b bloque .)
    CB              reduce using rule 60 (while -> while_b bloque .)


state 91

    (69) for -> for_a for_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 137

state 92

    (71) for_b -> for_e . asignacionsencilla CP
    (111) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 139

    asignacionsencilla             shift and go to state 138

state 93

    (74) for_e -> for_d . SC

    SC              shift and go to state 140


state 94

    (73) for_d -> for_c . expresion
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    expresion                      shift and go to state 141
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 95

    (72) for_c -> OP . asignacionsencilla SC
    (111) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 139

    asignacionsencilla             shift and go to state 142

state 96

    (92) classcreate -> CLASS CLASS_ID . OB classcreate_a function classcreate_c CB

    OB              shift and go to state 143


state 97

    (106) classdeclare -> CLASS_ID ID . SC

    SC              shift and go to state 144


state 98

    (112) function -> DEF function_e . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 145

state 99

    (120) function_e -> function_c . OP function_b CP vars
    (121) function_e -> function_c . OP function_b CP empty

    OP              shift and go to state 146


state 100

    (118) function_c -> function_a . ID

    ID              shift and go to state 147


state 101

    (113) function_a -> VOID .

    ID              reduce using rule 113 (function_a -> VOID .)


state 102

    (114) function_a -> tiposimple .

    ID              reduce using rule 114 (function_a -> tiposimple .)


state 103

    (48) return -> RETURN expresion . SC

    SC              shift and go to state 148


state 104

    (104) condicion_c -> IF OP . expresion CP
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    expresion                      shift and go to state 149
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 105

    (81) llamada_d -> llamada_c OP .

    CTE_STRING      reduce using rule 81 (llamada_d -> llamada_c OP .)
    COMMA           reduce using rule 81 (llamada_d -> llamada_c OP .)
    CTE_I           reduce using rule 81 (llamada_d -> llamada_c OP .)
    CTE_F           reduce using rule 81 (llamada_d -> llamada_c OP .)
    CTE_CHAR        reduce using rule 81 (llamada_d -> llamada_c OP .)
    ID              reduce using rule 81 (llamada_d -> llamada_c OP .)
    OP              reduce using rule 81 (llamada_d -> llamada_c OP .)
    CP              reduce using rule 81 (llamada_d -> llamada_c OP .)


state 106

    (62) while_b -> while_a OP . expresion CP
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    expresion                      shift and go to state 150
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 107

    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a . SC

    SC              shift and go to state 151


state 108

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .

    INT             reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FLOAT           reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    CHAR            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    ID              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FILE            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    OB              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    DEF             reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)


state 109

    (12) vars_b -> ID EQ expresion .

    COMMA           reduce using rule 12 (vars_b -> ID EQ expresion .)
    SC              reduce using rule 12 (vars_b -> ID EQ expresion .)


state 110

    (16) vars_vect_mat_a -> OSB exp . CSB

    CSB             shift and go to state 152


state 111

    (63) exp -> and_exp . exp_a
    (64) exp_a -> . OR
    (65) exp_a -> . empty
    (122) empty -> .

    OR              shift and go to state 154
    CSB             reduce using rule 122 (empty -> .)
    CP              reduce using rule 122 (empty -> .)

    exp_a                          shift and go to state 153
    empty                          shift and go to state 155

state 112

    (66) and_exp -> expresion . and_exp_a
    (67) and_exp_a -> . AND
    (68) and_exp_a -> . empty
    (122) empty -> .

    AND             shift and go to state 157
    OR              reduce using rule 122 (empty -> .)
    CSB             reduce using rule 122 (empty -> .)
    CP              reduce using rule 122 (empty -> .)

    and_exp_a                      shift and go to state 156
    empty                          shift and go to state 158

state 113

    (108) asignacion -> ID asignacion_a asignacion_a . EQ expresion SC

    EQ              shift and go to state 159


state 114

    (80) llamada_c -> ID .

    OP              reduce using rule 80 (llamada_c -> ID .)


state 115

    (107) llamadafuncionclase -> ID POINT llamada .

    ID              reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    CLASS           reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    CLASS_ID        reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    DEF             reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    RETURN          reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    IF              reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    FOR             reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    INT             reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    FLOAT           reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    CHAR            reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    DATAFRAME       reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    FILE            reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    WHILE           reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)
    CB              reduce using rule 107 (llamadafuncionclase -> ID POINT llamada .)


state 116

    (109) asignacion_a -> OSB exp . CSB

    CSB             shift and go to state 160


state 117

    (100) condicion -> condicion_c bloque condicion_a .

    ID              reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    CLASS           reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    CLASS_ID        reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    DEF             reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    RETURN          reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    IF              reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    FOR             reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    INT             reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    FLOAT           reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    CHAR            reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    DATAFRAME       reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    FILE            reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    WHILE           reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    CB              reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)
    OB              reduce using rule 100 (condicion -> condicion_c bloque condicion_a .)


state 118

    (101) condicion_a -> condicion_d . condicion_b bloque
    (102) condicion_b -> . condicion
    (103) condicion_b -> . empty
    (100) condicion -> . condicion_c bloque condicion_a
    (122) empty -> .
    (104) condicion_c -> . IF OP expresion CP

    OB              reduce using rule 122 (empty -> .)
    IF              shift and go to state 51

    condicion_b                    shift and go to state 161
    condicion                      shift and go to state 162
    empty                          shift and go to state 163
    condicion_c                    shift and go to state 42

state 119

    (105) condicion_d -> ELSE .

    IF              reduce using rule 105 (condicion_d -> ELSE .)
    OB              reduce using rule 105 (condicion_d -> ELSE .)


state 120

    (75) llamada -> llamada_d llamada_a CP . SC

    SC              shift and go to state 164


state 121

    (76) llamada_a -> llamada_e llamada_b .

    CP              reduce using rule 76 (llamada_a -> llamada_e llamada_b .)


state 122

    (78) llamada_b -> llamada_f llamada_a .

    CP              reduce using rule 78 (llamada_b -> llamada_f llamada_a .)


state 123

    (50) expresion -> m_exp expresion_a . m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    m_exp                          shift and go to state 165
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 124

    (51) expresion_a -> LT .

    CTE_I           reduce using rule 51 (expresion_a -> LT .)
    CTE_F           reduce using rule 51 (expresion_a -> LT .)
    CTE_CHAR        reduce using rule 51 (expresion_a -> LT .)
    ID              reduce using rule 51 (expresion_a -> LT .)
    OP              reduce using rule 51 (expresion_a -> LT .)


state 125

    (52) expresion_a -> GT .

    CTE_I           reduce using rule 52 (expresion_a -> GT .)
    CTE_F           reduce using rule 52 (expresion_a -> GT .)
    CTE_CHAR        reduce using rule 52 (expresion_a -> GT .)
    ID              reduce using rule 52 (expresion_a -> GT .)
    OP              reduce using rule 52 (expresion_a -> GT .)


state 126

    (53) expresion_a -> NE .

    CTE_I           reduce using rule 53 (expresion_a -> NE .)
    CTE_F           reduce using rule 53 (expresion_a -> NE .)
    CTE_CHAR        reduce using rule 53 (expresion_a -> NE .)
    ID              reduce using rule 53 (expresion_a -> NE .)
    OP              reduce using rule 53 (expresion_a -> NE .)


state 127

    (54) expresion_a -> EQEQ .

    CTE_I           reduce using rule 54 (expresion_a -> EQEQ .)
    CTE_F           reduce using rule 54 (expresion_a -> EQEQ .)
    CTE_CHAR        reduce using rule 54 (expresion_a -> EQEQ .)
    ID              reduce using rule 54 (expresion_a -> EQEQ .)
    OP              reduce using rule 54 (expresion_a -> EQEQ .)


state 128

    (55) expresion_a -> LE .

    CTE_I           reduce using rule 55 (expresion_a -> LE .)
    CTE_F           reduce using rule 55 (expresion_a -> LE .)
    CTE_CHAR        reduce using rule 55 (expresion_a -> LE .)
    ID              reduce using rule 55 (expresion_a -> LE .)
    OP              reduce using rule 55 (expresion_a -> LE .)


state 129

    (56) expresion_a -> GE .

    CTE_I           reduce using rule 56 (expresion_a -> GE .)
    CTE_F           reduce using rule 56 (expresion_a -> GE .)
    CTE_CHAR        reduce using rule 56 (expresion_a -> GE .)
    ID              reduce using rule 56 (expresion_a -> GE .)
    OP              reduce using rule 56 (expresion_a -> GE .)


state 130

    (18) m_exp -> m_exp_b m_exp_a . m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    m_exp_b                        shift and go to state 79
    m_exp                          shift and go to state 166
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 131

    (19) m_exp_a -> ADD .

    CTE_I           reduce using rule 19 (m_exp_a -> ADD .)
    CTE_F           reduce using rule 19 (m_exp_a -> ADD .)
    CTE_CHAR        reduce using rule 19 (m_exp_a -> ADD .)
    ID              reduce using rule 19 (m_exp_a -> ADD .)
    OP              reduce using rule 19 (m_exp_a -> ADD .)


state 132

    (20) m_exp_a -> SUB .

    CTE_I           reduce using rule 20 (m_exp_a -> SUB .)
    CTE_F           reduce using rule 20 (m_exp_a -> SUB .)
    CTE_CHAR        reduce using rule 20 (m_exp_a -> SUB .)
    ID              reduce using rule 20 (m_exp_a -> SUB .)
    OP              reduce using rule 20 (m_exp_a -> SUB .)


state 133

    (23) term -> term_b term_a . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    term_b                         shift and go to state 81
    term                           shift and go to state 167
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 134

    (24) term_a -> MULT .

    CTE_I           reduce using rule 24 (term_a -> MULT .)
    CTE_F           reduce using rule 24 (term_a -> MULT .)
    CTE_CHAR        reduce using rule 24 (term_a -> MULT .)
    ID              reduce using rule 24 (term_a -> MULT .)
    OP              reduce using rule 24 (term_a -> MULT .)


state 135

    (25) term_a -> DIV .

    CTE_I           reduce using rule 25 (term_a -> DIV .)
    CTE_F           reduce using rule 25 (term_a -> DIV .)
    CTE_CHAR        reduce using rule 25 (term_a -> DIV .)
    ID              reduce using rule 25 (term_a -> DIV .)
    OP              reduce using rule 25 (term_a -> DIV .)


state 136

    (85) fact -> fact_a exp . CP

    CP              shift and go to state 168


state 137

    (69) for -> for_a for_b bloque .

    ID              reduce using rule 69 (for -> for_a for_b bloque .)
    CLASS           reduce using rule 69 (for -> for_a for_b bloque .)
    CLASS_ID        reduce using rule 69 (for -> for_a for_b bloque .)
    DEF             reduce using rule 69 (for -> for_a for_b bloque .)
    RETURN          reduce using rule 69 (for -> for_a for_b bloque .)
    IF              reduce using rule 69 (for -> for_a for_b bloque .)
    FOR             reduce using rule 69 (for -> for_a for_b bloque .)
    INT             reduce using rule 69 (for -> for_a for_b bloque .)
    FLOAT           reduce using rule 69 (for -> for_a for_b bloque .)
    CHAR            reduce using rule 69 (for -> for_a for_b bloque .)
    DATAFRAME       reduce using rule 69 (for -> for_a for_b bloque .)
    FILE            reduce using rule 69 (for -> for_a for_b bloque .)
    WHILE           reduce using rule 69 (for -> for_a for_b bloque .)
    CB              reduce using rule 69 (for -> for_a for_b bloque .)


state 138

    (71) for_b -> for_e asignacionsencilla . CP

    CP              shift and go to state 169


state 139

    (111) asignacionsencilla -> ID . EQ expresion

    EQ              shift and go to state 170


state 140

    (74) for_e -> for_d SC .

    ID              reduce using rule 74 (for_e -> for_d SC .)


state 141

    (73) for_d -> for_c expresion .

    SC              reduce using rule 73 (for_d -> for_c expresion .)


state 142

    (72) for_c -> OP asignacionsencilla . SC

    SC              shift and go to state 171


state 143

    (92) classcreate -> CLASS CLASS_ID OB . classcreate_a function classcreate_c CB
    (93) classcreate_a -> . vars classcreate_a
    (94) classcreate_a -> . vars_vect_mat classcreate_a
    (95) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (122) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    DEF             reduce using rule 122 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    classcreate_a                  shift and go to state 172
    vars                           shift and go to state 173
    vars_vect_mat                  shift and go to state 174
    empty                          shift and go to state 175
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 144

    (106) classdeclare -> CLASS_ID ID SC .

    ID              reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    CLASS           reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    CLASS_ID        reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    DEF             reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    RETURN          reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    IF              reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    FOR             reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    INT             reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    FLOAT           reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    CHAR            reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    DATAFRAME       reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    FILE            reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    WHILE           reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)
    CB              reduce using rule 106 (classdeclare -> CLASS_ID ID SC .)


state 145

    (112) function -> DEF function_e bloque .

    ID              reduce using rule 112 (function -> DEF function_e bloque .)
    CLASS           reduce using rule 112 (function -> DEF function_e bloque .)
    CLASS_ID        reduce using rule 112 (function -> DEF function_e bloque .)
    DEF             reduce using rule 112 (function -> DEF function_e bloque .)
    RETURN          reduce using rule 112 (function -> DEF function_e bloque .)
    IF              reduce using rule 112 (function -> DEF function_e bloque .)
    FOR             reduce using rule 112 (function -> DEF function_e bloque .)
    INT             reduce using rule 112 (function -> DEF function_e bloque .)
    FLOAT           reduce using rule 112 (function -> DEF function_e bloque .)
    CHAR            reduce using rule 112 (function -> DEF function_e bloque .)
    DATAFRAME       reduce using rule 112 (function -> DEF function_e bloque .)
    FILE            reduce using rule 112 (function -> DEF function_e bloque .)
    WHILE           reduce using rule 112 (function -> DEF function_e bloque .)
    CB              reduce using rule 112 (function -> DEF function_e bloque .)


state 146

    (120) function_e -> function_c OP . function_b CP vars
    (121) function_e -> function_c OP . function_b CP empty
    (115) function_b -> . function_d
    (116) function_b -> . function_d COMMA function_b
    (117) function_b -> . empty
    (119) function_d -> . tiposimple ID
    (122) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    CP              reduce using rule 122 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function_b                     shift and go to state 176
    empty                          shift and go to state 177
    function_d                     shift and go to state 178
    tiposimple                     shift and go to state 179

state 147

    (118) function_c -> function_a ID .

    OP              reduce using rule 118 (function_c -> function_a ID .)


state 148

    (48) return -> RETURN expresion SC .

    ID              reduce using rule 48 (return -> RETURN expresion SC .)
    CLASS           reduce using rule 48 (return -> RETURN expresion SC .)
    CLASS_ID        reduce using rule 48 (return -> RETURN expresion SC .)
    DEF             reduce using rule 48 (return -> RETURN expresion SC .)
    RETURN          reduce using rule 48 (return -> RETURN expresion SC .)
    IF              reduce using rule 48 (return -> RETURN expresion SC .)
    FOR             reduce using rule 48 (return -> RETURN expresion SC .)
    INT             reduce using rule 48 (return -> RETURN expresion SC .)
    FLOAT           reduce using rule 48 (return -> RETURN expresion SC .)
    CHAR            reduce using rule 48 (return -> RETURN expresion SC .)
    DATAFRAME       reduce using rule 48 (return -> RETURN expresion SC .)
    FILE            reduce using rule 48 (return -> RETURN expresion SC .)
    WHILE           reduce using rule 48 (return -> RETURN expresion SC .)
    CB              reduce using rule 48 (return -> RETURN expresion SC .)


state 149

    (104) condicion_c -> IF OP expresion . CP

    CP              shift and go to state 180


state 150

    (62) while_b -> while_a OP expresion . CP

    CP              shift and go to state 181


state 151

    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .

    INT             reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FLOAT           reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    CHAR            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    ID              reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FILE            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    OB              reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    DEF             reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)


state 152

    (16) vars_vect_mat_a -> OSB exp CSB .

    SC              reduce using rule 16 (vars_vect_mat_a -> OSB exp CSB .)
    OSB             reduce using rule 16 (vars_vect_mat_a -> OSB exp CSB .)


state 153

    (63) exp -> and_exp exp_a .

    CSB             reduce using rule 63 (exp -> and_exp exp_a .)
    CP              reduce using rule 63 (exp -> and_exp exp_a .)


state 154

    (64) exp_a -> OR .

    CSB             reduce using rule 64 (exp_a -> OR .)
    CP              reduce using rule 64 (exp_a -> OR .)


state 155

    (65) exp_a -> empty .

    CSB             reduce using rule 65 (exp_a -> empty .)
    CP              reduce using rule 65 (exp_a -> empty .)


state 156

    (66) and_exp -> expresion and_exp_a .

    OR              reduce using rule 66 (and_exp -> expresion and_exp_a .)
    CSB             reduce using rule 66 (and_exp -> expresion and_exp_a .)
    CP              reduce using rule 66 (and_exp -> expresion and_exp_a .)


state 157

    (67) and_exp_a -> AND .

    OR              reduce using rule 67 (and_exp_a -> AND .)
    CSB             reduce using rule 67 (and_exp_a -> AND .)
    CP              reduce using rule 67 (and_exp_a -> AND .)


state 158

    (68) and_exp_a -> empty .

    OR              reduce using rule 68 (and_exp_a -> empty .)
    CSB             reduce using rule 68 (and_exp_a -> empty .)
    CP              reduce using rule 68 (and_exp_a -> empty .)


state 159

    (108) asignacion -> ID asignacion_a asignacion_a EQ . expresion SC
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    expresion                      shift and go to state 182
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 160

    (109) asignacion_a -> OSB exp CSB .

    OSB             reduce using rule 109 (asignacion_a -> OSB exp CSB .)
    EQ              reduce using rule 109 (asignacion_a -> OSB exp CSB .)


state 161

    (101) condicion_a -> condicion_d condicion_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 183

state 162

    (102) condicion_b -> condicion .

    OB              reduce using rule 102 (condicion_b -> condicion .)


state 163

    (103) condicion_b -> empty .

    OB              reduce using rule 103 (condicion_b -> empty .)


state 164

    (75) llamada -> llamada_d llamada_a CP SC .

    ID              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    CLASS           reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    CLASS_ID        reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    DEF             reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    RETURN          reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    IF              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    FOR             reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    INT             reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    FLOAT           reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    CHAR            reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    DATAFRAME       reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    FILE            reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    WHILE           reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    CB              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    MULT            reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    DIV             reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    ADD             reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    SUB             reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    LT              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    GT              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    NE              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    EQEQ            reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    LE              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    GE              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    COMMA           reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    CP              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    SC              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    AND             reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    OR              reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)
    CSB             reduce using rule 75 (llamada -> llamada_d llamada_a CP SC .)


state 165

    (50) expresion -> m_exp expresion_a m_exp .

    COMMA           reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    CP              reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    SC              reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    AND             reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    OR              reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    CSB             reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)


state 166

    (18) m_exp -> m_exp_b m_exp_a m_exp .

    LT              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    GT              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    NE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    EQEQ            reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    LE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    GE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    COMMA           reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    CP              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    SC              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    AND             reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    OR              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    CSB             reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)


state 167

    (23) term -> term_b term_a term .

    ADD             reduce using rule 23 (term -> term_b term_a term .)
    SUB             reduce using rule 23 (term -> term_b term_a term .)
    LT              reduce using rule 23 (term -> term_b term_a term .)
    GT              reduce using rule 23 (term -> term_b term_a term .)
    NE              reduce using rule 23 (term -> term_b term_a term .)
    EQEQ            reduce using rule 23 (term -> term_b term_a term .)
    LE              reduce using rule 23 (term -> term_b term_a term .)
    GE              reduce using rule 23 (term -> term_b term_a term .)
    COMMA           reduce using rule 23 (term -> term_b term_a term .)
    CP              reduce using rule 23 (term -> term_b term_a term .)
    SC              reduce using rule 23 (term -> term_b term_a term .)
    AND             reduce using rule 23 (term -> term_b term_a term .)
    OR              reduce using rule 23 (term -> term_b term_a term .)
    CSB             reduce using rule 23 (term -> term_b term_a term .)


state 168

    (85) fact -> fact_a exp CP .

    MULT            reduce using rule 85 (fact -> fact_a exp CP .)
    DIV             reduce using rule 85 (fact -> fact_a exp CP .)
    ADD             reduce using rule 85 (fact -> fact_a exp CP .)
    SUB             reduce using rule 85 (fact -> fact_a exp CP .)
    LT              reduce using rule 85 (fact -> fact_a exp CP .)
    GT              reduce using rule 85 (fact -> fact_a exp CP .)
    NE              reduce using rule 85 (fact -> fact_a exp CP .)
    EQEQ            reduce using rule 85 (fact -> fact_a exp CP .)
    LE              reduce using rule 85 (fact -> fact_a exp CP .)
    GE              reduce using rule 85 (fact -> fact_a exp CP .)
    COMMA           reduce using rule 85 (fact -> fact_a exp CP .)
    CP              reduce using rule 85 (fact -> fact_a exp CP .)
    SC              reduce using rule 85 (fact -> fact_a exp CP .)
    AND             reduce using rule 85 (fact -> fact_a exp CP .)
    OR              reduce using rule 85 (fact -> fact_a exp CP .)
    CSB             reduce using rule 85 (fact -> fact_a exp CP .)


state 169

    (71) for_b -> for_e asignacionsencilla CP .

    OB              reduce using rule 71 (for_b -> for_e asignacionsencilla CP .)


state 170

    (111) asignacionsencilla -> ID EQ . expresion
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (85) fact -> . fact_a exp CP
    (86) fact -> . CTE_I
    (87) fact -> . CTE_F
    (88) fact -> . CTE_CHAR
    (89) fact -> . ID
    (90) fact -> . llamada
    (91) fact_a -> . OP
    (75) llamada -> . llamada_d llamada_a CP SC
    (81) llamada_d -> . llamada_c OP
    (80) llamada_c -> . ID

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 87
    OP              shift and go to state 89

    expresion                      shift and go to state 184
    m_exp                          shift and go to state 77
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 88
    llamada_d                      shift and go to state 43
    llamada_c                      shift and go to state 52

state 171

    (72) for_c -> OP asignacionsencilla SC .

    CTE_I           reduce using rule 72 (for_c -> OP asignacionsencilla SC .)
    CTE_F           reduce using rule 72 (for_c -> OP asignacionsencilla SC .)
    CTE_CHAR        reduce using rule 72 (for_c -> OP asignacionsencilla SC .)
    ID              reduce using rule 72 (for_c -> OP asignacionsencilla SC .)
    OP              reduce using rule 72 (for_c -> OP asignacionsencilla SC .)


state 172

    (92) classcreate -> CLASS CLASS_ID OB classcreate_a . function classcreate_c CB
    (112) function -> . DEF function_e bloque

    DEF             shift and go to state 49

    function                       shift and go to state 185

state 173

    (93) classcreate_a -> vars . classcreate_a
    (93) classcreate_a -> . vars classcreate_a
    (94) classcreate_a -> . vars_vect_mat classcreate_a
    (95) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (122) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    DEF             reduce using rule 122 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    vars                           shift and go to state 173
    classcreate_a                  shift and go to state 186
    vars_vect_mat                  shift and go to state 174
    empty                          shift and go to state 175
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 174

    (94) classcreate_a -> vars_vect_mat . classcreate_a
    (93) classcreate_a -> . vars classcreate_a
    (94) classcreate_a -> . vars_vect_mat classcreate_a
    (95) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (122) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    DEF             reduce using rule 122 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    vars_vect_mat                  shift and go to state 174
    classcreate_a                  shift and go to state 187
    vars                           shift and go to state 173
    empty                          shift and go to state 175
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 175

    (95) classcreate_a -> empty .

    DEF             reduce using rule 95 (classcreate_a -> empty .)


state 176

    (120) function_e -> function_c OP function_b . CP vars
    (121) function_e -> function_c OP function_b . CP empty

    CP              shift and go to state 188


state 177

    (117) function_b -> empty .

    CP              reduce using rule 117 (function_b -> empty .)


state 178

    (115) function_b -> function_d .
    (116) function_b -> function_d . COMMA function_b

    CP              reduce using rule 115 (function_b -> function_d .)
    COMMA           shift and go to state 189


state 179

    (119) function_d -> tiposimple . ID

    ID              shift and go to state 190


state 180

    (104) condicion_c -> IF OP expresion CP .

    OB              reduce using rule 104 (condicion_c -> IF OP expresion CP .)


state 181

    (62) while_b -> while_a OP expresion CP .

    OB              reduce using rule 62 (while_b -> while_a OP expresion CP .)


state 182

    (108) asignacion -> ID asignacion_a asignacion_a EQ expresion . SC

    SC              shift and go to state 191


state 183

    (101) condicion_a -> condicion_d condicion_b bloque .

    ID              reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS           reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS_ID        reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    DEF             reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    RETURN          reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    IF              reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    FOR             reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    INT             reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    FLOAT           reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    CHAR            reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    DATAFRAME       reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    FILE            reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    WHILE           reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    CB              reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)
    OB              reduce using rule 101 (condicion_a -> condicion_d condicion_b bloque .)


state 184

    (111) asignacionsencilla -> ID EQ expresion .

    CP              reduce using rule 111 (asignacionsencilla -> ID EQ expresion .)
    SC              reduce using rule 111 (asignacionsencilla -> ID EQ expresion .)


state 185

    (92) classcreate -> CLASS CLASS_ID OB classcreate_a function . classcreate_c CB
    (96) classcreate_c -> . function classcreate_d
    (97) classcreate_c -> . classcreate_d
    (112) function -> . DEF function_e bloque
    (98) classcreate_d -> . classcreate_c
    (99) classcreate_d -> . empty
    (122) empty -> .

    DEF             shift and go to state 49
    CB              reduce using rule 122 (empty -> .)

    function                       shift and go to state 192
    classcreate_c                  shift and go to state 193
    classcreate_d                  shift and go to state 194
    empty                          shift and go to state 195

state 186

    (93) classcreate_a -> vars classcreate_a .

    DEF             reduce using rule 93 (classcreate_a -> vars classcreate_a .)


state 187

    (94) classcreate_a -> vars_vect_mat classcreate_a .

    DEF             reduce using rule 94 (classcreate_a -> vars_vect_mat classcreate_a .)


state 188

    (120) function_e -> function_c OP function_b CP . vars
    (121) function_e -> function_c OP function_b CP . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (122) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    OB              reduce using rule 122 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    vars                           shift and go to state 196
    empty                          shift and go to state 197
    tiposimple                     shift and go to state 48
    tipocompuesto                  shift and go to state 12

state 189

    (116) function_b -> function_d COMMA . function_b
    (115) function_b -> . function_d
    (116) function_b -> . function_d COMMA function_b
    (117) function_b -> . empty
    (119) function_d -> . tiposimple ID
    (122) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    CP              reduce using rule 122 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function_d                     shift and go to state 178
    function_b                     shift and go to state 198
    empty                          shift and go to state 177
    tiposimple                     shift and go to state 179

state 190

    (119) function_d -> tiposimple ID .

    COMMA           reduce using rule 119 (function_d -> tiposimple ID .)
    CP              reduce using rule 119 (function_d -> tiposimple ID .)


state 191

    (108) asignacion -> ID asignacion_a asignacion_a EQ expresion SC .

    ID              reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS           reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS_ID        reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DEF             reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    RETURN          reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    IF              reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FOR             reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    INT             reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FLOAT           reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CHAR            reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DATAFRAME       reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FILE            reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    WHILE           reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CB              reduce using rule 108 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)


state 192

    (96) classcreate_c -> function . classcreate_d
    (98) classcreate_d -> . classcreate_c
    (99) classcreate_d -> . empty
    (96) classcreate_c -> . function classcreate_d
    (97) classcreate_c -> . classcreate_d
    (122) empty -> .
    (112) function -> . DEF function_e bloque

    CB              reduce using rule 122 (empty -> .)
    DEF             shift and go to state 49

    function                       shift and go to state 192
    classcreate_d                  shift and go to state 199
    classcreate_c                  shift and go to state 200
    empty                          shift and go to state 195

state 193

    (92) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c . CB
    (98) classcreate_d -> classcreate_c .

  ! shift/reduce conflict for CB resolved as shift
    CB              shift and go to state 201

  ! CB              [ reduce using rule 98 (classcreate_d -> classcreate_c .) ]


state 194

    (97) classcreate_c -> classcreate_d .

    CB              reduce using rule 97 (classcreate_c -> classcreate_d .)


state 195

    (99) classcreate_d -> empty .

    CB              reduce using rule 99 (classcreate_d -> empty .)


state 196

    (120) function_e -> function_c OP function_b CP vars .

    OB              reduce using rule 120 (function_e -> function_c OP function_b CP vars .)


state 197

    (121) function_e -> function_c OP function_b CP empty .

    OB              reduce using rule 121 (function_e -> function_c OP function_b CP empty .)


state 198

    (116) function_b -> function_d COMMA function_b .

    CP              reduce using rule 116 (function_b -> function_d COMMA function_b .)


state 199

    (96) classcreate_c -> function classcreate_d .
    (97) classcreate_c -> classcreate_d .

  ! reduce/reduce conflict for CB resolved using rule 96 (classcreate_c -> function classcreate_d .)
    CB              reduce using rule 96 (classcreate_c -> function classcreate_d .)

  ! CB              [ reduce using rule 97 (classcreate_c -> classcreate_d .) ]


state 200

    (98) classcreate_d -> classcreate_c .

    CB              reduce using rule 98 (classcreate_d -> classcreate_c .)


state 201

    (92) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .

    ID              reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS           reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS_ID        reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DEF             reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    RETURN          reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    IF              reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FOR             reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INT             reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FLOAT           reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CHAR            reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DATAFRAME       reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FILE            reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    WHILE           reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CB              reduce using rule 92 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OSB in state 41 resolved as shift
WARNING: shift/reduce conflict for CB in state 193 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa_a -> programa_b)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 28 resolved using rule (bloque_a -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 199 resolved using rule (classcreate_c -> function classcreate_d)
WARNING: rejected rule (classcreate_c -> classcreate_d) in state 199
