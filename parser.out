Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPT
    COL
    DIGIT
    DIGITS
    LETTER

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SC programa_a bloque
Rule 2     programa_a -> programa_b
Rule 3     programa_a -> programa_b programa_a
Rule 4     programa_a -> empty
Rule 5     programa_b -> vars
Rule 6     programa_b -> vars_vect_mat
Rule 7     vars -> tiposimple vars_a SC
Rule 8     vars -> tipocompuesto vars_a SC
Rule 9     vars_a -> vars_b
Rule 10    vars_a -> vars_c vars_a
Rule 11    vars_b -> ID
Rule 12    vars_b -> ID EQ expresion
Rule 13    vars_c -> vars_b COMMA
Rule 14    vars_vect_mat -> tiposimple ID vars_vect_mat_a SC
Rule 15    vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
Rule 16    vars_vect_mat_a -> OSB exp CSB
Rule 17    m_exp -> m_exp_b
Rule 18    m_exp -> m_exp_b m_exp_a m_exp
Rule 19    m_exp_a -> ADD
Rule 20    m_exp_a -> SUB
Rule 21    m_exp_b -> term
Rule 22    term -> term_b
Rule 23    term -> term_b term_a term
Rule 24    term_a -> MULT
Rule 25    term_a -> DIV
Rule 26    term_b -> fact
Rule 27    tiposimple -> INT
Rule 28    tiposimple -> FLOAT
Rule 29    tiposimple -> CHAR
Rule 30    tipocompuesto -> DATAFRAME
Rule 31    tipocompuesto -> ID
Rule 32    tipocompuesto -> FILE
Rule 33    bloque -> OB bloque_a CB
Rule 34    bloque_a -> estatuto bloque_a
Rule 35    bloque_a -> estatuto
Rule 36    bloque_a -> empty
Rule 37    estatuto -> asignacion
Rule 38    estatuto -> condicion
Rule 39    estatuto -> llamada
Rule 40    estatuto -> while
Rule 41    estatuto -> for
Rule 42    estatuto -> classcreate
Rule 43    estatuto -> vars
Rule 44    estatuto -> classdeclare
Rule 45    estatuto -> llamadafuncionclase
Rule 46    estatuto -> function
Rule 47    expresion -> m_exp
Rule 48    expresion -> m_exp expresion_a m_exp
Rule 49    expresion_a -> LT
Rule 50    expresion_a -> GT
Rule 51    expresion_a -> NE
Rule 52    expresion_a -> EQEQ
Rule 53    expresion_a -> LE
Rule 54    expresion_a -> GE
Rule 55    varcte -> ID
Rule 56    varcte -> CTE_I
Rule 57    varcte -> CTE_F
Rule 58    while -> while_b bloque
Rule 59    while_a -> WHILE
Rule 60    while_b -> while_a OP expresion CP
Rule 61    exp -> and_exp exp_a
Rule 62    exp_a -> OR
Rule 63    exp_a -> empty
Rule 64    and_exp -> expresion and_exp_a
Rule 65    and_exp_a -> AND
Rule 66    and_exp_a -> empty
Rule 67    for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
Rule 68    llamada -> ID OP llamada_a CP SC
Rule 69    llamada_a -> expresion llamada_b
Rule 70    llamada_a -> CTE_STRING llamada_b
Rule 71    llamada_a -> llamada_b
Rule 72    llamada_b -> COMMA llamada_a
Rule 73    llamada_b -> empty
Rule 74    fact -> fact_a exp CP
Rule 75    fact -> CTE_I
Rule 76    fact -> CTE_F
Rule 77    fact -> CTE_CHAR
Rule 78    fact -> ID
Rule 79    fact -> llamada
Rule 80    fact_a -> OP
Rule 81    classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB
Rule 82    classcreate_a -> vars classcreate_a
Rule 83    classcreate_a -> vars_vect_mat classcreate_a
Rule 84    classcreate_a -> empty
Rule 85    classcreate_c -> function classcreate_d
Rule 86    classcreate_c -> classcreate_d
Rule 87    classcreate_d -> classcreate_c
Rule 88    classcreate_d -> empty
Rule 89    condicion -> condicion_c bloque condicion_a
Rule 90    condicion_a -> condicion_d condicion_b bloque
Rule 91    condicion_b -> condicion
Rule 92    condicion_b -> empty
Rule 93    condicion_c -> IF OP expresion CP
Rule 94    condicion_d -> ELSE
Rule 95    classdeclare -> CLASS_ID ID SC
Rule 96    llamadafuncionclase -> ID POINT llamada
Rule 97    asignacion -> ID asignacion_a asignacion_a EQ expresion SC
Rule 98    asignacion_a -> OSB exp CSB
Rule 99    asignacion_a -> empty
Rule 100   asignacionsencilla -> ID EQ expresion
Rule 101   function -> function_a ID OP function_b CP bloque
Rule 102   function_a -> VOID
Rule 103   function_a -> tiposimple
Rule 104   function_b -> tiposimple ID
Rule 105   function_b -> tiposimple ID COMMA function_b
Rule 106   function_b -> empty
Rule 107   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 19
AND                  : 65
CAPT                 : 
CB                   : 33 81
CHAR                 : 29
CLASS                : 81
CLASS_ID             : 81 95
COL                  : 
COMMA                : 13 72 105
CP                   : 60 67 68 74 93 101
CSB                  : 16 98
CTE_CHAR             : 77
CTE_F                : 57 76
CTE_I                : 56 75
CTE_STRING           : 70
DATAFRAME            : 30
DIGIT                : 
DIGITS               : 
DIV                  : 25
ELSE                 : 94
EQ                   : 12 97 100
EQEQ                 : 52
FILE                 : 32
FLOAT                : 28
FOR                  : 67
GE                   : 54
GT                   : 50
ID                   : 1 11 12 14 15 31 55 68 78 95 96 97 100 101 104 105
IF                   : 93
INT                  : 27
LE                   : 53
LETTER               : 
LT                   : 49
MULT                 : 24
NE                   : 51
OB                   : 33 81
OP                   : 60 67 68 80 93 101
OR                   : 62
OSB                  : 16 98
POINT                : 96
PROGRAM              : 1
SC                   : 1 7 8 14 15 67 67 68 95 97
SUB                  : 20
VOID                 : 102
WHILE                : 59
error                : 

Nonterminals, with rules where they appear

and_exp              : 61
and_exp_a            : 64
asignacion           : 37
asignacion_a         : 97 97
asignacionsencilla   : 67 67
bloque               : 1 58 67 89 90 101
bloque_a             : 33 34
classcreate          : 42
classcreate_a        : 81 82 83
classcreate_c        : 81 87
classcreate_d        : 85 86
classdeclare         : 44
condicion            : 38 91
condicion_a          : 89
condicion_b          : 90
condicion_c          : 89
condicion_d          : 90
empty                : 4 36 63 66 73 84 88 92 99 106
estatuto             : 34 35
exp                  : 16 74 98
exp_a                : 61
expresion            : 12 60 64 67 69 93 97 100
expresion_a          : 48
fact                 : 26
fact_a               : 74
for                  : 41
function             : 46 81 85
function_a           : 101
function_b           : 101 105
llamada              : 39 79 96
llamada_a            : 68 72
llamada_b            : 69 70 71
llamadafuncionclase  : 45
m_exp                : 18 47 48 48
m_exp_a              : 18
m_exp_b              : 17 18
programa             : 0
programa_a           : 1 3
programa_b           : 2 3
term                 : 21 23
term_a               : 23
term_b               : 22 23
tipocompuesto        : 8
tiposimple           : 7 14 15 103 104 105
varcte               : 
vars                 : 5 43 82
vars_a               : 7 8 10
vars_b               : 9 13
vars_c               : 10
vars_vect_mat        : 6 83
vars_vect_mat_a      : 14 15 15
while                : 40
while_a              : 60
while_b              : 58

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SC programa_a bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SC programa_a bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SC programa_a bloque

    SC              shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SC . programa_a bloque
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (107) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    OB              reduce using rule 107 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    programa_a                     shift and go to state 6
    programa_b                     shift and go to state 7
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 5

    (31) tipocompuesto -> ID .

    ID              reduce using rule 31 (tipocompuesto -> ID .)


state 6

    (1) programa -> PROGRAM ID SC programa_a . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 18

state 7

    (2) programa_a -> programa_b .
    (3) programa_a -> programa_b . programa_a
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (107) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! reduce/reduce conflict for OB resolved using rule 2 (programa_a -> programa_b .)
    OB              reduce using rule 2 (programa_a -> programa_b .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! OB              [ reduce using rule 107 (empty -> .) ]

    programa_b                     shift and go to state 7
    programa_a                     shift and go to state 20
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 8

    (4) programa_a -> empty .

    OB              reduce using rule 4 (programa_a -> empty .)


state 9

    (5) programa_b -> vars .

    INT             reduce using rule 5 (programa_b -> vars .)
    FLOAT           reduce using rule 5 (programa_b -> vars .)
    CHAR            reduce using rule 5 (programa_b -> vars .)
    DATAFRAME       reduce using rule 5 (programa_b -> vars .)
    ID              reduce using rule 5 (programa_b -> vars .)
    FILE            reduce using rule 5 (programa_b -> vars .)
    OB              reduce using rule 5 (programa_b -> vars .)


state 10

    (6) programa_b -> vars_vect_mat .

    INT             reduce using rule 6 (programa_b -> vars_vect_mat .)
    FLOAT           reduce using rule 6 (programa_b -> vars_vect_mat .)
    CHAR            reduce using rule 6 (programa_b -> vars_vect_mat .)
    DATAFRAME       reduce using rule 6 (programa_b -> vars_vect_mat .)
    ID              reduce using rule 6 (programa_b -> vars_vect_mat .)
    FILE            reduce using rule 6 (programa_b -> vars_vect_mat .)
    OB              reduce using rule 6 (programa_b -> vars_vect_mat .)


state 11

    (7) vars -> tiposimple . vars_a SC
    (14) vars_vect_mat -> tiposimple . ID vars_vect_mat_a SC
    (15) vars_vect_mat -> tiposimple . ID vars_vect_mat_a vars_vect_mat_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 22

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 12

    (8) vars -> tipocompuesto . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_a                         shift and go to state 25
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 13

    (27) tiposimple -> INT .

    ID              reduce using rule 27 (tiposimple -> INT .)


state 14

    (28) tiposimple -> FLOAT .

    ID              reduce using rule 28 (tiposimple -> FLOAT .)


state 15

    (29) tiposimple -> CHAR .

    ID              reduce using rule 29 (tiposimple -> CHAR .)


state 16

    (30) tipocompuesto -> DATAFRAME .

    ID              reduce using rule 30 (tipocompuesto -> DATAFRAME .)


state 17

    (32) tipocompuesto -> FILE .

    ID              reduce using rule 32 (tipocompuesto -> FILE .)


state 18

    (1) programa -> PROGRAM ID SC programa_a bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SC programa_a bloque .)


state 19

    (33) bloque -> OB . bloque_a CB
    (34) bloque_a -> . estatuto bloque_a
    (35) bloque_a -> . estatuto
    (36) bloque_a -> . empty
    (37) estatuto -> . asignacion
    (38) estatuto -> . condicion
    (39) estatuto -> . llamada
    (40) estatuto -> . while
    (41) estatuto -> . for
    (42) estatuto -> . classcreate
    (43) estatuto -> . vars
    (44) estatuto -> . classdeclare
    (45) estatuto -> . llamadafuncionclase
    (46) estatuto -> . function
    (107) empty -> .
    (97) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (89) condicion -> . condicion_c bloque condicion_a
    (68) llamada -> . ID OP llamada_a CP SC
    (58) while -> . while_b bloque
    (67) for -> . FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (81) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (95) classdeclare -> . CLASS_ID ID SC
    (96) llamadafuncionclase -> . ID POINT llamada
    (101) function -> . function_a ID OP function_b CP bloque
    (93) condicion_c -> . IF OP expresion CP
    (60) while_b -> . while_a OP expresion CP
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE
    (102) function_a -> . VOID
    (103) function_a -> . tiposimple
    (59) while_a -> . WHILE

    CB              reduce using rule 107 (empty -> .)
    ID              shift and go to state 40
    FOR             shift and go to state 43
    CLASS           shift and go to state 44
    CLASS_ID        shift and go to state 45
    IF              shift and go to state 48
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    VOID            shift and go to state 50
    WHILE           shift and go to state 51

    bloque_a                       shift and go to state 27
    estatuto                       shift and go to state 28
    empty                          shift and go to state 29
    asignacion                     shift and go to state 30
    condicion                      shift and go to state 31
    llamada                        shift and go to state 32
    while                          shift and go to state 33
    for                            shift and go to state 34
    classcreate                    shift and go to state 35
    vars                           shift and go to state 36
    classdeclare                   shift and go to state 37
    llamadafuncionclase            shift and go to state 38
    function                       shift and go to state 39
    condicion_c                    shift and go to state 41
    while_b                        shift and go to state 42
    tiposimple                     shift and go to state 46
    tipocompuesto                  shift and go to state 12
    function_a                     shift and go to state 47
    while_a                        shift and go to state 49

state 20

    (3) programa_a -> programa_b programa_a .

    OB              reduce using rule 3 (programa_a -> programa_b programa_a .)


state 21

    (7) vars -> tiposimple vars_a . SC

    SC              shift and go to state 52


state 22

    (14) vars_vect_mat -> tiposimple ID . vars_vect_mat_a SC
    (15) vars_vect_mat -> tiposimple ID . vars_vect_mat_a vars_vect_mat_a SC
    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion
    (16) vars_vect_mat_a -> . OSB exp CSB

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 54
    OSB             shift and go to state 55

    vars_vect_mat_a                shift and go to state 53

state 23

    (9) vars_a -> vars_b .
    (13) vars_c -> vars_b . COMMA

    SC              reduce using rule 9 (vars_a -> vars_b .)
    COMMA           shift and go to state 56


state 24

    (10) vars_a -> vars_c . vars_a
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_c                         shift and go to state 24
    vars_a                         shift and go to state 57
    vars_b                         shift and go to state 23

state 25

    (8) vars -> tipocompuesto vars_a . SC

    SC              shift and go to state 58


state 26

    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 54


state 27

    (33) bloque -> OB bloque_a . CB

    CB              shift and go to state 59


state 28

    (34) bloque_a -> estatuto . bloque_a
    (35) bloque_a -> estatuto .
    (34) bloque_a -> . estatuto bloque_a
    (35) bloque_a -> . estatuto
    (36) bloque_a -> . empty
    (37) estatuto -> . asignacion
    (38) estatuto -> . condicion
    (39) estatuto -> . llamada
    (40) estatuto -> . while
    (41) estatuto -> . for
    (42) estatuto -> . classcreate
    (43) estatuto -> . vars
    (44) estatuto -> . classdeclare
    (45) estatuto -> . llamadafuncionclase
    (46) estatuto -> . function
    (107) empty -> .
    (97) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (89) condicion -> . condicion_c bloque condicion_a
    (68) llamada -> . ID OP llamada_a CP SC
    (58) while -> . while_b bloque
    (67) for -> . FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (81) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (95) classdeclare -> . CLASS_ID ID SC
    (96) llamadafuncionclase -> . ID POINT llamada
    (101) function -> . function_a ID OP function_b CP bloque
    (93) condicion_c -> . IF OP expresion CP
    (60) while_b -> . while_a OP expresion CP
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE
    (102) function_a -> . VOID
    (103) function_a -> . tiposimple
    (59) while_a -> . WHILE

  ! reduce/reduce conflict for CB resolved using rule 35 (bloque_a -> estatuto .)
    CB              reduce using rule 35 (bloque_a -> estatuto .)
    ID              shift and go to state 40
    FOR             shift and go to state 43
    CLASS           shift and go to state 44
    CLASS_ID        shift and go to state 45
    IF              shift and go to state 48
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    VOID            shift and go to state 50
    WHILE           shift and go to state 51

  ! CB              [ reduce using rule 107 (empty -> .) ]

    estatuto                       shift and go to state 28
    bloque_a                       shift and go to state 60
    empty                          shift and go to state 29
    asignacion                     shift and go to state 30
    condicion                      shift and go to state 31
    llamada                        shift and go to state 32
    while                          shift and go to state 33
    for                            shift and go to state 34
    classcreate                    shift and go to state 35
    vars                           shift and go to state 36
    classdeclare                   shift and go to state 37
    llamadafuncionclase            shift and go to state 38
    function                       shift and go to state 39
    condicion_c                    shift and go to state 41
    while_b                        shift and go to state 42
    tiposimple                     shift and go to state 46
    tipocompuesto                  shift and go to state 12
    function_a                     shift and go to state 47
    while_a                        shift and go to state 49

state 29

    (36) bloque_a -> empty .

    CB              reduce using rule 36 (bloque_a -> empty .)


state 30

    (37) estatuto -> asignacion .

    ID              reduce using rule 37 (estatuto -> asignacion .)
    FOR             reduce using rule 37 (estatuto -> asignacion .)
    CLASS           reduce using rule 37 (estatuto -> asignacion .)
    CLASS_ID        reduce using rule 37 (estatuto -> asignacion .)
    IF              reduce using rule 37 (estatuto -> asignacion .)
    INT             reduce using rule 37 (estatuto -> asignacion .)
    FLOAT           reduce using rule 37 (estatuto -> asignacion .)
    CHAR            reduce using rule 37 (estatuto -> asignacion .)
    DATAFRAME       reduce using rule 37 (estatuto -> asignacion .)
    FILE            reduce using rule 37 (estatuto -> asignacion .)
    VOID            reduce using rule 37 (estatuto -> asignacion .)
    WHILE           reduce using rule 37 (estatuto -> asignacion .)
    CB              reduce using rule 37 (estatuto -> asignacion .)


state 31

    (38) estatuto -> condicion .

    ID              reduce using rule 38 (estatuto -> condicion .)
    FOR             reduce using rule 38 (estatuto -> condicion .)
    CLASS           reduce using rule 38 (estatuto -> condicion .)
    CLASS_ID        reduce using rule 38 (estatuto -> condicion .)
    IF              reduce using rule 38 (estatuto -> condicion .)
    INT             reduce using rule 38 (estatuto -> condicion .)
    FLOAT           reduce using rule 38 (estatuto -> condicion .)
    CHAR            reduce using rule 38 (estatuto -> condicion .)
    DATAFRAME       reduce using rule 38 (estatuto -> condicion .)
    FILE            reduce using rule 38 (estatuto -> condicion .)
    VOID            reduce using rule 38 (estatuto -> condicion .)
    WHILE           reduce using rule 38 (estatuto -> condicion .)
    CB              reduce using rule 38 (estatuto -> condicion .)


state 32

    (39) estatuto -> llamada .

    ID              reduce using rule 39 (estatuto -> llamada .)
    FOR             reduce using rule 39 (estatuto -> llamada .)
    CLASS           reduce using rule 39 (estatuto -> llamada .)
    CLASS_ID        reduce using rule 39 (estatuto -> llamada .)
    IF              reduce using rule 39 (estatuto -> llamada .)
    INT             reduce using rule 39 (estatuto -> llamada .)
    FLOAT           reduce using rule 39 (estatuto -> llamada .)
    CHAR            reduce using rule 39 (estatuto -> llamada .)
    DATAFRAME       reduce using rule 39 (estatuto -> llamada .)
    FILE            reduce using rule 39 (estatuto -> llamada .)
    VOID            reduce using rule 39 (estatuto -> llamada .)
    WHILE           reduce using rule 39 (estatuto -> llamada .)
    CB              reduce using rule 39 (estatuto -> llamada .)


state 33

    (40) estatuto -> while .

    ID              reduce using rule 40 (estatuto -> while .)
    FOR             reduce using rule 40 (estatuto -> while .)
    CLASS           reduce using rule 40 (estatuto -> while .)
    CLASS_ID        reduce using rule 40 (estatuto -> while .)
    IF              reduce using rule 40 (estatuto -> while .)
    INT             reduce using rule 40 (estatuto -> while .)
    FLOAT           reduce using rule 40 (estatuto -> while .)
    CHAR            reduce using rule 40 (estatuto -> while .)
    DATAFRAME       reduce using rule 40 (estatuto -> while .)
    FILE            reduce using rule 40 (estatuto -> while .)
    VOID            reduce using rule 40 (estatuto -> while .)
    WHILE           reduce using rule 40 (estatuto -> while .)
    CB              reduce using rule 40 (estatuto -> while .)


state 34

    (41) estatuto -> for .

    ID              reduce using rule 41 (estatuto -> for .)
    FOR             reduce using rule 41 (estatuto -> for .)
    CLASS           reduce using rule 41 (estatuto -> for .)
    CLASS_ID        reduce using rule 41 (estatuto -> for .)
    IF              reduce using rule 41 (estatuto -> for .)
    INT             reduce using rule 41 (estatuto -> for .)
    FLOAT           reduce using rule 41 (estatuto -> for .)
    CHAR            reduce using rule 41 (estatuto -> for .)
    DATAFRAME       reduce using rule 41 (estatuto -> for .)
    FILE            reduce using rule 41 (estatuto -> for .)
    VOID            reduce using rule 41 (estatuto -> for .)
    WHILE           reduce using rule 41 (estatuto -> for .)
    CB              reduce using rule 41 (estatuto -> for .)


state 35

    (42) estatuto -> classcreate .

    ID              reduce using rule 42 (estatuto -> classcreate .)
    FOR             reduce using rule 42 (estatuto -> classcreate .)
    CLASS           reduce using rule 42 (estatuto -> classcreate .)
    CLASS_ID        reduce using rule 42 (estatuto -> classcreate .)
    IF              reduce using rule 42 (estatuto -> classcreate .)
    INT             reduce using rule 42 (estatuto -> classcreate .)
    FLOAT           reduce using rule 42 (estatuto -> classcreate .)
    CHAR            reduce using rule 42 (estatuto -> classcreate .)
    DATAFRAME       reduce using rule 42 (estatuto -> classcreate .)
    FILE            reduce using rule 42 (estatuto -> classcreate .)
    VOID            reduce using rule 42 (estatuto -> classcreate .)
    WHILE           reduce using rule 42 (estatuto -> classcreate .)
    CB              reduce using rule 42 (estatuto -> classcreate .)


state 36

    (43) estatuto -> vars .

    ID              reduce using rule 43 (estatuto -> vars .)
    FOR             reduce using rule 43 (estatuto -> vars .)
    CLASS           reduce using rule 43 (estatuto -> vars .)
    CLASS_ID        reduce using rule 43 (estatuto -> vars .)
    IF              reduce using rule 43 (estatuto -> vars .)
    INT             reduce using rule 43 (estatuto -> vars .)
    FLOAT           reduce using rule 43 (estatuto -> vars .)
    CHAR            reduce using rule 43 (estatuto -> vars .)
    DATAFRAME       reduce using rule 43 (estatuto -> vars .)
    FILE            reduce using rule 43 (estatuto -> vars .)
    VOID            reduce using rule 43 (estatuto -> vars .)
    WHILE           reduce using rule 43 (estatuto -> vars .)
    CB              reduce using rule 43 (estatuto -> vars .)


state 37

    (44) estatuto -> classdeclare .

    ID              reduce using rule 44 (estatuto -> classdeclare .)
    FOR             reduce using rule 44 (estatuto -> classdeclare .)
    CLASS           reduce using rule 44 (estatuto -> classdeclare .)
    CLASS_ID        reduce using rule 44 (estatuto -> classdeclare .)
    IF              reduce using rule 44 (estatuto -> classdeclare .)
    INT             reduce using rule 44 (estatuto -> classdeclare .)
    FLOAT           reduce using rule 44 (estatuto -> classdeclare .)
    CHAR            reduce using rule 44 (estatuto -> classdeclare .)
    DATAFRAME       reduce using rule 44 (estatuto -> classdeclare .)
    FILE            reduce using rule 44 (estatuto -> classdeclare .)
    VOID            reduce using rule 44 (estatuto -> classdeclare .)
    WHILE           reduce using rule 44 (estatuto -> classdeclare .)
    CB              reduce using rule 44 (estatuto -> classdeclare .)


state 38

    (45) estatuto -> llamadafuncionclase .

    ID              reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FOR             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CLASS           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CLASS_ID        reduce using rule 45 (estatuto -> llamadafuncionclase .)
    IF              reduce using rule 45 (estatuto -> llamadafuncionclase .)
    INT             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FLOAT           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CHAR            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    DATAFRAME       reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FILE            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    VOID            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    WHILE           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CB              reduce using rule 45 (estatuto -> llamadafuncionclase .)


state 39

    (46) estatuto -> function .

    ID              reduce using rule 46 (estatuto -> function .)
    FOR             reduce using rule 46 (estatuto -> function .)
    CLASS           reduce using rule 46 (estatuto -> function .)
    CLASS_ID        reduce using rule 46 (estatuto -> function .)
    IF              reduce using rule 46 (estatuto -> function .)
    INT             reduce using rule 46 (estatuto -> function .)
    FLOAT           reduce using rule 46 (estatuto -> function .)
    CHAR            reduce using rule 46 (estatuto -> function .)
    DATAFRAME       reduce using rule 46 (estatuto -> function .)
    FILE            reduce using rule 46 (estatuto -> function .)
    VOID            reduce using rule 46 (estatuto -> function .)
    WHILE           reduce using rule 46 (estatuto -> function .)
    CB              reduce using rule 46 (estatuto -> function .)


state 40

    (97) asignacion -> ID . asignacion_a asignacion_a EQ expresion SC
    (68) llamada -> ID . OP llamada_a CP SC
    (96) llamadafuncionclase -> ID . POINT llamada
    (31) tipocompuesto -> ID .
    (98) asignacion_a -> . OSB exp CSB
    (99) asignacion_a -> . empty
    (107) empty -> .

  ! shift/reduce conflict for OSB resolved as shift
    OP              shift and go to state 62
    POINT           shift and go to state 63
    ID              reduce using rule 31 (tipocompuesto -> ID .)
    OSB             shift and go to state 64
    EQ              reduce using rule 107 (empty -> .)

  ! OSB             [ reduce using rule 107 (empty -> .) ]

    asignacion_a                   shift and go to state 61
    empty                          shift and go to state 65

state 41

    (89) condicion -> condicion_c . bloque condicion_a
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 66

state 42

    (58) while -> while_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 67

state 43

    (67) for -> FOR . OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque

    OP              shift and go to state 68


state 44

    (81) classcreate -> CLASS . CLASS_ID OB classcreate_a function classcreate_c CB

    CLASS_ID        shift and go to state 69


state 45

    (95) classdeclare -> CLASS_ID . ID SC

    ID              shift and go to state 70


state 46

    (7) vars -> tiposimple . vars_a SC
    (103) function_a -> tiposimple .
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 26

  ! ID              [ reduce using rule 103 (function_a -> tiposimple .) ]

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 47

    (101) function -> function_a . ID OP function_b CP bloque

    ID              shift and go to state 71


state 48

    (93) condicion_c -> IF . OP expresion CP

    OP              shift and go to state 72


state 49

    (60) while_b -> while_a . OP expresion CP

    OP              shift and go to state 73


state 50

    (102) function_a -> VOID .

    ID              reduce using rule 102 (function_a -> VOID .)


state 51

    (59) while_a -> WHILE .

    OP              reduce using rule 59 (while_a -> WHILE .)


state 52

    (7) vars -> tiposimple vars_a SC .

    INT             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FLOAT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CHAR            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DATAFRAME       reduce using rule 7 (vars -> tiposimple vars_a SC .)
    ID              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FILE            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    OB              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FOR             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS_ID        reduce using rule 7 (vars -> tiposimple vars_a SC .)
    IF              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    VOID            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    WHILE           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CB              reduce using rule 7 (vars -> tiposimple vars_a SC .)


state 53

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a . SC
    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a . vars_vect_mat_a SC
    (16) vars_vect_mat_a -> . OSB exp CSB

    SC              shift and go to state 75
    OSB             shift and go to state 55

    vars_vect_mat_a                shift and go to state 74

state 54

    (12) vars_b -> ID EQ . expresion
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    expresion                      shift and go to state 77
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 55

    (16) vars_vect_mat_a -> OSB . exp CSB
    (61) exp -> . and_exp exp_a
    (64) and_exp -> . expresion and_exp_a
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    exp                            shift and go to state 89
    and_exp                        shift and go to state 90
    expresion                      shift and go to state 91
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 56

    (13) vars_c -> vars_b COMMA .

    ID              reduce using rule 13 (vars_c -> vars_b COMMA .)


state 57

    (10) vars_a -> vars_c vars_a .

    SC              reduce using rule 10 (vars_a -> vars_c vars_a .)


state 58

    (8) vars -> tipocompuesto vars_a SC .

    INT             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FLOAT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CHAR            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DATAFRAME       reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    ID              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FILE            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    OB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FOR             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS_ID        reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    IF              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    VOID            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    WHILE           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)


state 59

    (33) bloque -> OB bloque_a CB .

    $end            reduce using rule 33 (bloque -> OB bloque_a CB .)
    ELSE            reduce using rule 33 (bloque -> OB bloque_a CB .)
    ID              reduce using rule 33 (bloque -> OB bloque_a CB .)
    FOR             reduce using rule 33 (bloque -> OB bloque_a CB .)
    CLASS           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CLASS_ID        reduce using rule 33 (bloque -> OB bloque_a CB .)
    IF              reduce using rule 33 (bloque -> OB bloque_a CB .)
    INT             reduce using rule 33 (bloque -> OB bloque_a CB .)
    FLOAT           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CHAR            reduce using rule 33 (bloque -> OB bloque_a CB .)
    DATAFRAME       reduce using rule 33 (bloque -> OB bloque_a CB .)
    FILE            reduce using rule 33 (bloque -> OB bloque_a CB .)
    VOID            reduce using rule 33 (bloque -> OB bloque_a CB .)
    WHILE           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CB              reduce using rule 33 (bloque -> OB bloque_a CB .)
    OB              reduce using rule 33 (bloque -> OB bloque_a CB .)


state 60

    (34) bloque_a -> estatuto bloque_a .

    CB              reduce using rule 34 (bloque_a -> estatuto bloque_a .)


state 61

    (97) asignacion -> ID asignacion_a . asignacion_a EQ expresion SC
    (98) asignacion_a -> . OSB exp CSB
    (99) asignacion_a -> . empty
    (107) empty -> .

    OSB             shift and go to state 64
    EQ              reduce using rule 107 (empty -> .)

    asignacion_a                   shift and go to state 92
    empty                          shift and go to state 65

state 62

    (68) llamada -> ID OP . llamada_a CP SC
    (69) llamada_a -> . expresion llamada_b
    (70) llamada_a -> . CTE_STRING llamada_b
    (71) llamada_a -> . llamada_b
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (72) llamada_b -> . COMMA llamada_a
    (73) llamada_b -> . empty
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (107) empty -> .
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_STRING      shift and go to state 96
    COMMA           shift and go to state 97
    CP              reduce using rule 107 (empty -> .)
    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    llamada_a                      shift and go to state 93
    expresion                      shift and go to state 94
    llamada_b                      shift and go to state 95
    m_exp                          shift and go to state 78
    empty                          shift and go to state 98
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 63

    (96) llamadafuncionclase -> ID POINT . llamada
    (68) llamada -> . ID OP llamada_a CP SC

    ID              shift and go to state 99

    llamada                        shift and go to state 100

state 64

    (98) asignacion_a -> OSB . exp CSB
    (61) exp -> . and_exp exp_a
    (64) and_exp -> . expresion and_exp_a
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    exp                            shift and go to state 101
    and_exp                        shift and go to state 90
    expresion                      shift and go to state 91
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 65

    (99) asignacion_a -> empty .

    OSB             reduce using rule 99 (asignacion_a -> empty .)
    EQ              reduce using rule 99 (asignacion_a -> empty .)


state 66

    (89) condicion -> condicion_c bloque . condicion_a
    (90) condicion_a -> . condicion_d condicion_b bloque
    (94) condicion_d -> . ELSE

    ELSE            shift and go to state 104

    condicion_a                    shift and go to state 102
    condicion_d                    shift and go to state 103

state 67

    (58) while -> while_b bloque .

    ID              reduce using rule 58 (while -> while_b bloque .)
    FOR             reduce using rule 58 (while -> while_b bloque .)
    CLASS           reduce using rule 58 (while -> while_b bloque .)
    CLASS_ID        reduce using rule 58 (while -> while_b bloque .)
    IF              reduce using rule 58 (while -> while_b bloque .)
    INT             reduce using rule 58 (while -> while_b bloque .)
    FLOAT           reduce using rule 58 (while -> while_b bloque .)
    CHAR            reduce using rule 58 (while -> while_b bloque .)
    DATAFRAME       reduce using rule 58 (while -> while_b bloque .)
    FILE            reduce using rule 58 (while -> while_b bloque .)
    VOID            reduce using rule 58 (while -> while_b bloque .)
    WHILE           reduce using rule 58 (while -> while_b bloque .)
    CB              reduce using rule 58 (while -> while_b bloque .)


state 68

    (67) for -> FOR OP . asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (100) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 106

    asignacionsencilla             shift and go to state 105

state 69

    (81) classcreate -> CLASS CLASS_ID . OB classcreate_a function classcreate_c CB

    OB              shift and go to state 107


state 70

    (95) classdeclare -> CLASS_ID ID . SC

    SC              shift and go to state 108


state 71

    (101) function -> function_a ID . OP function_b CP bloque

    OP              shift and go to state 109


state 72

    (93) condicion_c -> IF OP . expresion CP
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    expresion                      shift and go to state 110
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 73

    (60) while_b -> while_a OP . expresion CP
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    expresion                      shift and go to state 111
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 74

    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a . SC

    SC              shift and go to state 112


state 75

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .

    INT             reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FLOAT           reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    CHAR            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    ID              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FILE            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    OB              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    VOID            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)


state 76

    (78) fact -> ID .
    (68) llamada -> ID . OP llamada_a CP SC

    MULT            reduce using rule 78 (fact -> ID .)
    DIV             reduce using rule 78 (fact -> ID .)
    ADD             reduce using rule 78 (fact -> ID .)
    SUB             reduce using rule 78 (fact -> ID .)
    LT              reduce using rule 78 (fact -> ID .)
    GT              reduce using rule 78 (fact -> ID .)
    NE              reduce using rule 78 (fact -> ID .)
    EQEQ            reduce using rule 78 (fact -> ID .)
    LE              reduce using rule 78 (fact -> ID .)
    GE              reduce using rule 78 (fact -> ID .)
    COMMA           reduce using rule 78 (fact -> ID .)
    SC              reduce using rule 78 (fact -> ID .)
    AND             reduce using rule 78 (fact -> ID .)
    OR              reduce using rule 78 (fact -> ID .)
    CSB             reduce using rule 78 (fact -> ID .)
    CP              reduce using rule 78 (fact -> ID .)
    OP              shift and go to state 62


state 77

    (12) vars_b -> ID EQ expresion .

    COMMA           reduce using rule 12 (vars_b -> ID EQ expresion .)
    SC              reduce using rule 12 (vars_b -> ID EQ expresion .)


state 78

    (47) expresion -> m_exp .
    (48) expresion -> m_exp . expresion_a m_exp
    (49) expresion_a -> . LT
    (50) expresion_a -> . GT
    (51) expresion_a -> . NE
    (52) expresion_a -> . EQEQ
    (53) expresion_a -> . LE
    (54) expresion_a -> . GE

    COMMA           reduce using rule 47 (expresion -> m_exp .)
    SC              reduce using rule 47 (expresion -> m_exp .)
    AND             reduce using rule 47 (expresion -> m_exp .)
    OR              reduce using rule 47 (expresion -> m_exp .)
    CSB             reduce using rule 47 (expresion -> m_exp .)
    CP              reduce using rule 47 (expresion -> m_exp .)
    LT              shift and go to state 114
    GT              shift and go to state 115
    NE              shift and go to state 116
    EQEQ            shift and go to state 117
    LE              shift and go to state 118
    GE              shift and go to state 119

    expresion_a                    shift and go to state 113

state 79

    (17) m_exp -> m_exp_b .
    (18) m_exp -> m_exp_b . m_exp_a m_exp
    (19) m_exp_a -> . ADD
    (20) m_exp_a -> . SUB

    LT              reduce using rule 17 (m_exp -> m_exp_b .)
    GT              reduce using rule 17 (m_exp -> m_exp_b .)
    NE              reduce using rule 17 (m_exp -> m_exp_b .)
    EQEQ            reduce using rule 17 (m_exp -> m_exp_b .)
    LE              reduce using rule 17 (m_exp -> m_exp_b .)
    GE              reduce using rule 17 (m_exp -> m_exp_b .)
    COMMA           reduce using rule 17 (m_exp -> m_exp_b .)
    SC              reduce using rule 17 (m_exp -> m_exp_b .)
    AND             reduce using rule 17 (m_exp -> m_exp_b .)
    OR              reduce using rule 17 (m_exp -> m_exp_b .)
    CSB             reduce using rule 17 (m_exp -> m_exp_b .)
    CP              reduce using rule 17 (m_exp -> m_exp_b .)
    ADD             shift and go to state 121
    SUB             shift and go to state 122

    m_exp_a                        shift and go to state 120

state 80

    (21) m_exp_b -> term .

    ADD             reduce using rule 21 (m_exp_b -> term .)
    SUB             reduce using rule 21 (m_exp_b -> term .)
    LT              reduce using rule 21 (m_exp_b -> term .)
    GT              reduce using rule 21 (m_exp_b -> term .)
    NE              reduce using rule 21 (m_exp_b -> term .)
    EQEQ            reduce using rule 21 (m_exp_b -> term .)
    LE              reduce using rule 21 (m_exp_b -> term .)
    GE              reduce using rule 21 (m_exp_b -> term .)
    COMMA           reduce using rule 21 (m_exp_b -> term .)
    SC              reduce using rule 21 (m_exp_b -> term .)
    AND             reduce using rule 21 (m_exp_b -> term .)
    OR              reduce using rule 21 (m_exp_b -> term .)
    CSB             reduce using rule 21 (m_exp_b -> term .)
    CP              reduce using rule 21 (m_exp_b -> term .)


state 81

    (22) term -> term_b .
    (23) term -> term_b . term_a term
    (24) term_a -> . MULT
    (25) term_a -> . DIV

    ADD             reduce using rule 22 (term -> term_b .)
    SUB             reduce using rule 22 (term -> term_b .)
    LT              reduce using rule 22 (term -> term_b .)
    GT              reduce using rule 22 (term -> term_b .)
    NE              reduce using rule 22 (term -> term_b .)
    EQEQ            reduce using rule 22 (term -> term_b .)
    LE              reduce using rule 22 (term -> term_b .)
    GE              reduce using rule 22 (term -> term_b .)
    COMMA           reduce using rule 22 (term -> term_b .)
    SC              reduce using rule 22 (term -> term_b .)
    AND             reduce using rule 22 (term -> term_b .)
    OR              reduce using rule 22 (term -> term_b .)
    CSB             reduce using rule 22 (term -> term_b .)
    CP              reduce using rule 22 (term -> term_b .)
    MULT            shift and go to state 124
    DIV             shift and go to state 125

    term_a                         shift and go to state 123

state 82

    (26) term_b -> fact .

    MULT            reduce using rule 26 (term_b -> fact .)
    DIV             reduce using rule 26 (term_b -> fact .)
    ADD             reduce using rule 26 (term_b -> fact .)
    SUB             reduce using rule 26 (term_b -> fact .)
    LT              reduce using rule 26 (term_b -> fact .)
    GT              reduce using rule 26 (term_b -> fact .)
    NE              reduce using rule 26 (term_b -> fact .)
    EQEQ            reduce using rule 26 (term_b -> fact .)
    LE              reduce using rule 26 (term_b -> fact .)
    GE              reduce using rule 26 (term_b -> fact .)
    COMMA           reduce using rule 26 (term_b -> fact .)
    SC              reduce using rule 26 (term_b -> fact .)
    AND             reduce using rule 26 (term_b -> fact .)
    OR              reduce using rule 26 (term_b -> fact .)
    CSB             reduce using rule 26 (term_b -> fact .)
    CP              reduce using rule 26 (term_b -> fact .)


state 83

    (74) fact -> fact_a . exp CP
    (61) exp -> . and_exp exp_a
    (64) and_exp -> . expresion and_exp_a
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    fact_a                         shift and go to state 83
    exp                            shift and go to state 126
    and_exp                        shift and go to state 90
    expresion                      shift and go to state 91
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    llamada                        shift and go to state 87

state 84

    (75) fact -> CTE_I .

    MULT            reduce using rule 75 (fact -> CTE_I .)
    DIV             reduce using rule 75 (fact -> CTE_I .)
    ADD             reduce using rule 75 (fact -> CTE_I .)
    SUB             reduce using rule 75 (fact -> CTE_I .)
    LT              reduce using rule 75 (fact -> CTE_I .)
    GT              reduce using rule 75 (fact -> CTE_I .)
    NE              reduce using rule 75 (fact -> CTE_I .)
    EQEQ            reduce using rule 75 (fact -> CTE_I .)
    LE              reduce using rule 75 (fact -> CTE_I .)
    GE              reduce using rule 75 (fact -> CTE_I .)
    COMMA           reduce using rule 75 (fact -> CTE_I .)
    SC              reduce using rule 75 (fact -> CTE_I .)
    AND             reduce using rule 75 (fact -> CTE_I .)
    OR              reduce using rule 75 (fact -> CTE_I .)
    CSB             reduce using rule 75 (fact -> CTE_I .)
    CP              reduce using rule 75 (fact -> CTE_I .)


state 85

    (76) fact -> CTE_F .

    MULT            reduce using rule 76 (fact -> CTE_F .)
    DIV             reduce using rule 76 (fact -> CTE_F .)
    ADD             reduce using rule 76 (fact -> CTE_F .)
    SUB             reduce using rule 76 (fact -> CTE_F .)
    LT              reduce using rule 76 (fact -> CTE_F .)
    GT              reduce using rule 76 (fact -> CTE_F .)
    NE              reduce using rule 76 (fact -> CTE_F .)
    EQEQ            reduce using rule 76 (fact -> CTE_F .)
    LE              reduce using rule 76 (fact -> CTE_F .)
    GE              reduce using rule 76 (fact -> CTE_F .)
    COMMA           reduce using rule 76 (fact -> CTE_F .)
    SC              reduce using rule 76 (fact -> CTE_F .)
    AND             reduce using rule 76 (fact -> CTE_F .)
    OR              reduce using rule 76 (fact -> CTE_F .)
    CSB             reduce using rule 76 (fact -> CTE_F .)
    CP              reduce using rule 76 (fact -> CTE_F .)


state 86

    (77) fact -> CTE_CHAR .

    MULT            reduce using rule 77 (fact -> CTE_CHAR .)
    DIV             reduce using rule 77 (fact -> CTE_CHAR .)
    ADD             reduce using rule 77 (fact -> CTE_CHAR .)
    SUB             reduce using rule 77 (fact -> CTE_CHAR .)
    LT              reduce using rule 77 (fact -> CTE_CHAR .)
    GT              reduce using rule 77 (fact -> CTE_CHAR .)
    NE              reduce using rule 77 (fact -> CTE_CHAR .)
    EQEQ            reduce using rule 77 (fact -> CTE_CHAR .)
    LE              reduce using rule 77 (fact -> CTE_CHAR .)
    GE              reduce using rule 77 (fact -> CTE_CHAR .)
    COMMA           reduce using rule 77 (fact -> CTE_CHAR .)
    SC              reduce using rule 77 (fact -> CTE_CHAR .)
    AND             reduce using rule 77 (fact -> CTE_CHAR .)
    OR              reduce using rule 77 (fact -> CTE_CHAR .)
    CSB             reduce using rule 77 (fact -> CTE_CHAR .)
    CP              reduce using rule 77 (fact -> CTE_CHAR .)


state 87

    (79) fact -> llamada .

    MULT            reduce using rule 79 (fact -> llamada .)
    DIV             reduce using rule 79 (fact -> llamada .)
    ADD             reduce using rule 79 (fact -> llamada .)
    SUB             reduce using rule 79 (fact -> llamada .)
    LT              reduce using rule 79 (fact -> llamada .)
    GT              reduce using rule 79 (fact -> llamada .)
    NE              reduce using rule 79 (fact -> llamada .)
    EQEQ            reduce using rule 79 (fact -> llamada .)
    LE              reduce using rule 79 (fact -> llamada .)
    GE              reduce using rule 79 (fact -> llamada .)
    COMMA           reduce using rule 79 (fact -> llamada .)
    SC              reduce using rule 79 (fact -> llamada .)
    AND             reduce using rule 79 (fact -> llamada .)
    OR              reduce using rule 79 (fact -> llamada .)
    CSB             reduce using rule 79 (fact -> llamada .)
    CP              reduce using rule 79 (fact -> llamada .)


state 88

    (80) fact_a -> OP .

    CTE_I           reduce using rule 80 (fact_a -> OP .)
    CTE_F           reduce using rule 80 (fact_a -> OP .)
    CTE_CHAR        reduce using rule 80 (fact_a -> OP .)
    ID              reduce using rule 80 (fact_a -> OP .)
    OP              reduce using rule 80 (fact_a -> OP .)


state 89

    (16) vars_vect_mat_a -> OSB exp . CSB

    CSB             shift and go to state 127


state 90

    (61) exp -> and_exp . exp_a
    (62) exp_a -> . OR
    (63) exp_a -> . empty
    (107) empty -> .

    OR              shift and go to state 129
    CSB             reduce using rule 107 (empty -> .)
    CP              reduce using rule 107 (empty -> .)

    exp_a                          shift and go to state 128
    empty                          shift and go to state 130

state 91

    (64) and_exp -> expresion . and_exp_a
    (65) and_exp_a -> . AND
    (66) and_exp_a -> . empty
    (107) empty -> .

    AND             shift and go to state 132
    OR              reduce using rule 107 (empty -> .)
    CSB             reduce using rule 107 (empty -> .)
    CP              reduce using rule 107 (empty -> .)

    and_exp_a                      shift and go to state 131
    empty                          shift and go to state 133

state 92

    (97) asignacion -> ID asignacion_a asignacion_a . EQ expresion SC

    EQ              shift and go to state 134


state 93

    (68) llamada -> ID OP llamada_a . CP SC

    CP              shift and go to state 135


state 94

    (69) llamada_a -> expresion . llamada_b
    (72) llamada_b -> . COMMA llamada_a
    (73) llamada_b -> . empty
    (107) empty -> .

    COMMA           shift and go to state 97
    CP              reduce using rule 107 (empty -> .)

    llamada_b                      shift and go to state 136
    empty                          shift and go to state 98

state 95

    (71) llamada_a -> llamada_b .

    CP              reduce using rule 71 (llamada_a -> llamada_b .)


state 96

    (70) llamada_a -> CTE_STRING . llamada_b
    (72) llamada_b -> . COMMA llamada_a
    (73) llamada_b -> . empty
    (107) empty -> .

    COMMA           shift and go to state 97
    CP              reduce using rule 107 (empty -> .)

    llamada_b                      shift and go to state 137
    empty                          shift and go to state 98

state 97

    (72) llamada_b -> COMMA . llamada_a
    (69) llamada_a -> . expresion llamada_b
    (70) llamada_a -> . CTE_STRING llamada_b
    (71) llamada_a -> . llamada_b
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (72) llamada_b -> . COMMA llamada_a
    (73) llamada_b -> . empty
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (107) empty -> .
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_STRING      shift and go to state 96
    COMMA           shift and go to state 97
    CP              reduce using rule 107 (empty -> .)
    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    llamada_a                      shift and go to state 138
    expresion                      shift and go to state 94
    llamada_b                      shift and go to state 95
    m_exp                          shift and go to state 78
    empty                          shift and go to state 98
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 98

    (73) llamada_b -> empty .

    CP              reduce using rule 73 (llamada_b -> empty .)


state 99

    (68) llamada -> ID . OP llamada_a CP SC

    OP              shift and go to state 62


state 100

    (96) llamadafuncionclase -> ID POINT llamada .

    ID              reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    FOR             reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    CLASS           reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    CLASS_ID        reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    IF              reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    INT             reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    FLOAT           reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    CHAR            reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    DATAFRAME       reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    FILE            reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    VOID            reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    WHILE           reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)
    CB              reduce using rule 96 (llamadafuncionclase -> ID POINT llamada .)


state 101

    (98) asignacion_a -> OSB exp . CSB

    CSB             shift and go to state 139


state 102

    (89) condicion -> condicion_c bloque condicion_a .

    ID              reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    FOR             reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    CLASS           reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    CLASS_ID        reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    IF              reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    INT             reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    FLOAT           reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    CHAR            reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    DATAFRAME       reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    FILE            reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    VOID            reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    WHILE           reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    CB              reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)
    OB              reduce using rule 89 (condicion -> condicion_c bloque condicion_a .)


state 103

    (90) condicion_a -> condicion_d . condicion_b bloque
    (91) condicion_b -> . condicion
    (92) condicion_b -> . empty
    (89) condicion -> . condicion_c bloque condicion_a
    (107) empty -> .
    (93) condicion_c -> . IF OP expresion CP

    OB              reduce using rule 107 (empty -> .)
    IF              shift and go to state 48

    condicion_b                    shift and go to state 140
    condicion                      shift and go to state 141
    empty                          shift and go to state 142
    condicion_c                    shift and go to state 41

state 104

    (94) condicion_d -> ELSE .

    IF              reduce using rule 94 (condicion_d -> ELSE .)
    OB              reduce using rule 94 (condicion_d -> ELSE .)


state 105

    (67) for -> FOR OP asignacionsencilla . SC expresion SC asignacionsencilla CP bloque

    SC              shift and go to state 143


state 106

    (100) asignacionsencilla -> ID . EQ expresion

    EQ              shift and go to state 144


state 107

    (81) classcreate -> CLASS CLASS_ID OB . classcreate_a function classcreate_c CB
    (82) classcreate_a -> . vars classcreate_a
    (83) classcreate_a -> . vars_vect_mat classcreate_a
    (84) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (107) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 107 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 107 (empty -> .) ]
  ! FLOAT           [ reduce using rule 107 (empty -> .) ]
  ! CHAR            [ reduce using rule 107 (empty -> .) ]

    classcreate_a                  shift and go to state 145
    vars                           shift and go to state 146
    vars_vect_mat                  shift and go to state 147
    empty                          shift and go to state 148
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 108

    (95) classdeclare -> CLASS_ID ID SC .

    ID              reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    FOR             reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    CLASS           reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    CLASS_ID        reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    IF              reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    INT             reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    FLOAT           reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    CHAR            reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    DATAFRAME       reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    FILE            reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    VOID            reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    WHILE           reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)
    CB              reduce using rule 95 (classdeclare -> CLASS_ID ID SC .)


state 109

    (101) function -> function_a ID OP . function_b CP bloque
    (104) function_b -> . tiposimple ID
    (105) function_b -> . tiposimple ID COMMA function_b
    (106) function_b -> . empty
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (107) empty -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    CP              reduce using rule 107 (empty -> .)

    function_b                     shift and go to state 149
    tiposimple                     shift and go to state 150
    empty                          shift and go to state 151

state 110

    (93) condicion_c -> IF OP expresion . CP

    CP              shift and go to state 152


state 111

    (60) while_b -> while_a OP expresion . CP

    CP              shift and go to state 153


state 112

    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .

    INT             reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FLOAT           reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    CHAR            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    ID              reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FILE            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    OB              reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    VOID            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)


state 113

    (48) expresion -> m_exp expresion_a . m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    m_exp                          shift and go to state 154
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 114

    (49) expresion_a -> LT .

    CTE_I           reduce using rule 49 (expresion_a -> LT .)
    CTE_F           reduce using rule 49 (expresion_a -> LT .)
    CTE_CHAR        reduce using rule 49 (expresion_a -> LT .)
    ID              reduce using rule 49 (expresion_a -> LT .)
    OP              reduce using rule 49 (expresion_a -> LT .)


state 115

    (50) expresion_a -> GT .

    CTE_I           reduce using rule 50 (expresion_a -> GT .)
    CTE_F           reduce using rule 50 (expresion_a -> GT .)
    CTE_CHAR        reduce using rule 50 (expresion_a -> GT .)
    ID              reduce using rule 50 (expresion_a -> GT .)
    OP              reduce using rule 50 (expresion_a -> GT .)


state 116

    (51) expresion_a -> NE .

    CTE_I           reduce using rule 51 (expresion_a -> NE .)
    CTE_F           reduce using rule 51 (expresion_a -> NE .)
    CTE_CHAR        reduce using rule 51 (expresion_a -> NE .)
    ID              reduce using rule 51 (expresion_a -> NE .)
    OP              reduce using rule 51 (expresion_a -> NE .)


state 117

    (52) expresion_a -> EQEQ .

    CTE_I           reduce using rule 52 (expresion_a -> EQEQ .)
    CTE_F           reduce using rule 52 (expresion_a -> EQEQ .)
    CTE_CHAR        reduce using rule 52 (expresion_a -> EQEQ .)
    ID              reduce using rule 52 (expresion_a -> EQEQ .)
    OP              reduce using rule 52 (expresion_a -> EQEQ .)


state 118

    (53) expresion_a -> LE .

    CTE_I           reduce using rule 53 (expresion_a -> LE .)
    CTE_F           reduce using rule 53 (expresion_a -> LE .)
    CTE_CHAR        reduce using rule 53 (expresion_a -> LE .)
    ID              reduce using rule 53 (expresion_a -> LE .)
    OP              reduce using rule 53 (expresion_a -> LE .)


state 119

    (54) expresion_a -> GE .

    CTE_I           reduce using rule 54 (expresion_a -> GE .)
    CTE_F           reduce using rule 54 (expresion_a -> GE .)
    CTE_CHAR        reduce using rule 54 (expresion_a -> GE .)
    ID              reduce using rule 54 (expresion_a -> GE .)
    OP              reduce using rule 54 (expresion_a -> GE .)


state 120

    (18) m_exp -> m_exp_b m_exp_a . m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    m_exp_b                        shift and go to state 79
    m_exp                          shift and go to state 155
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 121

    (19) m_exp_a -> ADD .

    CTE_I           reduce using rule 19 (m_exp_a -> ADD .)
    CTE_F           reduce using rule 19 (m_exp_a -> ADD .)
    CTE_CHAR        reduce using rule 19 (m_exp_a -> ADD .)
    ID              reduce using rule 19 (m_exp_a -> ADD .)
    OP              reduce using rule 19 (m_exp_a -> ADD .)


state 122

    (20) m_exp_a -> SUB .

    CTE_I           reduce using rule 20 (m_exp_a -> SUB .)
    CTE_F           reduce using rule 20 (m_exp_a -> SUB .)
    CTE_CHAR        reduce using rule 20 (m_exp_a -> SUB .)
    ID              reduce using rule 20 (m_exp_a -> SUB .)
    OP              reduce using rule 20 (m_exp_a -> SUB .)


state 123

    (23) term -> term_b term_a . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    term_b                         shift and go to state 81
    term                           shift and go to state 156
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 124

    (24) term_a -> MULT .

    CTE_I           reduce using rule 24 (term_a -> MULT .)
    CTE_F           reduce using rule 24 (term_a -> MULT .)
    CTE_CHAR        reduce using rule 24 (term_a -> MULT .)
    ID              reduce using rule 24 (term_a -> MULT .)
    OP              reduce using rule 24 (term_a -> MULT .)


state 125

    (25) term_a -> DIV .

    CTE_I           reduce using rule 25 (term_a -> DIV .)
    CTE_F           reduce using rule 25 (term_a -> DIV .)
    CTE_CHAR        reduce using rule 25 (term_a -> DIV .)
    ID              reduce using rule 25 (term_a -> DIV .)
    OP              reduce using rule 25 (term_a -> DIV .)


state 126

    (74) fact -> fact_a exp . CP

    CP              shift and go to state 157


state 127

    (16) vars_vect_mat_a -> OSB exp CSB .

    SC              reduce using rule 16 (vars_vect_mat_a -> OSB exp CSB .)
    OSB             reduce using rule 16 (vars_vect_mat_a -> OSB exp CSB .)


state 128

    (61) exp -> and_exp exp_a .

    CSB             reduce using rule 61 (exp -> and_exp exp_a .)
    CP              reduce using rule 61 (exp -> and_exp exp_a .)


state 129

    (62) exp_a -> OR .

    CSB             reduce using rule 62 (exp_a -> OR .)
    CP              reduce using rule 62 (exp_a -> OR .)


state 130

    (63) exp_a -> empty .

    CSB             reduce using rule 63 (exp_a -> empty .)
    CP              reduce using rule 63 (exp_a -> empty .)


state 131

    (64) and_exp -> expresion and_exp_a .

    OR              reduce using rule 64 (and_exp -> expresion and_exp_a .)
    CSB             reduce using rule 64 (and_exp -> expresion and_exp_a .)
    CP              reduce using rule 64 (and_exp -> expresion and_exp_a .)


state 132

    (65) and_exp_a -> AND .

    OR              reduce using rule 65 (and_exp_a -> AND .)
    CSB             reduce using rule 65 (and_exp_a -> AND .)
    CP              reduce using rule 65 (and_exp_a -> AND .)


state 133

    (66) and_exp_a -> empty .

    OR              reduce using rule 66 (and_exp_a -> empty .)
    CSB             reduce using rule 66 (and_exp_a -> empty .)
    CP              reduce using rule 66 (and_exp_a -> empty .)


state 134

    (97) asignacion -> ID asignacion_a asignacion_a EQ . expresion SC
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    expresion                      shift and go to state 158
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 135

    (68) llamada -> ID OP llamada_a CP . SC

    SC              shift and go to state 159


state 136

    (69) llamada_a -> expresion llamada_b .

    CP              reduce using rule 69 (llamada_a -> expresion llamada_b .)


state 137

    (70) llamada_a -> CTE_STRING llamada_b .

    CP              reduce using rule 70 (llamada_a -> CTE_STRING llamada_b .)


state 138

    (72) llamada_b -> COMMA llamada_a .

    CP              reduce using rule 72 (llamada_b -> COMMA llamada_a .)


state 139

    (98) asignacion_a -> OSB exp CSB .

    OSB             reduce using rule 98 (asignacion_a -> OSB exp CSB .)
    EQ              reduce using rule 98 (asignacion_a -> OSB exp CSB .)


state 140

    (90) condicion_a -> condicion_d condicion_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 160

state 141

    (91) condicion_b -> condicion .

    OB              reduce using rule 91 (condicion_b -> condicion .)


state 142

    (92) condicion_b -> empty .

    OB              reduce using rule 92 (condicion_b -> empty .)


state 143

    (67) for -> FOR OP asignacionsencilla SC . expresion SC asignacionsencilla CP bloque
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    expresion                      shift and go to state 161
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 144

    (100) asignacionsencilla -> ID EQ . expresion
    (47) expresion -> . m_exp
    (48) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (74) fact -> . fact_a exp CP
    (75) fact -> . CTE_I
    (76) fact -> . CTE_F
    (77) fact -> . CTE_CHAR
    (78) fact -> . ID
    (79) fact -> . llamada
    (80) fact_a -> . OP
    (68) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 84
    CTE_F           shift and go to state 85
    CTE_CHAR        shift and go to state 86
    ID              shift and go to state 76
    OP              shift and go to state 88

    expresion                      shift and go to state 162
    m_exp                          shift and go to state 78
    m_exp_b                        shift and go to state 79
    term                           shift and go to state 80
    term_b                         shift and go to state 81
    fact                           shift and go to state 82
    fact_a                         shift and go to state 83
    llamada                        shift and go to state 87

state 145

    (81) classcreate -> CLASS CLASS_ID OB classcreate_a . function classcreate_c CB
    (101) function -> . function_a ID OP function_b CP bloque
    (102) function_a -> . VOID
    (103) function_a -> . tiposimple
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    VOID            shift and go to state 50
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 163
    function_a                     shift and go to state 47
    tiposimple                     shift and go to state 164

state 146

    (82) classcreate_a -> vars . classcreate_a
    (82) classcreate_a -> . vars classcreate_a
    (83) classcreate_a -> . vars_vect_mat classcreate_a
    (84) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (107) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 107 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 107 (empty -> .) ]
  ! FLOAT           [ reduce using rule 107 (empty -> .) ]
  ! CHAR            [ reduce using rule 107 (empty -> .) ]

    vars                           shift and go to state 146
    classcreate_a                  shift and go to state 165
    vars_vect_mat                  shift and go to state 147
    empty                          shift and go to state 148
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 147

    (83) classcreate_a -> vars_vect_mat . classcreate_a
    (82) classcreate_a -> . vars classcreate_a
    (83) classcreate_a -> . vars_vect_mat classcreate_a
    (84) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (107) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 107 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 107 (empty -> .) ]
  ! FLOAT           [ reduce using rule 107 (empty -> .) ]
  ! CHAR            [ reduce using rule 107 (empty -> .) ]

    vars_vect_mat                  shift and go to state 147
    classcreate_a                  shift and go to state 166
    vars                           shift and go to state 146
    empty                          shift and go to state 148
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 148

    (84) classcreate_a -> empty .

    VOID            reduce using rule 84 (classcreate_a -> empty .)
    INT             reduce using rule 84 (classcreate_a -> empty .)
    FLOAT           reduce using rule 84 (classcreate_a -> empty .)
    CHAR            reduce using rule 84 (classcreate_a -> empty .)


state 149

    (101) function -> function_a ID OP function_b . CP bloque

    CP              shift and go to state 167


state 150

    (104) function_b -> tiposimple . ID
    (105) function_b -> tiposimple . ID COMMA function_b

    ID              shift and go to state 168


state 151

    (106) function_b -> empty .

    CP              reduce using rule 106 (function_b -> empty .)


state 152

    (93) condicion_c -> IF OP expresion CP .

    OB              reduce using rule 93 (condicion_c -> IF OP expresion CP .)


state 153

    (60) while_b -> while_a OP expresion CP .

    OB              reduce using rule 60 (while_b -> while_a OP expresion CP .)


state 154

    (48) expresion -> m_exp expresion_a m_exp .

    COMMA           reduce using rule 48 (expresion -> m_exp expresion_a m_exp .)
    SC              reduce using rule 48 (expresion -> m_exp expresion_a m_exp .)
    AND             reduce using rule 48 (expresion -> m_exp expresion_a m_exp .)
    OR              reduce using rule 48 (expresion -> m_exp expresion_a m_exp .)
    CSB             reduce using rule 48 (expresion -> m_exp expresion_a m_exp .)
    CP              reduce using rule 48 (expresion -> m_exp expresion_a m_exp .)


state 155

    (18) m_exp -> m_exp_b m_exp_a m_exp .

    LT              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    GT              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    NE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    EQEQ            reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    LE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    GE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    COMMA           reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    SC              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    AND             reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    OR              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    CSB             reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    CP              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)


state 156

    (23) term -> term_b term_a term .

    ADD             reduce using rule 23 (term -> term_b term_a term .)
    SUB             reduce using rule 23 (term -> term_b term_a term .)
    LT              reduce using rule 23 (term -> term_b term_a term .)
    GT              reduce using rule 23 (term -> term_b term_a term .)
    NE              reduce using rule 23 (term -> term_b term_a term .)
    EQEQ            reduce using rule 23 (term -> term_b term_a term .)
    LE              reduce using rule 23 (term -> term_b term_a term .)
    GE              reduce using rule 23 (term -> term_b term_a term .)
    COMMA           reduce using rule 23 (term -> term_b term_a term .)
    SC              reduce using rule 23 (term -> term_b term_a term .)
    AND             reduce using rule 23 (term -> term_b term_a term .)
    OR              reduce using rule 23 (term -> term_b term_a term .)
    CSB             reduce using rule 23 (term -> term_b term_a term .)
    CP              reduce using rule 23 (term -> term_b term_a term .)


state 157

    (74) fact -> fact_a exp CP .

    MULT            reduce using rule 74 (fact -> fact_a exp CP .)
    DIV             reduce using rule 74 (fact -> fact_a exp CP .)
    ADD             reduce using rule 74 (fact -> fact_a exp CP .)
    SUB             reduce using rule 74 (fact -> fact_a exp CP .)
    LT              reduce using rule 74 (fact -> fact_a exp CP .)
    GT              reduce using rule 74 (fact -> fact_a exp CP .)
    NE              reduce using rule 74 (fact -> fact_a exp CP .)
    EQEQ            reduce using rule 74 (fact -> fact_a exp CP .)
    LE              reduce using rule 74 (fact -> fact_a exp CP .)
    GE              reduce using rule 74 (fact -> fact_a exp CP .)
    COMMA           reduce using rule 74 (fact -> fact_a exp CP .)
    SC              reduce using rule 74 (fact -> fact_a exp CP .)
    AND             reduce using rule 74 (fact -> fact_a exp CP .)
    OR              reduce using rule 74 (fact -> fact_a exp CP .)
    CSB             reduce using rule 74 (fact -> fact_a exp CP .)
    CP              reduce using rule 74 (fact -> fact_a exp CP .)


state 158

    (97) asignacion -> ID asignacion_a asignacion_a EQ expresion . SC

    SC              shift and go to state 169


state 159

    (68) llamada -> ID OP llamada_a CP SC .

    ID              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    FOR             reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    CLASS           reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    CLASS_ID        reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    IF              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    INT             reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    FLOAT           reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    CHAR            reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    DATAFRAME       reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    FILE            reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    VOID            reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    WHILE           reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    CB              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    MULT            reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    DIV             reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    ADD             reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    SUB             reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    LT              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    GT              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    NE              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    EQEQ            reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    LE              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    GE              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    COMMA           reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    SC              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    AND             reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    OR              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    CSB             reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)
    CP              reduce using rule 68 (llamada -> ID OP llamada_a CP SC .)


state 160

    (90) condicion_a -> condicion_d condicion_b bloque .

    ID              reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    FOR             reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS           reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS_ID        reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    IF              reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    INT             reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    FLOAT           reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    CHAR            reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    DATAFRAME       reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    FILE            reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    VOID            reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    WHILE           reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    CB              reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)
    OB              reduce using rule 90 (condicion_a -> condicion_d condicion_b bloque .)


state 161

    (67) for -> FOR OP asignacionsencilla SC expresion . SC asignacionsencilla CP bloque

    SC              shift and go to state 170


state 162

    (100) asignacionsencilla -> ID EQ expresion .

    SC              reduce using rule 100 (asignacionsencilla -> ID EQ expresion .)
    CP              reduce using rule 100 (asignacionsencilla -> ID EQ expresion .)


state 163

    (81) classcreate -> CLASS CLASS_ID OB classcreate_a function . classcreate_c CB
    (85) classcreate_c -> . function classcreate_d
    (86) classcreate_c -> . classcreate_d
    (101) function -> . function_a ID OP function_b CP bloque
    (87) classcreate_d -> . classcreate_c
    (88) classcreate_d -> . empty
    (102) function_a -> . VOID
    (103) function_a -> . tiposimple
    (107) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    VOID            shift and go to state 50
    CB              reduce using rule 107 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 171
    classcreate_c                  shift and go to state 172
    classcreate_d                  shift and go to state 173
    function_a                     shift and go to state 47
    empty                          shift and go to state 174
    tiposimple                     shift and go to state 164

state 164

    (103) function_a -> tiposimple .

    ID              reduce using rule 103 (function_a -> tiposimple .)


state 165

    (82) classcreate_a -> vars classcreate_a .

    VOID            reduce using rule 82 (classcreate_a -> vars classcreate_a .)
    INT             reduce using rule 82 (classcreate_a -> vars classcreate_a .)
    FLOAT           reduce using rule 82 (classcreate_a -> vars classcreate_a .)
    CHAR            reduce using rule 82 (classcreate_a -> vars classcreate_a .)


state 166

    (83) classcreate_a -> vars_vect_mat classcreate_a .

    VOID            reduce using rule 83 (classcreate_a -> vars_vect_mat classcreate_a .)
    INT             reduce using rule 83 (classcreate_a -> vars_vect_mat classcreate_a .)
    FLOAT           reduce using rule 83 (classcreate_a -> vars_vect_mat classcreate_a .)
    CHAR            reduce using rule 83 (classcreate_a -> vars_vect_mat classcreate_a .)


state 167

    (101) function -> function_a ID OP function_b CP . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 175

state 168

    (104) function_b -> tiposimple ID .
    (105) function_b -> tiposimple ID . COMMA function_b

    CP              reduce using rule 104 (function_b -> tiposimple ID .)
    COMMA           shift and go to state 176


state 169

    (97) asignacion -> ID asignacion_a asignacion_a EQ expresion SC .

    ID              reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FOR             reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS           reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS_ID        reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    IF              reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    INT             reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FLOAT           reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CHAR            reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DATAFRAME       reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FILE            reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    VOID            reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    WHILE           reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CB              reduce using rule 97 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)


state 170

    (67) for -> FOR OP asignacionsencilla SC expresion SC . asignacionsencilla CP bloque
    (100) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 106

    asignacionsencilla             shift and go to state 177

state 171

    (85) classcreate_c -> function . classcreate_d
    (87) classcreate_d -> . classcreate_c
    (88) classcreate_d -> . empty
    (85) classcreate_c -> . function classcreate_d
    (86) classcreate_c -> . classcreate_d
    (107) empty -> .
    (101) function -> . function_a ID OP function_b CP bloque
    (102) function_a -> . VOID
    (103) function_a -> . tiposimple
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    CB              reduce using rule 107 (empty -> .)
    VOID            shift and go to state 50
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 171
    classcreate_d                  shift and go to state 178
    classcreate_c                  shift and go to state 179
    empty                          shift and go to state 174
    function_a                     shift and go to state 47
    tiposimple                     shift and go to state 164

state 172

    (81) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c . CB
    (87) classcreate_d -> classcreate_c .

  ! shift/reduce conflict for CB resolved as shift
    CB              shift and go to state 180

  ! CB              [ reduce using rule 87 (classcreate_d -> classcreate_c .) ]


state 173

    (86) classcreate_c -> classcreate_d .

    CB              reduce using rule 86 (classcreate_c -> classcreate_d .)


state 174

    (88) classcreate_d -> empty .

    CB              reduce using rule 88 (classcreate_d -> empty .)


state 175

    (101) function -> function_a ID OP function_b CP bloque .

    ID              reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    FOR             reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    CLASS           reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    CLASS_ID        reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    IF              reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    INT             reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    FLOAT           reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    CHAR            reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    DATAFRAME       reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    FILE            reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    VOID            reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    WHILE           reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)
    CB              reduce using rule 101 (function -> function_a ID OP function_b CP bloque .)


state 176

    (105) function_b -> tiposimple ID COMMA . function_b
    (104) function_b -> . tiposimple ID
    (105) function_b -> . tiposimple ID COMMA function_b
    (106) function_b -> . empty
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (107) empty -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    CP              reduce using rule 107 (empty -> .)

    tiposimple                     shift and go to state 150
    function_b                     shift and go to state 181
    empty                          shift and go to state 151

state 177

    (67) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla . CP bloque

    CP              shift and go to state 182


state 178

    (85) classcreate_c -> function classcreate_d .
    (86) classcreate_c -> classcreate_d .

  ! reduce/reduce conflict for CB resolved using rule 85 (classcreate_c -> function classcreate_d .)
    CB              reduce using rule 85 (classcreate_c -> function classcreate_d .)

  ! CB              [ reduce using rule 86 (classcreate_c -> classcreate_d .) ]


state 179

    (87) classcreate_d -> classcreate_c .

    CB              reduce using rule 87 (classcreate_d -> classcreate_c .)


state 180

    (81) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .

    ID              reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FOR             reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS           reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS_ID        reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    IF              reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INT             reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FLOAT           reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CHAR            reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DATAFRAME       reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FILE            reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    VOID            reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    WHILE           reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CB              reduce using rule 81 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)


state 181

    (105) function_b -> tiposimple ID COMMA function_b .

    CP              reduce using rule 105 (function_b -> tiposimple ID COMMA function_b .)


state 182

    (67) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 183

state 183

    (67) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .

    ID              reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FOR             reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CLASS           reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CLASS_ID        reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    IF              reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    INT             reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FLOAT           reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CHAR            reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    DATAFRAME       reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FILE            reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    VOID            reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    WHILE           reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CB              reduce using rule 67 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OSB in state 40 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for INT in state 107 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 107 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 107 resolved as shift
WARNING: shift/reduce conflict for INT in state 146 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 146 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 146 resolved as shift
WARNING: shift/reduce conflict for INT in state 147 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 147 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 147 resolved as shift
WARNING: shift/reduce conflict for CB in state 172 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa_a -> programa_b)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 28 resolved using rule (bloque_a -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 178 resolved using rule (classcreate_c -> function classcreate_d)
WARNING: rejected rule (classcreate_c -> classcreate_d) in state 178
