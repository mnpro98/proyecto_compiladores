Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPT
    COL
    DIGIT
    DIGITS
    LETTER

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SC programa_a bloque
Rule 2     programa_a -> programa_b
Rule 3     programa_a -> programa_b programa_a
Rule 4     programa_a -> empty
Rule 5     programa_b -> vars
Rule 6     programa_b -> vars_vect_mat
Rule 7     vars -> tiposimple vars_a SC
Rule 8     vars -> tipocompuesto vars_a SC
Rule 9     vars_a -> vars_b
Rule 10    vars_a -> vars_c vars_a
Rule 11    vars_b -> ID
Rule 12    vars_b -> ID EQ expresion
Rule 13    vars_c -> vars_b COMMA
Rule 14    vars_vect_mat -> tiposimple ID vars_vect_mat_a SC
Rule 15    vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
Rule 16    vars_vect_mat_a -> OSB exp CSB
Rule 17    m_exp -> m_exp_b
Rule 18    m_exp -> m_exp_b m_exp_a m_exp
Rule 19    m_exp_a -> ADD
Rule 20    m_exp_a -> SUB
Rule 21    m_exp_b -> term
Rule 22    term -> term_b
Rule 23    term -> term_b term_a term
Rule 24    term_a -> MULT
Rule 25    term_a -> DIV
Rule 26    term_b -> fact
Rule 27    tiposimple -> INT
Rule 28    tiposimple -> FLOAT
Rule 29    tiposimple -> CHAR
Rule 30    tipocompuesto -> DATAFRAME
Rule 31    tipocompuesto -> ID
Rule 32    tipocompuesto -> FILE
Rule 33    bloque -> OB bloque_a CB
Rule 34    bloque_a -> estatuto bloque_a
Rule 35    bloque_a -> estatuto
Rule 36    bloque_a -> empty
Rule 37    estatuto -> asignacion
Rule 38    estatuto -> condicion
Rule 39    estatuto -> llamada SC
Rule 40    estatuto -> while
Rule 41    estatuto -> for
Rule 42    estatuto -> classcreate
Rule 43    estatuto -> vars
Rule 44    estatuto -> classdeclare
Rule 45    estatuto -> llamadafuncionclase
Rule 46    estatuto -> function
Rule 47    estatuto -> return
Rule 48    estatuto -> print
Rule 49    return -> RETURN expresion SC
Rule 50    expresion -> m_exp
Rule 51    expresion -> m_exp expresion_a m_exp
Rule 52    expresion_a -> LT
Rule 53    expresion_a -> GT
Rule 54    expresion_a -> NE
Rule 55    expresion_a -> EQEQ
Rule 56    expresion_a -> LE
Rule 57    expresion_a -> GE
Rule 58    varcte -> ID
Rule 59    varcte -> CTE_I
Rule 60    varcte -> CTE_F
Rule 61    while -> while_b bloque
Rule 62    while_a -> WHILE
Rule 63    while_b -> while_a OP expresion CP
Rule 64    exp -> and_exp
Rule 65    exp -> exp_b exp
Rule 66    exp_b -> and_exp OR
Rule 67    and_exp -> expresion
Rule 68    and_exp -> and_exp_b and_exp
Rule 69    and_exp_b -> expresion AND
Rule 70    for -> for_a for_b bloque
Rule 71    for_a -> FOR
Rule 72    for_b -> for_e asignacionsencilla CP
Rule 73    for_c -> OP asignacionsencilla SC
Rule 74    for_d -> for_c expresion
Rule 75    for_e -> for_d SC
Rule 76    llamada -> llamada_d llamada_a CP
Rule 77    llamada_a -> llamada_e llamada_b
Rule 78    llamada_a -> llamada_b
Rule 79    llamada_b -> llamada_f llamada_a
Rule 80    llamada_b -> empty
Rule 81    llamada_c -> ID
Rule 82    llamada_d -> llamada_c OP
Rule 83    llamada_e -> expresion
Rule 84    llamada_e -> CTE_STRING
Rule 85    llamada_f -> COMMA
Rule 86    print -> PRINT OP expresion CP SC
Rule 87    fact -> OP fact_a exp CP
Rule 88    fact -> CTE_I
Rule 89    fact -> CTE_F
Rule 90    fact -> CTE_CHAR
Rule 91    fact -> ID
Rule 92    fact -> llamada
Rule 93    fact_a -> empty
Rule 94    classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB
Rule 95    classcreate_a -> vars classcreate_a
Rule 96    classcreate_a -> vars_vect_mat classcreate_a
Rule 97    classcreate_a -> empty
Rule 98    classcreate_c -> function classcreate_d
Rule 99    classcreate_c -> classcreate_d
Rule 100   classcreate_d -> classcreate_c
Rule 101   classcreate_d -> empty
Rule 102   condicion -> condicion_c bloque condicion_a
Rule 103   condicion_a -> condicion_d condicion_b bloque
Rule 104   condicion_a -> empty
Rule 105   condicion_b -> condicion
Rule 106   condicion_b -> empty
Rule 107   condicion_c -> IF OP exp CP
Rule 108   condicion_d -> ELSE
Rule 109   classdeclare -> CLASS_ID ID SC
Rule 110   llamadafuncionclase -> ID POINT llamada
Rule 111   asignacion -> ID asignacion_a asignacion_a EQ expresion SC
Rule 112   asignacion_a -> OSB exp CSB
Rule 113   asignacion_a -> empty
Rule 114   asignacionsencilla -> ID EQ expresion
Rule 115   function -> DEF function_e bloque
Rule 116   function_a -> VOID
Rule 117   function_a -> tiposimple
Rule 118   function_b -> function_d
Rule 119   function_b -> function_d COMMA function_b
Rule 120   function_b -> empty
Rule 121   function_c -> function_a ID
Rule 122   function_d -> tiposimple ID
Rule 123   function_e -> function_c OP function_b CP vars
Rule 124   function_e -> function_c OP function_b CP empty
Rule 125   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 19
AND                  : 69
CAPT                 : 
CB                   : 33 94
CHAR                 : 29
CLASS                : 94
CLASS_ID             : 94 109
COL                  : 
COMMA                : 13 85 119
CP                   : 63 72 76 86 87 107 123 124
CSB                  : 16 112
CTE_CHAR             : 90
CTE_F                : 60 89
CTE_I                : 59 88
CTE_STRING           : 84
DATAFRAME            : 30
DEF                  : 115
DIGIT                : 
DIGITS               : 
DIV                  : 25
ELSE                 : 108
EQ                   : 12 111 114
EQEQ                 : 55
FILE                 : 32
FLOAT                : 28
FOR                  : 71
GE                   : 57
GT                   : 53
ID                   : 1 11 12 14 15 31 58 81 91 109 110 111 114 121 122
IF                   : 107
INT                  : 27
LE                   : 56
LETTER               : 
LT                   : 52
MULT                 : 24
NE                   : 54
OB                   : 33 94
OP                   : 63 73 82 86 87 107 123 124
OR                   : 66
OSB                  : 16 112
POINT                : 110
PRINT                : 86
PROGRAM              : 1
RETURN               : 49
SC                   : 1 7 8 14 15 39 49 73 75 86 109 111
SUB                  : 20
VOID                 : 116
WHILE                : 62
error                : 

Nonterminals, with rules where they appear

and_exp              : 64 66 68
and_exp_b            : 68
asignacion           : 37
asignacion_a         : 111 111
asignacionsencilla   : 72 73
bloque               : 1 61 70 102 103 115
bloque_a             : 33 34
classcreate          : 42
classcreate_a        : 94 95 96
classcreate_c        : 94 100
classcreate_d        : 98 99
classdeclare         : 44
condicion            : 38 105
condicion_a          : 102
condicion_b          : 103
condicion_c          : 102
condicion_d          : 103
empty                : 4 36 80 93 97 101 104 106 113 120 124
estatuto             : 34 35
exp                  : 16 65 87 107 112
exp_b                : 65
expresion            : 12 49 63 67 69 74 83 86 111 114
expresion_a          : 51
fact                 : 26
fact_a               : 87
for                  : 41
for_a                : 70
for_b                : 70
for_c                : 74
for_d                : 75
for_e                : 72
function             : 46 94 98
function_a           : 121
function_b           : 119 123 124
function_c           : 123 124
function_d           : 118 119
function_e           : 115
llamada              : 39 92 110
llamada_a            : 76 79
llamada_b            : 77 78
llamada_c            : 82
llamada_d            : 76
llamada_e            : 77
llamada_f            : 79
llamadafuncionclase  : 45
m_exp                : 18 50 51 51
m_exp_a              : 18
m_exp_b              : 17 18
print                : 48
programa             : 0
programa_a           : 1 3
programa_b           : 2 3
return               : 47
term                 : 21 23
term_a               : 23
term_b               : 22 23
tipocompuesto        : 8
tiposimple           : 7 14 15 117 122
varcte               : 
vars                 : 5 43 95 123
vars_a               : 7 8 10
vars_b               : 9 13
vars_c               : 10
vars_vect_mat        : 6 96
vars_vect_mat_a      : 14 15 15
while                : 40
while_a              : 63
while_b              : 61

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SC programa_a bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SC programa_a bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SC programa_a bloque

    SC              shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SC . programa_a bloque
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (125) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    OB              reduce using rule 125 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    programa_a                     shift and go to state 6
    programa_b                     shift and go to state 7
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 5

    (31) tipocompuesto -> ID .

    ID              reduce using rule 31 (tipocompuesto -> ID .)


state 6

    (1) programa -> PROGRAM ID SC programa_a . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 18

state 7

    (2) programa_a -> programa_b .
    (3) programa_a -> programa_b . programa_a
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (125) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! reduce/reduce conflict for OB resolved using rule 2 (programa_a -> programa_b .)
    OB              reduce using rule 2 (programa_a -> programa_b .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! OB              [ reduce using rule 125 (empty -> .) ]

    programa_b                     shift and go to state 7
    programa_a                     shift and go to state 20
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 8

    (4) programa_a -> empty .

    OB              reduce using rule 4 (programa_a -> empty .)


state 9

    (5) programa_b -> vars .

    INT             reduce using rule 5 (programa_b -> vars .)
    FLOAT           reduce using rule 5 (programa_b -> vars .)
    CHAR            reduce using rule 5 (programa_b -> vars .)
    DATAFRAME       reduce using rule 5 (programa_b -> vars .)
    ID              reduce using rule 5 (programa_b -> vars .)
    FILE            reduce using rule 5 (programa_b -> vars .)
    OB              reduce using rule 5 (programa_b -> vars .)


state 10

    (6) programa_b -> vars_vect_mat .

    INT             reduce using rule 6 (programa_b -> vars_vect_mat .)
    FLOAT           reduce using rule 6 (programa_b -> vars_vect_mat .)
    CHAR            reduce using rule 6 (programa_b -> vars_vect_mat .)
    DATAFRAME       reduce using rule 6 (programa_b -> vars_vect_mat .)
    ID              reduce using rule 6 (programa_b -> vars_vect_mat .)
    FILE            reduce using rule 6 (programa_b -> vars_vect_mat .)
    OB              reduce using rule 6 (programa_b -> vars_vect_mat .)


state 11

    (7) vars -> tiposimple . vars_a SC
    (14) vars_vect_mat -> tiposimple . ID vars_vect_mat_a SC
    (15) vars_vect_mat -> tiposimple . ID vars_vect_mat_a vars_vect_mat_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 22

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 12

    (8) vars -> tipocompuesto . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_a                         shift and go to state 25
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 13

    (27) tiposimple -> INT .

    ID              reduce using rule 27 (tiposimple -> INT .)


state 14

    (28) tiposimple -> FLOAT .

    ID              reduce using rule 28 (tiposimple -> FLOAT .)


state 15

    (29) tiposimple -> CHAR .

    ID              reduce using rule 29 (tiposimple -> CHAR .)


state 16

    (30) tipocompuesto -> DATAFRAME .

    ID              reduce using rule 30 (tipocompuesto -> DATAFRAME .)


state 17

    (32) tipocompuesto -> FILE .

    ID              reduce using rule 32 (tipocompuesto -> FILE .)


state 18

    (1) programa -> PROGRAM ID SC programa_a bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SC programa_a bloque .)


state 19

    (33) bloque -> OB . bloque_a CB
    (34) bloque_a -> . estatuto bloque_a
    (35) bloque_a -> . estatuto
    (36) bloque_a -> . empty
    (37) estatuto -> . asignacion
    (38) estatuto -> . condicion
    (39) estatuto -> . llamada SC
    (40) estatuto -> . while
    (41) estatuto -> . for
    (42) estatuto -> . classcreate
    (43) estatuto -> . vars
    (44) estatuto -> . classdeclare
    (45) estatuto -> . llamadafuncionclase
    (46) estatuto -> . function
    (47) estatuto -> . return
    (48) estatuto -> . print
    (125) empty -> .
    (111) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (102) condicion -> . condicion_c bloque condicion_a
    (76) llamada -> . llamada_d llamada_a CP
    (61) while -> . while_b bloque
    (70) for -> . for_a for_b bloque
    (94) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (109) classdeclare -> . CLASS_ID ID SC
    (110) llamadafuncionclase -> . ID POINT llamada
    (115) function -> . DEF function_e bloque
    (49) return -> . RETURN expresion SC
    (86) print -> . PRINT OP expresion CP SC
    (107) condicion_c -> . IF OP exp CP
    (82) llamada_d -> . llamada_c OP
    (63) while_b -> . while_a OP expresion CP
    (71) for_a -> . FOR
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE
    (81) llamada_c -> . ID
    (62) while_a -> . WHILE

    CB              reduce using rule 125 (empty -> .)
    ID              shift and go to state 42
    CLASS           shift and go to state 47
    CLASS_ID        shift and go to state 48
    DEF             shift and go to state 50
    RETURN          shift and go to state 51
    PRINT           shift and go to state 52
    IF              shift and go to state 53
    FOR             shift and go to state 56
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    WHILE           shift and go to state 57

    bloque_a                       shift and go to state 27
    estatuto                       shift and go to state 28
    empty                          shift and go to state 29
    asignacion                     shift and go to state 30
    condicion                      shift and go to state 31
    llamada                        shift and go to state 32
    while                          shift and go to state 33
    for                            shift and go to state 34
    classcreate                    shift and go to state 35
    vars                           shift and go to state 36
    classdeclare                   shift and go to state 37
    llamadafuncionclase            shift and go to state 38
    function                       shift and go to state 39
    return                         shift and go to state 40
    print                          shift and go to state 41
    condicion_c                    shift and go to state 43
    llamada_d                      shift and go to state 44
    while_b                        shift and go to state 45
    for_a                          shift and go to state 46
    tiposimple                     shift and go to state 49
    tipocompuesto                  shift and go to state 12
    llamada_c                      shift and go to state 54
    while_a                        shift and go to state 55

state 20

    (3) programa_a -> programa_b programa_a .

    OB              reduce using rule 3 (programa_a -> programa_b programa_a .)


state 21

    (7) vars -> tiposimple vars_a . SC

    SC              shift and go to state 58


state 22

    (14) vars_vect_mat -> tiposimple ID . vars_vect_mat_a SC
    (15) vars_vect_mat -> tiposimple ID . vars_vect_mat_a vars_vect_mat_a SC
    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion
    (16) vars_vect_mat_a -> . OSB exp CSB

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 60
    OSB             shift and go to state 61

    vars_vect_mat_a                shift and go to state 59

state 23

    (9) vars_a -> vars_b .
    (13) vars_c -> vars_b . COMMA

    SC              reduce using rule 9 (vars_a -> vars_b .)
    COMMA           shift and go to state 62


state 24

    (10) vars_a -> vars_c . vars_a
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_c                         shift and go to state 24
    vars_a                         shift and go to state 63
    vars_b                         shift and go to state 23

state 25

    (8) vars -> tipocompuesto vars_a . SC

    SC              shift and go to state 64


state 26

    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 60


state 27

    (33) bloque -> OB bloque_a . CB

    CB              shift and go to state 65


state 28

    (34) bloque_a -> estatuto . bloque_a
    (35) bloque_a -> estatuto .
    (34) bloque_a -> . estatuto bloque_a
    (35) bloque_a -> . estatuto
    (36) bloque_a -> . empty
    (37) estatuto -> . asignacion
    (38) estatuto -> . condicion
    (39) estatuto -> . llamada SC
    (40) estatuto -> . while
    (41) estatuto -> . for
    (42) estatuto -> . classcreate
    (43) estatuto -> . vars
    (44) estatuto -> . classdeclare
    (45) estatuto -> . llamadafuncionclase
    (46) estatuto -> . function
    (47) estatuto -> . return
    (48) estatuto -> . print
    (125) empty -> .
    (111) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (102) condicion -> . condicion_c bloque condicion_a
    (76) llamada -> . llamada_d llamada_a CP
    (61) while -> . while_b bloque
    (70) for -> . for_a for_b bloque
    (94) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (109) classdeclare -> . CLASS_ID ID SC
    (110) llamadafuncionclase -> . ID POINT llamada
    (115) function -> . DEF function_e bloque
    (49) return -> . RETURN expresion SC
    (86) print -> . PRINT OP expresion CP SC
    (107) condicion_c -> . IF OP exp CP
    (82) llamada_d -> . llamada_c OP
    (63) while_b -> . while_a OP expresion CP
    (71) for_a -> . FOR
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE
    (81) llamada_c -> . ID
    (62) while_a -> . WHILE

  ! reduce/reduce conflict for CB resolved using rule 35 (bloque_a -> estatuto .)
    CB              reduce using rule 35 (bloque_a -> estatuto .)
    ID              shift and go to state 42
    CLASS           shift and go to state 47
    CLASS_ID        shift and go to state 48
    DEF             shift and go to state 50
    RETURN          shift and go to state 51
    PRINT           shift and go to state 52
    IF              shift and go to state 53
    FOR             shift and go to state 56
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    WHILE           shift and go to state 57

  ! CB              [ reduce using rule 125 (empty -> .) ]

    estatuto                       shift and go to state 28
    bloque_a                       shift and go to state 66
    empty                          shift and go to state 29
    asignacion                     shift and go to state 30
    condicion                      shift and go to state 31
    llamada                        shift and go to state 32
    while                          shift and go to state 33
    for                            shift and go to state 34
    classcreate                    shift and go to state 35
    vars                           shift and go to state 36
    classdeclare                   shift and go to state 37
    llamadafuncionclase            shift and go to state 38
    function                       shift and go to state 39
    return                         shift and go to state 40
    print                          shift and go to state 41
    condicion_c                    shift and go to state 43
    llamada_d                      shift and go to state 44
    while_b                        shift and go to state 45
    for_a                          shift and go to state 46
    tiposimple                     shift and go to state 49
    tipocompuesto                  shift and go to state 12
    llamada_c                      shift and go to state 54
    while_a                        shift and go to state 55

state 29

    (36) bloque_a -> empty .

    CB              reduce using rule 36 (bloque_a -> empty .)


state 30

    (37) estatuto -> asignacion .

    ID              reduce using rule 37 (estatuto -> asignacion .)
    CLASS           reduce using rule 37 (estatuto -> asignacion .)
    CLASS_ID        reduce using rule 37 (estatuto -> asignacion .)
    DEF             reduce using rule 37 (estatuto -> asignacion .)
    RETURN          reduce using rule 37 (estatuto -> asignacion .)
    PRINT           reduce using rule 37 (estatuto -> asignacion .)
    IF              reduce using rule 37 (estatuto -> asignacion .)
    FOR             reduce using rule 37 (estatuto -> asignacion .)
    INT             reduce using rule 37 (estatuto -> asignacion .)
    FLOAT           reduce using rule 37 (estatuto -> asignacion .)
    CHAR            reduce using rule 37 (estatuto -> asignacion .)
    DATAFRAME       reduce using rule 37 (estatuto -> asignacion .)
    FILE            reduce using rule 37 (estatuto -> asignacion .)
    WHILE           reduce using rule 37 (estatuto -> asignacion .)
    CB              reduce using rule 37 (estatuto -> asignacion .)


state 31

    (38) estatuto -> condicion .

    ID              reduce using rule 38 (estatuto -> condicion .)
    CLASS           reduce using rule 38 (estatuto -> condicion .)
    CLASS_ID        reduce using rule 38 (estatuto -> condicion .)
    DEF             reduce using rule 38 (estatuto -> condicion .)
    RETURN          reduce using rule 38 (estatuto -> condicion .)
    PRINT           reduce using rule 38 (estatuto -> condicion .)
    IF              reduce using rule 38 (estatuto -> condicion .)
    FOR             reduce using rule 38 (estatuto -> condicion .)
    INT             reduce using rule 38 (estatuto -> condicion .)
    FLOAT           reduce using rule 38 (estatuto -> condicion .)
    CHAR            reduce using rule 38 (estatuto -> condicion .)
    DATAFRAME       reduce using rule 38 (estatuto -> condicion .)
    FILE            reduce using rule 38 (estatuto -> condicion .)
    WHILE           reduce using rule 38 (estatuto -> condicion .)
    CB              reduce using rule 38 (estatuto -> condicion .)


state 32

    (39) estatuto -> llamada . SC

    SC              shift and go to state 67


state 33

    (40) estatuto -> while .

    ID              reduce using rule 40 (estatuto -> while .)
    CLASS           reduce using rule 40 (estatuto -> while .)
    CLASS_ID        reduce using rule 40 (estatuto -> while .)
    DEF             reduce using rule 40 (estatuto -> while .)
    RETURN          reduce using rule 40 (estatuto -> while .)
    PRINT           reduce using rule 40 (estatuto -> while .)
    IF              reduce using rule 40 (estatuto -> while .)
    FOR             reduce using rule 40 (estatuto -> while .)
    INT             reduce using rule 40 (estatuto -> while .)
    FLOAT           reduce using rule 40 (estatuto -> while .)
    CHAR            reduce using rule 40 (estatuto -> while .)
    DATAFRAME       reduce using rule 40 (estatuto -> while .)
    FILE            reduce using rule 40 (estatuto -> while .)
    WHILE           reduce using rule 40 (estatuto -> while .)
    CB              reduce using rule 40 (estatuto -> while .)


state 34

    (41) estatuto -> for .

    ID              reduce using rule 41 (estatuto -> for .)
    CLASS           reduce using rule 41 (estatuto -> for .)
    CLASS_ID        reduce using rule 41 (estatuto -> for .)
    DEF             reduce using rule 41 (estatuto -> for .)
    RETURN          reduce using rule 41 (estatuto -> for .)
    PRINT           reduce using rule 41 (estatuto -> for .)
    IF              reduce using rule 41 (estatuto -> for .)
    FOR             reduce using rule 41 (estatuto -> for .)
    INT             reduce using rule 41 (estatuto -> for .)
    FLOAT           reduce using rule 41 (estatuto -> for .)
    CHAR            reduce using rule 41 (estatuto -> for .)
    DATAFRAME       reduce using rule 41 (estatuto -> for .)
    FILE            reduce using rule 41 (estatuto -> for .)
    WHILE           reduce using rule 41 (estatuto -> for .)
    CB              reduce using rule 41 (estatuto -> for .)


state 35

    (42) estatuto -> classcreate .

    ID              reduce using rule 42 (estatuto -> classcreate .)
    CLASS           reduce using rule 42 (estatuto -> classcreate .)
    CLASS_ID        reduce using rule 42 (estatuto -> classcreate .)
    DEF             reduce using rule 42 (estatuto -> classcreate .)
    RETURN          reduce using rule 42 (estatuto -> classcreate .)
    PRINT           reduce using rule 42 (estatuto -> classcreate .)
    IF              reduce using rule 42 (estatuto -> classcreate .)
    FOR             reduce using rule 42 (estatuto -> classcreate .)
    INT             reduce using rule 42 (estatuto -> classcreate .)
    FLOAT           reduce using rule 42 (estatuto -> classcreate .)
    CHAR            reduce using rule 42 (estatuto -> classcreate .)
    DATAFRAME       reduce using rule 42 (estatuto -> classcreate .)
    FILE            reduce using rule 42 (estatuto -> classcreate .)
    WHILE           reduce using rule 42 (estatuto -> classcreate .)
    CB              reduce using rule 42 (estatuto -> classcreate .)


state 36

    (43) estatuto -> vars .

    ID              reduce using rule 43 (estatuto -> vars .)
    CLASS           reduce using rule 43 (estatuto -> vars .)
    CLASS_ID        reduce using rule 43 (estatuto -> vars .)
    DEF             reduce using rule 43 (estatuto -> vars .)
    RETURN          reduce using rule 43 (estatuto -> vars .)
    PRINT           reduce using rule 43 (estatuto -> vars .)
    IF              reduce using rule 43 (estatuto -> vars .)
    FOR             reduce using rule 43 (estatuto -> vars .)
    INT             reduce using rule 43 (estatuto -> vars .)
    FLOAT           reduce using rule 43 (estatuto -> vars .)
    CHAR            reduce using rule 43 (estatuto -> vars .)
    DATAFRAME       reduce using rule 43 (estatuto -> vars .)
    FILE            reduce using rule 43 (estatuto -> vars .)
    WHILE           reduce using rule 43 (estatuto -> vars .)
    CB              reduce using rule 43 (estatuto -> vars .)


state 37

    (44) estatuto -> classdeclare .

    ID              reduce using rule 44 (estatuto -> classdeclare .)
    CLASS           reduce using rule 44 (estatuto -> classdeclare .)
    CLASS_ID        reduce using rule 44 (estatuto -> classdeclare .)
    DEF             reduce using rule 44 (estatuto -> classdeclare .)
    RETURN          reduce using rule 44 (estatuto -> classdeclare .)
    PRINT           reduce using rule 44 (estatuto -> classdeclare .)
    IF              reduce using rule 44 (estatuto -> classdeclare .)
    FOR             reduce using rule 44 (estatuto -> classdeclare .)
    INT             reduce using rule 44 (estatuto -> classdeclare .)
    FLOAT           reduce using rule 44 (estatuto -> classdeclare .)
    CHAR            reduce using rule 44 (estatuto -> classdeclare .)
    DATAFRAME       reduce using rule 44 (estatuto -> classdeclare .)
    FILE            reduce using rule 44 (estatuto -> classdeclare .)
    WHILE           reduce using rule 44 (estatuto -> classdeclare .)
    CB              reduce using rule 44 (estatuto -> classdeclare .)


state 38

    (45) estatuto -> llamadafuncionclase .

    ID              reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CLASS           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CLASS_ID        reduce using rule 45 (estatuto -> llamadafuncionclase .)
    DEF             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    RETURN          reduce using rule 45 (estatuto -> llamadafuncionclase .)
    PRINT           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    IF              reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FOR             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    INT             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FLOAT           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CHAR            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    DATAFRAME       reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FILE            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    WHILE           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CB              reduce using rule 45 (estatuto -> llamadafuncionclase .)


state 39

    (46) estatuto -> function .

    ID              reduce using rule 46 (estatuto -> function .)
    CLASS           reduce using rule 46 (estatuto -> function .)
    CLASS_ID        reduce using rule 46 (estatuto -> function .)
    DEF             reduce using rule 46 (estatuto -> function .)
    RETURN          reduce using rule 46 (estatuto -> function .)
    PRINT           reduce using rule 46 (estatuto -> function .)
    IF              reduce using rule 46 (estatuto -> function .)
    FOR             reduce using rule 46 (estatuto -> function .)
    INT             reduce using rule 46 (estatuto -> function .)
    FLOAT           reduce using rule 46 (estatuto -> function .)
    CHAR            reduce using rule 46 (estatuto -> function .)
    DATAFRAME       reduce using rule 46 (estatuto -> function .)
    FILE            reduce using rule 46 (estatuto -> function .)
    WHILE           reduce using rule 46 (estatuto -> function .)
    CB              reduce using rule 46 (estatuto -> function .)


state 40

    (47) estatuto -> return .

    ID              reduce using rule 47 (estatuto -> return .)
    CLASS           reduce using rule 47 (estatuto -> return .)
    CLASS_ID        reduce using rule 47 (estatuto -> return .)
    DEF             reduce using rule 47 (estatuto -> return .)
    RETURN          reduce using rule 47 (estatuto -> return .)
    PRINT           reduce using rule 47 (estatuto -> return .)
    IF              reduce using rule 47 (estatuto -> return .)
    FOR             reduce using rule 47 (estatuto -> return .)
    INT             reduce using rule 47 (estatuto -> return .)
    FLOAT           reduce using rule 47 (estatuto -> return .)
    CHAR            reduce using rule 47 (estatuto -> return .)
    DATAFRAME       reduce using rule 47 (estatuto -> return .)
    FILE            reduce using rule 47 (estatuto -> return .)
    WHILE           reduce using rule 47 (estatuto -> return .)
    CB              reduce using rule 47 (estatuto -> return .)


state 41

    (48) estatuto -> print .

    ID              reduce using rule 48 (estatuto -> print .)
    CLASS           reduce using rule 48 (estatuto -> print .)
    CLASS_ID        reduce using rule 48 (estatuto -> print .)
    DEF             reduce using rule 48 (estatuto -> print .)
    RETURN          reduce using rule 48 (estatuto -> print .)
    PRINT           reduce using rule 48 (estatuto -> print .)
    IF              reduce using rule 48 (estatuto -> print .)
    FOR             reduce using rule 48 (estatuto -> print .)
    INT             reduce using rule 48 (estatuto -> print .)
    FLOAT           reduce using rule 48 (estatuto -> print .)
    CHAR            reduce using rule 48 (estatuto -> print .)
    DATAFRAME       reduce using rule 48 (estatuto -> print .)
    FILE            reduce using rule 48 (estatuto -> print .)
    WHILE           reduce using rule 48 (estatuto -> print .)
    CB              reduce using rule 48 (estatuto -> print .)


state 42

    (111) asignacion -> ID . asignacion_a asignacion_a EQ expresion SC
    (110) llamadafuncionclase -> ID . POINT llamada
    (31) tipocompuesto -> ID .
    (81) llamada_c -> ID .
    (112) asignacion_a -> . OSB exp CSB
    (113) asignacion_a -> . empty
    (125) empty -> .

  ! shift/reduce conflict for OSB resolved as shift
    POINT           shift and go to state 69
    ID              reduce using rule 31 (tipocompuesto -> ID .)
    OP              reduce using rule 81 (llamada_c -> ID .)
    OSB             shift and go to state 70
    EQ              reduce using rule 125 (empty -> .)

  ! OSB             [ reduce using rule 125 (empty -> .) ]

    asignacion_a                   shift and go to state 68
    empty                          shift and go to state 71

state 43

    (102) condicion -> condicion_c . bloque condicion_a
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 72

state 44

    (76) llamada -> llamada_d . llamada_a CP
    (77) llamada_a -> . llamada_e llamada_b
    (78) llamada_a -> . llamada_b
    (83) llamada_e -> . expresion
    (84) llamada_e -> . CTE_STRING
    (79) llamada_b -> . llamada_f llamada_a
    (80) llamada_b -> . empty
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (85) llamada_f -> . COMMA
    (125) empty -> .
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    CTE_STRING      shift and go to state 77
    COMMA           shift and go to state 81
    CP              reduce using rule 125 (empty -> .)
    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    llamada_d                      shift and go to state 44
    llamada_a                      shift and go to state 73
    llamada_e                      shift and go to state 74
    llamada_b                      shift and go to state 75
    expresion                      shift and go to state 76
    llamada_f                      shift and go to state 78
    empty                          shift and go to state 79
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_c                      shift and go to state 54

state 45

    (61) while -> while_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 92

state 46

    (70) for -> for_a . for_b bloque
    (72) for_b -> . for_e asignacionsencilla CP
    (75) for_e -> . for_d SC
    (74) for_d -> . for_c expresion
    (73) for_c -> . OP asignacionsencilla SC

    OP              shift and go to state 97

    for_b                          shift and go to state 93
    for_e                          shift and go to state 94
    for_d                          shift and go to state 95
    for_c                          shift and go to state 96

state 47

    (94) classcreate -> CLASS . CLASS_ID OB classcreate_a function classcreate_c CB

    CLASS_ID        shift and go to state 98


state 48

    (109) classdeclare -> CLASS_ID . ID SC

    ID              shift and go to state 99


state 49

    (7) vars -> tiposimple . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 50

    (115) function -> DEF . function_e bloque
    (123) function_e -> . function_c OP function_b CP vars
    (124) function_e -> . function_c OP function_b CP empty
    (121) function_c -> . function_a ID
    (116) function_a -> . VOID
    (117) function_a -> . tiposimple
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    VOID            shift and go to state 103
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function_e                     shift and go to state 100
    function_c                     shift and go to state 101
    function_a                     shift and go to state 102
    tiposimple                     shift and go to state 104

state 51

    (49) return -> RETURN . expresion SC
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 105
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 52

    (86) print -> PRINT . OP expresion CP SC

    OP              shift and go to state 106


state 53

    (107) condicion_c -> IF . OP exp CP

    OP              shift and go to state 107


state 54

    (82) llamada_d -> llamada_c . OP

    OP              shift and go to state 108


state 55

    (63) while_b -> while_a . OP expresion CP

    OP              shift and go to state 109


state 56

    (71) for_a -> FOR .

    OP              reduce using rule 71 (for_a -> FOR .)


state 57

    (62) while_a -> WHILE .

    OP              reduce using rule 62 (while_a -> WHILE .)


state 58

    (7) vars -> tiposimple vars_a SC .

    INT             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FLOAT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CHAR            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DATAFRAME       reduce using rule 7 (vars -> tiposimple vars_a SC .)
    ID              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FILE            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    OB              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS_ID        reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DEF             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    RETURN          reduce using rule 7 (vars -> tiposimple vars_a SC .)
    PRINT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    IF              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FOR             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    WHILE           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CB              reduce using rule 7 (vars -> tiposimple vars_a SC .)


state 59

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a . SC
    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a . vars_vect_mat_a SC
    (16) vars_vect_mat_a -> . OSB exp CSB

    SC              shift and go to state 111
    OSB             shift and go to state 61

    vars_vect_mat_a                shift and go to state 110

state 60

    (12) vars_b -> ID EQ . expresion
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 112
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 61

    (16) vars_vect_mat_a -> OSB . exp CSB
    (64) exp -> . and_exp
    (65) exp -> . exp_b exp
    (67) and_exp -> . expresion
    (68) and_exp -> . and_exp_b and_exp
    (66) exp_b -> . and_exp OR
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (69) and_exp_b -> . expresion AND
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp                            shift and go to state 113
    and_exp                        shift and go to state 114
    exp_b                          shift and go to state 115
    expresion                      shift and go to state 116
    and_exp_b                      shift and go to state 117
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 62

    (13) vars_c -> vars_b COMMA .

    ID              reduce using rule 13 (vars_c -> vars_b COMMA .)


state 63

    (10) vars_a -> vars_c vars_a .

    SC              reduce using rule 10 (vars_a -> vars_c vars_a .)


state 64

    (8) vars -> tipocompuesto vars_a SC .

    INT             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FLOAT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CHAR            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DATAFRAME       reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    ID              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FILE            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    OB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS_ID        reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DEF             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    RETURN          reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    PRINT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    IF              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FOR             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    WHILE           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)


state 65

    (33) bloque -> OB bloque_a CB .

    $end            reduce using rule 33 (bloque -> OB bloque_a CB .)
    ELSE            reduce using rule 33 (bloque -> OB bloque_a CB .)
    ID              reduce using rule 33 (bloque -> OB bloque_a CB .)
    CLASS           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CLASS_ID        reduce using rule 33 (bloque -> OB bloque_a CB .)
    DEF             reduce using rule 33 (bloque -> OB bloque_a CB .)
    RETURN          reduce using rule 33 (bloque -> OB bloque_a CB .)
    PRINT           reduce using rule 33 (bloque -> OB bloque_a CB .)
    IF              reduce using rule 33 (bloque -> OB bloque_a CB .)
    FOR             reduce using rule 33 (bloque -> OB bloque_a CB .)
    INT             reduce using rule 33 (bloque -> OB bloque_a CB .)
    FLOAT           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CHAR            reduce using rule 33 (bloque -> OB bloque_a CB .)
    DATAFRAME       reduce using rule 33 (bloque -> OB bloque_a CB .)
    FILE            reduce using rule 33 (bloque -> OB bloque_a CB .)
    WHILE           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CB              reduce using rule 33 (bloque -> OB bloque_a CB .)
    OB              reduce using rule 33 (bloque -> OB bloque_a CB .)


state 66

    (34) bloque_a -> estatuto bloque_a .

    CB              reduce using rule 34 (bloque_a -> estatuto bloque_a .)


state 67

    (39) estatuto -> llamada SC .

    ID              reduce using rule 39 (estatuto -> llamada SC .)
    CLASS           reduce using rule 39 (estatuto -> llamada SC .)
    CLASS_ID        reduce using rule 39 (estatuto -> llamada SC .)
    DEF             reduce using rule 39 (estatuto -> llamada SC .)
    RETURN          reduce using rule 39 (estatuto -> llamada SC .)
    PRINT           reduce using rule 39 (estatuto -> llamada SC .)
    IF              reduce using rule 39 (estatuto -> llamada SC .)
    FOR             reduce using rule 39 (estatuto -> llamada SC .)
    INT             reduce using rule 39 (estatuto -> llamada SC .)
    FLOAT           reduce using rule 39 (estatuto -> llamada SC .)
    CHAR            reduce using rule 39 (estatuto -> llamada SC .)
    DATAFRAME       reduce using rule 39 (estatuto -> llamada SC .)
    FILE            reduce using rule 39 (estatuto -> llamada SC .)
    WHILE           reduce using rule 39 (estatuto -> llamada SC .)
    CB              reduce using rule 39 (estatuto -> llamada SC .)


state 68

    (111) asignacion -> ID asignacion_a . asignacion_a EQ expresion SC
    (112) asignacion_a -> . OSB exp CSB
    (113) asignacion_a -> . empty
    (125) empty -> .

    OSB             shift and go to state 70
    EQ              reduce using rule 125 (empty -> .)

    asignacion_a                   shift and go to state 118
    empty                          shift and go to state 71

state 69

    (110) llamadafuncionclase -> ID POINT . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    ID              shift and go to state 119

    llamada                        shift and go to state 120
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 70

    (112) asignacion_a -> OSB . exp CSB
    (64) exp -> . and_exp
    (65) exp -> . exp_b exp
    (67) and_exp -> . expresion
    (68) and_exp -> . and_exp_b and_exp
    (66) exp_b -> . and_exp OR
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (69) and_exp_b -> . expresion AND
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp                            shift and go to state 121
    and_exp                        shift and go to state 114
    exp_b                          shift and go to state 115
    expresion                      shift and go to state 116
    and_exp_b                      shift and go to state 117
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 71

    (113) asignacion_a -> empty .

    OSB             reduce using rule 113 (asignacion_a -> empty .)
    EQ              reduce using rule 113 (asignacion_a -> empty .)


state 72

    (102) condicion -> condicion_c bloque . condicion_a
    (103) condicion_a -> . condicion_d condicion_b bloque
    (104) condicion_a -> . empty
    (108) condicion_d -> . ELSE
    (125) empty -> .

    ELSE            shift and go to state 125
    ID              reduce using rule 125 (empty -> .)
    CLASS           reduce using rule 125 (empty -> .)
    CLASS_ID        reduce using rule 125 (empty -> .)
    DEF             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    INT             reduce using rule 125 (empty -> .)
    FLOAT           reduce using rule 125 (empty -> .)
    CHAR            reduce using rule 125 (empty -> .)
    DATAFRAME       reduce using rule 125 (empty -> .)
    FILE            reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)
    CB              reduce using rule 125 (empty -> .)
    OB              reduce using rule 125 (empty -> .)

    condicion_a                    shift and go to state 122
    condicion_d                    shift and go to state 123
    empty                          shift and go to state 124

state 73

    (76) llamada -> llamada_d llamada_a . CP

    CP              shift and go to state 126


state 74

    (77) llamada_a -> llamada_e . llamada_b
    (79) llamada_b -> . llamada_f llamada_a
    (80) llamada_b -> . empty
    (85) llamada_f -> . COMMA
    (125) empty -> .

    COMMA           shift and go to state 81
    CP              reduce using rule 125 (empty -> .)

    llamada_b                      shift and go to state 127
    llamada_f                      shift and go to state 78
    empty                          shift and go to state 79

state 75

    (78) llamada_a -> llamada_b .

    CP              reduce using rule 78 (llamada_a -> llamada_b .)


state 76

    (83) llamada_e -> expresion .

    COMMA           reduce using rule 83 (llamada_e -> expresion .)
    CP              reduce using rule 83 (llamada_e -> expresion .)


state 77

    (84) llamada_e -> CTE_STRING .

    COMMA           reduce using rule 84 (llamada_e -> CTE_STRING .)
    CP              reduce using rule 84 (llamada_e -> CTE_STRING .)


state 78

    (79) llamada_b -> llamada_f . llamada_a
    (77) llamada_a -> . llamada_e llamada_b
    (78) llamada_a -> . llamada_b
    (83) llamada_e -> . expresion
    (84) llamada_e -> . CTE_STRING
    (79) llamada_b -> . llamada_f llamada_a
    (80) llamada_b -> . empty
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (85) llamada_f -> . COMMA
    (125) empty -> .
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    CTE_STRING      shift and go to state 77
    COMMA           shift and go to state 81
    CP              reduce using rule 125 (empty -> .)
    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    llamada_f                      shift and go to state 78
    llamada_a                      shift and go to state 128
    llamada_e                      shift and go to state 74
    llamada_b                      shift and go to state 75
    expresion                      shift and go to state 76
    empty                          shift and go to state 79
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 79

    (80) llamada_b -> empty .

    CP              reduce using rule 80 (llamada_b -> empty .)


state 80

    (50) expresion -> m_exp .
    (51) expresion -> m_exp . expresion_a m_exp
    (52) expresion_a -> . LT
    (53) expresion_a -> . GT
    (54) expresion_a -> . NE
    (55) expresion_a -> . EQEQ
    (56) expresion_a -> . LE
    (57) expresion_a -> . GE

    COMMA           reduce using rule 50 (expresion -> m_exp .)
    CP              reduce using rule 50 (expresion -> m_exp .)
    SC              reduce using rule 50 (expresion -> m_exp .)
    AND             reduce using rule 50 (expresion -> m_exp .)
    OR              reduce using rule 50 (expresion -> m_exp .)
    CSB             reduce using rule 50 (expresion -> m_exp .)
    LT              shift and go to state 130
    GT              shift and go to state 131
    NE              shift and go to state 132
    EQEQ            shift and go to state 133
    LE              shift and go to state 134
    GE              shift and go to state 135

    expresion_a                    shift and go to state 129

state 81

    (85) llamada_f -> COMMA .

    CTE_STRING      reduce using rule 85 (llamada_f -> COMMA .)
    COMMA           reduce using rule 85 (llamada_f -> COMMA .)
    OP              reduce using rule 85 (llamada_f -> COMMA .)
    CTE_I           reduce using rule 85 (llamada_f -> COMMA .)
    CTE_F           reduce using rule 85 (llamada_f -> COMMA .)
    CTE_CHAR        reduce using rule 85 (llamada_f -> COMMA .)
    ID              reduce using rule 85 (llamada_f -> COMMA .)
    CP              reduce using rule 85 (llamada_f -> COMMA .)


state 82

    (17) m_exp -> m_exp_b .
    (18) m_exp -> m_exp_b . m_exp_a m_exp
    (19) m_exp_a -> . ADD
    (20) m_exp_a -> . SUB

    LT              reduce using rule 17 (m_exp -> m_exp_b .)
    GT              reduce using rule 17 (m_exp -> m_exp_b .)
    NE              reduce using rule 17 (m_exp -> m_exp_b .)
    EQEQ            reduce using rule 17 (m_exp -> m_exp_b .)
    LE              reduce using rule 17 (m_exp -> m_exp_b .)
    GE              reduce using rule 17 (m_exp -> m_exp_b .)
    COMMA           reduce using rule 17 (m_exp -> m_exp_b .)
    CP              reduce using rule 17 (m_exp -> m_exp_b .)
    SC              reduce using rule 17 (m_exp -> m_exp_b .)
    AND             reduce using rule 17 (m_exp -> m_exp_b .)
    OR              reduce using rule 17 (m_exp -> m_exp_b .)
    CSB             reduce using rule 17 (m_exp -> m_exp_b .)
    ADD             shift and go to state 137
    SUB             shift and go to state 138

    m_exp_a                        shift and go to state 136

state 83

    (21) m_exp_b -> term .

    ADD             reduce using rule 21 (m_exp_b -> term .)
    SUB             reduce using rule 21 (m_exp_b -> term .)
    LT              reduce using rule 21 (m_exp_b -> term .)
    GT              reduce using rule 21 (m_exp_b -> term .)
    NE              reduce using rule 21 (m_exp_b -> term .)
    EQEQ            reduce using rule 21 (m_exp_b -> term .)
    LE              reduce using rule 21 (m_exp_b -> term .)
    GE              reduce using rule 21 (m_exp_b -> term .)
    COMMA           reduce using rule 21 (m_exp_b -> term .)
    CP              reduce using rule 21 (m_exp_b -> term .)
    SC              reduce using rule 21 (m_exp_b -> term .)
    AND             reduce using rule 21 (m_exp_b -> term .)
    OR              reduce using rule 21 (m_exp_b -> term .)
    CSB             reduce using rule 21 (m_exp_b -> term .)


state 84

    (22) term -> term_b .
    (23) term -> term_b . term_a term
    (24) term_a -> . MULT
    (25) term_a -> . DIV

    ADD             reduce using rule 22 (term -> term_b .)
    SUB             reduce using rule 22 (term -> term_b .)
    LT              reduce using rule 22 (term -> term_b .)
    GT              reduce using rule 22 (term -> term_b .)
    NE              reduce using rule 22 (term -> term_b .)
    EQEQ            reduce using rule 22 (term -> term_b .)
    LE              reduce using rule 22 (term -> term_b .)
    GE              reduce using rule 22 (term -> term_b .)
    COMMA           reduce using rule 22 (term -> term_b .)
    CP              reduce using rule 22 (term -> term_b .)
    SC              reduce using rule 22 (term -> term_b .)
    AND             reduce using rule 22 (term -> term_b .)
    OR              reduce using rule 22 (term -> term_b .)
    CSB             reduce using rule 22 (term -> term_b .)
    MULT            shift and go to state 140
    DIV             shift and go to state 141

    term_a                         shift and go to state 139

state 85

    (26) term_b -> fact .

    MULT            reduce using rule 26 (term_b -> fact .)
    DIV             reduce using rule 26 (term_b -> fact .)
    ADD             reduce using rule 26 (term_b -> fact .)
    SUB             reduce using rule 26 (term_b -> fact .)
    LT              reduce using rule 26 (term_b -> fact .)
    GT              reduce using rule 26 (term_b -> fact .)
    NE              reduce using rule 26 (term_b -> fact .)
    EQEQ            reduce using rule 26 (term_b -> fact .)
    LE              reduce using rule 26 (term_b -> fact .)
    GE              reduce using rule 26 (term_b -> fact .)
    COMMA           reduce using rule 26 (term_b -> fact .)
    CP              reduce using rule 26 (term_b -> fact .)
    SC              reduce using rule 26 (term_b -> fact .)
    AND             reduce using rule 26 (term_b -> fact .)
    OR              reduce using rule 26 (term_b -> fact .)
    CSB             reduce using rule 26 (term_b -> fact .)


state 86

    (87) fact -> OP . fact_a exp CP
    (93) fact_a -> . empty
    (125) empty -> .

    OP              reduce using rule 125 (empty -> .)
    CTE_I           reduce using rule 125 (empty -> .)
    CTE_F           reduce using rule 125 (empty -> .)
    CTE_CHAR        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)

    fact_a                         shift and go to state 142
    empty                          shift and go to state 143

state 87

    (88) fact -> CTE_I .

    MULT            reduce using rule 88 (fact -> CTE_I .)
    DIV             reduce using rule 88 (fact -> CTE_I .)
    ADD             reduce using rule 88 (fact -> CTE_I .)
    SUB             reduce using rule 88 (fact -> CTE_I .)
    LT              reduce using rule 88 (fact -> CTE_I .)
    GT              reduce using rule 88 (fact -> CTE_I .)
    NE              reduce using rule 88 (fact -> CTE_I .)
    EQEQ            reduce using rule 88 (fact -> CTE_I .)
    LE              reduce using rule 88 (fact -> CTE_I .)
    GE              reduce using rule 88 (fact -> CTE_I .)
    COMMA           reduce using rule 88 (fact -> CTE_I .)
    CP              reduce using rule 88 (fact -> CTE_I .)
    SC              reduce using rule 88 (fact -> CTE_I .)
    AND             reduce using rule 88 (fact -> CTE_I .)
    OR              reduce using rule 88 (fact -> CTE_I .)
    CSB             reduce using rule 88 (fact -> CTE_I .)


state 88

    (89) fact -> CTE_F .

    MULT            reduce using rule 89 (fact -> CTE_F .)
    DIV             reduce using rule 89 (fact -> CTE_F .)
    ADD             reduce using rule 89 (fact -> CTE_F .)
    SUB             reduce using rule 89 (fact -> CTE_F .)
    LT              reduce using rule 89 (fact -> CTE_F .)
    GT              reduce using rule 89 (fact -> CTE_F .)
    NE              reduce using rule 89 (fact -> CTE_F .)
    EQEQ            reduce using rule 89 (fact -> CTE_F .)
    LE              reduce using rule 89 (fact -> CTE_F .)
    GE              reduce using rule 89 (fact -> CTE_F .)
    COMMA           reduce using rule 89 (fact -> CTE_F .)
    CP              reduce using rule 89 (fact -> CTE_F .)
    SC              reduce using rule 89 (fact -> CTE_F .)
    AND             reduce using rule 89 (fact -> CTE_F .)
    OR              reduce using rule 89 (fact -> CTE_F .)
    CSB             reduce using rule 89 (fact -> CTE_F .)


state 89

    (90) fact -> CTE_CHAR .

    MULT            reduce using rule 90 (fact -> CTE_CHAR .)
    DIV             reduce using rule 90 (fact -> CTE_CHAR .)
    ADD             reduce using rule 90 (fact -> CTE_CHAR .)
    SUB             reduce using rule 90 (fact -> CTE_CHAR .)
    LT              reduce using rule 90 (fact -> CTE_CHAR .)
    GT              reduce using rule 90 (fact -> CTE_CHAR .)
    NE              reduce using rule 90 (fact -> CTE_CHAR .)
    EQEQ            reduce using rule 90 (fact -> CTE_CHAR .)
    LE              reduce using rule 90 (fact -> CTE_CHAR .)
    GE              reduce using rule 90 (fact -> CTE_CHAR .)
    COMMA           reduce using rule 90 (fact -> CTE_CHAR .)
    CP              reduce using rule 90 (fact -> CTE_CHAR .)
    SC              reduce using rule 90 (fact -> CTE_CHAR .)
    AND             reduce using rule 90 (fact -> CTE_CHAR .)
    OR              reduce using rule 90 (fact -> CTE_CHAR .)
    CSB             reduce using rule 90 (fact -> CTE_CHAR .)


state 90

    (91) fact -> ID .
    (81) llamada_c -> ID .

    MULT            reduce using rule 91 (fact -> ID .)
    DIV             reduce using rule 91 (fact -> ID .)
    ADD             reduce using rule 91 (fact -> ID .)
    SUB             reduce using rule 91 (fact -> ID .)
    LT              reduce using rule 91 (fact -> ID .)
    GT              reduce using rule 91 (fact -> ID .)
    NE              reduce using rule 91 (fact -> ID .)
    EQEQ            reduce using rule 91 (fact -> ID .)
    LE              reduce using rule 91 (fact -> ID .)
    GE              reduce using rule 91 (fact -> ID .)
    COMMA           reduce using rule 91 (fact -> ID .)
    CP              reduce using rule 91 (fact -> ID .)
    SC              reduce using rule 91 (fact -> ID .)
    AND             reduce using rule 91 (fact -> ID .)
    OR              reduce using rule 91 (fact -> ID .)
    CSB             reduce using rule 91 (fact -> ID .)
    OP              reduce using rule 81 (llamada_c -> ID .)


state 91

    (92) fact -> llamada .

    MULT            reduce using rule 92 (fact -> llamada .)
    DIV             reduce using rule 92 (fact -> llamada .)
    ADD             reduce using rule 92 (fact -> llamada .)
    SUB             reduce using rule 92 (fact -> llamada .)
    LT              reduce using rule 92 (fact -> llamada .)
    GT              reduce using rule 92 (fact -> llamada .)
    NE              reduce using rule 92 (fact -> llamada .)
    EQEQ            reduce using rule 92 (fact -> llamada .)
    LE              reduce using rule 92 (fact -> llamada .)
    GE              reduce using rule 92 (fact -> llamada .)
    COMMA           reduce using rule 92 (fact -> llamada .)
    CP              reduce using rule 92 (fact -> llamada .)
    SC              reduce using rule 92 (fact -> llamada .)
    AND             reduce using rule 92 (fact -> llamada .)
    OR              reduce using rule 92 (fact -> llamada .)
    CSB             reduce using rule 92 (fact -> llamada .)


state 92

    (61) while -> while_b bloque .

    ID              reduce using rule 61 (while -> while_b bloque .)
    CLASS           reduce using rule 61 (while -> while_b bloque .)
    CLASS_ID        reduce using rule 61 (while -> while_b bloque .)
    DEF             reduce using rule 61 (while -> while_b bloque .)
    RETURN          reduce using rule 61 (while -> while_b bloque .)
    PRINT           reduce using rule 61 (while -> while_b bloque .)
    IF              reduce using rule 61 (while -> while_b bloque .)
    FOR             reduce using rule 61 (while -> while_b bloque .)
    INT             reduce using rule 61 (while -> while_b bloque .)
    FLOAT           reduce using rule 61 (while -> while_b bloque .)
    CHAR            reduce using rule 61 (while -> while_b bloque .)
    DATAFRAME       reduce using rule 61 (while -> while_b bloque .)
    FILE            reduce using rule 61 (while -> while_b bloque .)
    WHILE           reduce using rule 61 (while -> while_b bloque .)
    CB              reduce using rule 61 (while -> while_b bloque .)


state 93

    (70) for -> for_a for_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 144

state 94

    (72) for_b -> for_e . asignacionsencilla CP
    (114) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 146

    asignacionsencilla             shift and go to state 145

state 95

    (75) for_e -> for_d . SC

    SC              shift and go to state 147


state 96

    (74) for_d -> for_c . expresion
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 148
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 97

    (73) for_c -> OP . asignacionsencilla SC
    (114) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 146

    asignacionsencilla             shift and go to state 149

state 98

    (94) classcreate -> CLASS CLASS_ID . OB classcreate_a function classcreate_c CB

    OB              shift and go to state 150


state 99

    (109) classdeclare -> CLASS_ID ID . SC

    SC              shift and go to state 151


state 100

    (115) function -> DEF function_e . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 152

state 101

    (123) function_e -> function_c . OP function_b CP vars
    (124) function_e -> function_c . OP function_b CP empty

    OP              shift and go to state 153


state 102

    (121) function_c -> function_a . ID

    ID              shift and go to state 154


state 103

    (116) function_a -> VOID .

    ID              reduce using rule 116 (function_a -> VOID .)


state 104

    (117) function_a -> tiposimple .

    ID              reduce using rule 117 (function_a -> tiposimple .)


state 105

    (49) return -> RETURN expresion . SC

    SC              shift and go to state 155


state 106

    (86) print -> PRINT OP . expresion CP SC
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 156
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 107

    (107) condicion_c -> IF OP . exp CP
    (64) exp -> . and_exp
    (65) exp -> . exp_b exp
    (67) and_exp -> . expresion
    (68) and_exp -> . and_exp_b and_exp
    (66) exp_b -> . and_exp OR
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (69) and_exp_b -> . expresion AND
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp                            shift and go to state 157
    and_exp                        shift and go to state 114
    exp_b                          shift and go to state 115
    expresion                      shift and go to state 116
    and_exp_b                      shift and go to state 117
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 108

    (82) llamada_d -> llamada_c OP .

    CTE_STRING      reduce using rule 82 (llamada_d -> llamada_c OP .)
    COMMA           reduce using rule 82 (llamada_d -> llamada_c OP .)
    OP              reduce using rule 82 (llamada_d -> llamada_c OP .)
    CTE_I           reduce using rule 82 (llamada_d -> llamada_c OP .)
    CTE_F           reduce using rule 82 (llamada_d -> llamada_c OP .)
    CTE_CHAR        reduce using rule 82 (llamada_d -> llamada_c OP .)
    ID              reduce using rule 82 (llamada_d -> llamada_c OP .)
    CP              reduce using rule 82 (llamada_d -> llamada_c OP .)


state 109

    (63) while_b -> while_a OP . expresion CP
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 158
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 110

    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a . SC

    SC              shift and go to state 159


state 111

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .

    INT             reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FLOAT           reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    CHAR            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    ID              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FILE            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    OB              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    DEF             reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)


state 112

    (12) vars_b -> ID EQ expresion .

    COMMA           reduce using rule 12 (vars_b -> ID EQ expresion .)
    SC              reduce using rule 12 (vars_b -> ID EQ expresion .)


state 113

    (16) vars_vect_mat_a -> OSB exp . CSB

    CSB             shift and go to state 160


state 114

    (64) exp -> and_exp .
    (66) exp_b -> and_exp . OR

    CSB             reduce using rule 64 (exp -> and_exp .)
    CP              reduce using rule 64 (exp -> and_exp .)
    OR              shift and go to state 161


state 115

    (65) exp -> exp_b . exp
    (64) exp -> . and_exp
    (65) exp -> . exp_b exp
    (67) and_exp -> . expresion
    (68) and_exp -> . and_exp_b and_exp
    (66) exp_b -> . and_exp OR
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (69) and_exp_b -> . expresion AND
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp_b                          shift and go to state 115
    exp                            shift and go to state 162
    and_exp                        shift and go to state 114
    expresion                      shift and go to state 116
    and_exp_b                      shift and go to state 117
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 116

    (67) and_exp -> expresion .
    (69) and_exp_b -> expresion . AND

    OR              reduce using rule 67 (and_exp -> expresion .)
    CSB             reduce using rule 67 (and_exp -> expresion .)
    CP              reduce using rule 67 (and_exp -> expresion .)
    AND             shift and go to state 163


state 117

    (68) and_exp -> and_exp_b . and_exp
    (67) and_exp -> . expresion
    (68) and_exp -> . and_exp_b and_exp
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (69) and_exp_b -> . expresion AND
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    and_exp_b                      shift and go to state 117
    and_exp                        shift and go to state 164
    expresion                      shift and go to state 116
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 118

    (111) asignacion -> ID asignacion_a asignacion_a . EQ expresion SC

    EQ              shift and go to state 165


state 119

    (81) llamada_c -> ID .

    OP              reduce using rule 81 (llamada_c -> ID .)


state 120

    (110) llamadafuncionclase -> ID POINT llamada .

    ID              reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    CLASS           reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    CLASS_ID        reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    DEF             reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    RETURN          reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    PRINT           reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    IF              reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    FOR             reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    INT             reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    FLOAT           reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    CHAR            reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    DATAFRAME       reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    FILE            reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    WHILE           reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)
    CB              reduce using rule 110 (llamadafuncionclase -> ID POINT llamada .)


state 121

    (112) asignacion_a -> OSB exp . CSB

    CSB             shift and go to state 166


state 122

    (102) condicion -> condicion_c bloque condicion_a .

    ID              reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    CLASS           reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    CLASS_ID        reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    DEF             reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    RETURN          reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    PRINT           reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    IF              reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    FOR             reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    INT             reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    FLOAT           reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    CHAR            reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    DATAFRAME       reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    FILE            reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    WHILE           reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    CB              reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)
    OB              reduce using rule 102 (condicion -> condicion_c bloque condicion_a .)


state 123

    (103) condicion_a -> condicion_d . condicion_b bloque
    (105) condicion_b -> . condicion
    (106) condicion_b -> . empty
    (102) condicion -> . condicion_c bloque condicion_a
    (125) empty -> .
    (107) condicion_c -> . IF OP exp CP

    OB              reduce using rule 125 (empty -> .)
    IF              shift and go to state 53

    condicion_b                    shift and go to state 167
    condicion                      shift and go to state 168
    empty                          shift and go to state 169
    condicion_c                    shift and go to state 43

state 124

    (104) condicion_a -> empty .

    ID              reduce using rule 104 (condicion_a -> empty .)
    CLASS           reduce using rule 104 (condicion_a -> empty .)
    CLASS_ID        reduce using rule 104 (condicion_a -> empty .)
    DEF             reduce using rule 104 (condicion_a -> empty .)
    RETURN          reduce using rule 104 (condicion_a -> empty .)
    PRINT           reduce using rule 104 (condicion_a -> empty .)
    IF              reduce using rule 104 (condicion_a -> empty .)
    FOR             reduce using rule 104 (condicion_a -> empty .)
    INT             reduce using rule 104 (condicion_a -> empty .)
    FLOAT           reduce using rule 104 (condicion_a -> empty .)
    CHAR            reduce using rule 104 (condicion_a -> empty .)
    DATAFRAME       reduce using rule 104 (condicion_a -> empty .)
    FILE            reduce using rule 104 (condicion_a -> empty .)
    WHILE           reduce using rule 104 (condicion_a -> empty .)
    CB              reduce using rule 104 (condicion_a -> empty .)
    OB              reduce using rule 104 (condicion_a -> empty .)


state 125

    (108) condicion_d -> ELSE .

    IF              reduce using rule 108 (condicion_d -> ELSE .)
    OB              reduce using rule 108 (condicion_d -> ELSE .)


state 126

    (76) llamada -> llamada_d llamada_a CP .

    SC              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    MULT            reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    DIV             reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    ADD             reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    SUB             reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    LT              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    GT              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    NE              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    EQEQ            reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    LE              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    GE              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    COMMA           reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    CP              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    AND             reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    OR              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    CSB             reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    ID              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    CLASS           reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    CLASS_ID        reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    DEF             reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    RETURN          reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    PRINT           reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    IF              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    FOR             reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    INT             reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    FLOAT           reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    CHAR            reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    DATAFRAME       reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    FILE            reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    WHILE           reduce using rule 76 (llamada -> llamada_d llamada_a CP .)
    CB              reduce using rule 76 (llamada -> llamada_d llamada_a CP .)


state 127

    (77) llamada_a -> llamada_e llamada_b .

    CP              reduce using rule 77 (llamada_a -> llamada_e llamada_b .)


state 128

    (79) llamada_b -> llamada_f llamada_a .

    CP              reduce using rule 79 (llamada_b -> llamada_f llamada_a .)


state 129

    (51) expresion -> m_exp expresion_a . m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    m_exp                          shift and go to state 170
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 130

    (52) expresion_a -> LT .

    OP              reduce using rule 52 (expresion_a -> LT .)
    CTE_I           reduce using rule 52 (expresion_a -> LT .)
    CTE_F           reduce using rule 52 (expresion_a -> LT .)
    CTE_CHAR        reduce using rule 52 (expresion_a -> LT .)
    ID              reduce using rule 52 (expresion_a -> LT .)


state 131

    (53) expresion_a -> GT .

    OP              reduce using rule 53 (expresion_a -> GT .)
    CTE_I           reduce using rule 53 (expresion_a -> GT .)
    CTE_F           reduce using rule 53 (expresion_a -> GT .)
    CTE_CHAR        reduce using rule 53 (expresion_a -> GT .)
    ID              reduce using rule 53 (expresion_a -> GT .)


state 132

    (54) expresion_a -> NE .

    OP              reduce using rule 54 (expresion_a -> NE .)
    CTE_I           reduce using rule 54 (expresion_a -> NE .)
    CTE_F           reduce using rule 54 (expresion_a -> NE .)
    CTE_CHAR        reduce using rule 54 (expresion_a -> NE .)
    ID              reduce using rule 54 (expresion_a -> NE .)


state 133

    (55) expresion_a -> EQEQ .

    OP              reduce using rule 55 (expresion_a -> EQEQ .)
    CTE_I           reduce using rule 55 (expresion_a -> EQEQ .)
    CTE_F           reduce using rule 55 (expresion_a -> EQEQ .)
    CTE_CHAR        reduce using rule 55 (expresion_a -> EQEQ .)
    ID              reduce using rule 55 (expresion_a -> EQEQ .)


state 134

    (56) expresion_a -> LE .

    OP              reduce using rule 56 (expresion_a -> LE .)
    CTE_I           reduce using rule 56 (expresion_a -> LE .)
    CTE_F           reduce using rule 56 (expresion_a -> LE .)
    CTE_CHAR        reduce using rule 56 (expresion_a -> LE .)
    ID              reduce using rule 56 (expresion_a -> LE .)


state 135

    (57) expresion_a -> GE .

    OP              reduce using rule 57 (expresion_a -> GE .)
    CTE_I           reduce using rule 57 (expresion_a -> GE .)
    CTE_F           reduce using rule 57 (expresion_a -> GE .)
    CTE_CHAR        reduce using rule 57 (expresion_a -> GE .)
    ID              reduce using rule 57 (expresion_a -> GE .)


state 136

    (18) m_exp -> m_exp_b m_exp_a . m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    m_exp_b                        shift and go to state 82
    m_exp                          shift and go to state 171
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 137

    (19) m_exp_a -> ADD .

    OP              reduce using rule 19 (m_exp_a -> ADD .)
    CTE_I           reduce using rule 19 (m_exp_a -> ADD .)
    CTE_F           reduce using rule 19 (m_exp_a -> ADD .)
    CTE_CHAR        reduce using rule 19 (m_exp_a -> ADD .)
    ID              reduce using rule 19 (m_exp_a -> ADD .)


state 138

    (20) m_exp_a -> SUB .

    OP              reduce using rule 20 (m_exp_a -> SUB .)
    CTE_I           reduce using rule 20 (m_exp_a -> SUB .)
    CTE_F           reduce using rule 20 (m_exp_a -> SUB .)
    CTE_CHAR        reduce using rule 20 (m_exp_a -> SUB .)
    ID              reduce using rule 20 (m_exp_a -> SUB .)


state 139

    (23) term -> term_b term_a . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    term_b                         shift and go to state 84
    term                           shift and go to state 172
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 140

    (24) term_a -> MULT .

    OP              reduce using rule 24 (term_a -> MULT .)
    CTE_I           reduce using rule 24 (term_a -> MULT .)
    CTE_F           reduce using rule 24 (term_a -> MULT .)
    CTE_CHAR        reduce using rule 24 (term_a -> MULT .)
    ID              reduce using rule 24 (term_a -> MULT .)


state 141

    (25) term_a -> DIV .

    OP              reduce using rule 25 (term_a -> DIV .)
    CTE_I           reduce using rule 25 (term_a -> DIV .)
    CTE_F           reduce using rule 25 (term_a -> DIV .)
    CTE_CHAR        reduce using rule 25 (term_a -> DIV .)
    ID              reduce using rule 25 (term_a -> DIV .)


state 142

    (87) fact -> OP fact_a . exp CP
    (64) exp -> . and_exp
    (65) exp -> . exp_b exp
    (67) and_exp -> . expresion
    (68) and_exp -> . and_exp_b and_exp
    (66) exp_b -> . and_exp OR
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (69) and_exp_b -> . expresion AND
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    exp                            shift and go to state 173
    and_exp                        shift and go to state 114
    exp_b                          shift and go to state 115
    expresion                      shift and go to state 116
    and_exp_b                      shift and go to state 117
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 143

    (93) fact_a -> empty .

    OP              reduce using rule 93 (fact_a -> empty .)
    CTE_I           reduce using rule 93 (fact_a -> empty .)
    CTE_F           reduce using rule 93 (fact_a -> empty .)
    CTE_CHAR        reduce using rule 93 (fact_a -> empty .)
    ID              reduce using rule 93 (fact_a -> empty .)


state 144

    (70) for -> for_a for_b bloque .

    ID              reduce using rule 70 (for -> for_a for_b bloque .)
    CLASS           reduce using rule 70 (for -> for_a for_b bloque .)
    CLASS_ID        reduce using rule 70 (for -> for_a for_b bloque .)
    DEF             reduce using rule 70 (for -> for_a for_b bloque .)
    RETURN          reduce using rule 70 (for -> for_a for_b bloque .)
    PRINT           reduce using rule 70 (for -> for_a for_b bloque .)
    IF              reduce using rule 70 (for -> for_a for_b bloque .)
    FOR             reduce using rule 70 (for -> for_a for_b bloque .)
    INT             reduce using rule 70 (for -> for_a for_b bloque .)
    FLOAT           reduce using rule 70 (for -> for_a for_b bloque .)
    CHAR            reduce using rule 70 (for -> for_a for_b bloque .)
    DATAFRAME       reduce using rule 70 (for -> for_a for_b bloque .)
    FILE            reduce using rule 70 (for -> for_a for_b bloque .)
    WHILE           reduce using rule 70 (for -> for_a for_b bloque .)
    CB              reduce using rule 70 (for -> for_a for_b bloque .)


state 145

    (72) for_b -> for_e asignacionsencilla . CP

    CP              shift and go to state 174


state 146

    (114) asignacionsencilla -> ID . EQ expresion

    EQ              shift and go to state 175


state 147

    (75) for_e -> for_d SC .

    ID              reduce using rule 75 (for_e -> for_d SC .)


state 148

    (74) for_d -> for_c expresion .

    SC              reduce using rule 74 (for_d -> for_c expresion .)


state 149

    (73) for_c -> OP asignacionsencilla . SC

    SC              shift and go to state 176


state 150

    (94) classcreate -> CLASS CLASS_ID OB . classcreate_a function classcreate_c CB
    (95) classcreate_a -> . vars classcreate_a
    (96) classcreate_a -> . vars_vect_mat classcreate_a
    (97) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (125) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    DEF             reduce using rule 125 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    classcreate_a                  shift and go to state 177
    vars                           shift and go to state 178
    vars_vect_mat                  shift and go to state 179
    empty                          shift and go to state 180
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 151

    (109) classdeclare -> CLASS_ID ID SC .

    ID              reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    CLASS           reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    CLASS_ID        reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    DEF             reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    RETURN          reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    PRINT           reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    IF              reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    FOR             reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    INT             reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    FLOAT           reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    CHAR            reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    DATAFRAME       reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    FILE            reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    WHILE           reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)
    CB              reduce using rule 109 (classdeclare -> CLASS_ID ID SC .)


state 152

    (115) function -> DEF function_e bloque .

    ID              reduce using rule 115 (function -> DEF function_e bloque .)
    CLASS           reduce using rule 115 (function -> DEF function_e bloque .)
    CLASS_ID        reduce using rule 115 (function -> DEF function_e bloque .)
    DEF             reduce using rule 115 (function -> DEF function_e bloque .)
    RETURN          reduce using rule 115 (function -> DEF function_e bloque .)
    PRINT           reduce using rule 115 (function -> DEF function_e bloque .)
    IF              reduce using rule 115 (function -> DEF function_e bloque .)
    FOR             reduce using rule 115 (function -> DEF function_e bloque .)
    INT             reduce using rule 115 (function -> DEF function_e bloque .)
    FLOAT           reduce using rule 115 (function -> DEF function_e bloque .)
    CHAR            reduce using rule 115 (function -> DEF function_e bloque .)
    DATAFRAME       reduce using rule 115 (function -> DEF function_e bloque .)
    FILE            reduce using rule 115 (function -> DEF function_e bloque .)
    WHILE           reduce using rule 115 (function -> DEF function_e bloque .)
    CB              reduce using rule 115 (function -> DEF function_e bloque .)


state 153

    (123) function_e -> function_c OP . function_b CP vars
    (124) function_e -> function_c OP . function_b CP empty
    (118) function_b -> . function_d
    (119) function_b -> . function_d COMMA function_b
    (120) function_b -> . empty
    (122) function_d -> . tiposimple ID
    (125) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    CP              reduce using rule 125 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function_b                     shift and go to state 181
    empty                          shift and go to state 182
    function_d                     shift and go to state 183
    tiposimple                     shift and go to state 184

state 154

    (121) function_c -> function_a ID .

    OP              reduce using rule 121 (function_c -> function_a ID .)


state 155

    (49) return -> RETURN expresion SC .

    ID              reduce using rule 49 (return -> RETURN expresion SC .)
    CLASS           reduce using rule 49 (return -> RETURN expresion SC .)
    CLASS_ID        reduce using rule 49 (return -> RETURN expresion SC .)
    DEF             reduce using rule 49 (return -> RETURN expresion SC .)
    RETURN          reduce using rule 49 (return -> RETURN expresion SC .)
    PRINT           reduce using rule 49 (return -> RETURN expresion SC .)
    IF              reduce using rule 49 (return -> RETURN expresion SC .)
    FOR             reduce using rule 49 (return -> RETURN expresion SC .)
    INT             reduce using rule 49 (return -> RETURN expresion SC .)
    FLOAT           reduce using rule 49 (return -> RETURN expresion SC .)
    CHAR            reduce using rule 49 (return -> RETURN expresion SC .)
    DATAFRAME       reduce using rule 49 (return -> RETURN expresion SC .)
    FILE            reduce using rule 49 (return -> RETURN expresion SC .)
    WHILE           reduce using rule 49 (return -> RETURN expresion SC .)
    CB              reduce using rule 49 (return -> RETURN expresion SC .)


state 156

    (86) print -> PRINT OP expresion . CP SC

    CP              shift and go to state 185


state 157

    (107) condicion_c -> IF OP exp . CP

    CP              shift and go to state 186


state 158

    (63) while_b -> while_a OP expresion . CP

    CP              shift and go to state 187


state 159

    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .

    INT             reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FLOAT           reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    CHAR            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    ID              reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FILE            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    OB              reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    DEF             reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)


state 160

    (16) vars_vect_mat_a -> OSB exp CSB .

    SC              reduce using rule 16 (vars_vect_mat_a -> OSB exp CSB .)
    OSB             reduce using rule 16 (vars_vect_mat_a -> OSB exp CSB .)


state 161

    (66) exp_b -> and_exp OR .

    OP              reduce using rule 66 (exp_b -> and_exp OR .)
    CTE_I           reduce using rule 66 (exp_b -> and_exp OR .)
    CTE_F           reduce using rule 66 (exp_b -> and_exp OR .)
    CTE_CHAR        reduce using rule 66 (exp_b -> and_exp OR .)
    ID              reduce using rule 66 (exp_b -> and_exp OR .)


state 162

    (65) exp -> exp_b exp .

    CSB             reduce using rule 65 (exp -> exp_b exp .)
    CP              reduce using rule 65 (exp -> exp_b exp .)


state 163

    (69) and_exp_b -> expresion AND .

    OP              reduce using rule 69 (and_exp_b -> expresion AND .)
    CTE_I           reduce using rule 69 (and_exp_b -> expresion AND .)
    CTE_F           reduce using rule 69 (and_exp_b -> expresion AND .)
    CTE_CHAR        reduce using rule 69 (and_exp_b -> expresion AND .)
    ID              reduce using rule 69 (and_exp_b -> expresion AND .)


state 164

    (68) and_exp -> and_exp_b and_exp .

    OR              reduce using rule 68 (and_exp -> and_exp_b and_exp .)
    CSB             reduce using rule 68 (and_exp -> and_exp_b and_exp .)
    CP              reduce using rule 68 (and_exp -> and_exp_b and_exp .)


state 165

    (111) asignacion -> ID asignacion_a asignacion_a EQ . expresion SC
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 188
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 166

    (112) asignacion_a -> OSB exp CSB .

    OSB             reduce using rule 112 (asignacion_a -> OSB exp CSB .)
    EQ              reduce using rule 112 (asignacion_a -> OSB exp CSB .)


state 167

    (103) condicion_a -> condicion_d condicion_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 189

state 168

    (105) condicion_b -> condicion .

    OB              reduce using rule 105 (condicion_b -> condicion .)


state 169

    (106) condicion_b -> empty .

    OB              reduce using rule 106 (condicion_b -> empty .)


state 170

    (51) expresion -> m_exp expresion_a m_exp .

    COMMA           reduce using rule 51 (expresion -> m_exp expresion_a m_exp .)
    CP              reduce using rule 51 (expresion -> m_exp expresion_a m_exp .)
    SC              reduce using rule 51 (expresion -> m_exp expresion_a m_exp .)
    AND             reduce using rule 51 (expresion -> m_exp expresion_a m_exp .)
    OR              reduce using rule 51 (expresion -> m_exp expresion_a m_exp .)
    CSB             reduce using rule 51 (expresion -> m_exp expresion_a m_exp .)


state 171

    (18) m_exp -> m_exp_b m_exp_a m_exp .

    LT              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    GT              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    NE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    EQEQ            reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    LE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    GE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    COMMA           reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    CP              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    SC              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    AND             reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    OR              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    CSB             reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)


state 172

    (23) term -> term_b term_a term .

    ADD             reduce using rule 23 (term -> term_b term_a term .)
    SUB             reduce using rule 23 (term -> term_b term_a term .)
    LT              reduce using rule 23 (term -> term_b term_a term .)
    GT              reduce using rule 23 (term -> term_b term_a term .)
    NE              reduce using rule 23 (term -> term_b term_a term .)
    EQEQ            reduce using rule 23 (term -> term_b term_a term .)
    LE              reduce using rule 23 (term -> term_b term_a term .)
    GE              reduce using rule 23 (term -> term_b term_a term .)
    COMMA           reduce using rule 23 (term -> term_b term_a term .)
    CP              reduce using rule 23 (term -> term_b term_a term .)
    SC              reduce using rule 23 (term -> term_b term_a term .)
    AND             reduce using rule 23 (term -> term_b term_a term .)
    OR              reduce using rule 23 (term -> term_b term_a term .)
    CSB             reduce using rule 23 (term -> term_b term_a term .)


state 173

    (87) fact -> OP fact_a exp . CP

    CP              shift and go to state 190


state 174

    (72) for_b -> for_e asignacionsencilla CP .

    OB              reduce using rule 72 (for_b -> for_e asignacionsencilla CP .)


state 175

    (114) asignacionsencilla -> ID EQ . expresion
    (50) expresion -> . m_exp
    (51) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (87) fact -> . OP fact_a exp CP
    (88) fact -> . CTE_I
    (89) fact -> . CTE_F
    (90) fact -> . CTE_CHAR
    (91) fact -> . ID
    (92) fact -> . llamada
    (76) llamada -> . llamada_d llamada_a CP
    (82) llamada_d -> . llamada_c OP
    (81) llamada_c -> . ID

    OP              shift and go to state 86
    CTE_I           shift and go to state 87
    CTE_F           shift and go to state 88
    CTE_CHAR        shift and go to state 89
    ID              shift and go to state 90

    expresion                      shift and go to state 191
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 82
    term                           shift and go to state 83
    term_b                         shift and go to state 84
    fact                           shift and go to state 85
    llamada                        shift and go to state 91
    llamada_d                      shift and go to state 44
    llamada_c                      shift and go to state 54

state 176

    (73) for_c -> OP asignacionsencilla SC .

    OP              reduce using rule 73 (for_c -> OP asignacionsencilla SC .)
    CTE_I           reduce using rule 73 (for_c -> OP asignacionsencilla SC .)
    CTE_F           reduce using rule 73 (for_c -> OP asignacionsencilla SC .)
    CTE_CHAR        reduce using rule 73 (for_c -> OP asignacionsencilla SC .)
    ID              reduce using rule 73 (for_c -> OP asignacionsencilla SC .)


state 177

    (94) classcreate -> CLASS CLASS_ID OB classcreate_a . function classcreate_c CB
    (115) function -> . DEF function_e bloque

    DEF             shift and go to state 50

    function                       shift and go to state 192

state 178

    (95) classcreate_a -> vars . classcreate_a
    (95) classcreate_a -> . vars classcreate_a
    (96) classcreate_a -> . vars_vect_mat classcreate_a
    (97) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (125) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    DEF             reduce using rule 125 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    vars                           shift and go to state 178
    classcreate_a                  shift and go to state 193
    vars_vect_mat                  shift and go to state 179
    empty                          shift and go to state 180
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 179

    (96) classcreate_a -> vars_vect_mat . classcreate_a
    (95) classcreate_a -> . vars classcreate_a
    (96) classcreate_a -> . vars_vect_mat classcreate_a
    (97) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (125) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    DEF             reduce using rule 125 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    vars_vect_mat                  shift and go to state 179
    classcreate_a                  shift and go to state 194
    vars                           shift and go to state 178
    empty                          shift and go to state 180
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 180

    (97) classcreate_a -> empty .

    DEF             reduce using rule 97 (classcreate_a -> empty .)


state 181

    (123) function_e -> function_c OP function_b . CP vars
    (124) function_e -> function_c OP function_b . CP empty

    CP              shift and go to state 195


state 182

    (120) function_b -> empty .

    CP              reduce using rule 120 (function_b -> empty .)


state 183

    (118) function_b -> function_d .
    (119) function_b -> function_d . COMMA function_b

    CP              reduce using rule 118 (function_b -> function_d .)
    COMMA           shift and go to state 196


state 184

    (122) function_d -> tiposimple . ID

    ID              shift and go to state 197


state 185

    (86) print -> PRINT OP expresion CP . SC

    SC              shift and go to state 198


state 186

    (107) condicion_c -> IF OP exp CP .

    OB              reduce using rule 107 (condicion_c -> IF OP exp CP .)


state 187

    (63) while_b -> while_a OP expresion CP .

    OB              reduce using rule 63 (while_b -> while_a OP expresion CP .)


state 188

    (111) asignacion -> ID asignacion_a asignacion_a EQ expresion . SC

    SC              shift and go to state 199


state 189

    (103) condicion_a -> condicion_d condicion_b bloque .

    ID              reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS           reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS_ID        reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    DEF             reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    RETURN          reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    PRINT           reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    IF              reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    FOR             reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    INT             reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    FLOAT           reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    CHAR            reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    DATAFRAME       reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    FILE            reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    WHILE           reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    CB              reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)
    OB              reduce using rule 103 (condicion_a -> condicion_d condicion_b bloque .)


state 190

    (87) fact -> OP fact_a exp CP .

    MULT            reduce using rule 87 (fact -> OP fact_a exp CP .)
    DIV             reduce using rule 87 (fact -> OP fact_a exp CP .)
    ADD             reduce using rule 87 (fact -> OP fact_a exp CP .)
    SUB             reduce using rule 87 (fact -> OP fact_a exp CP .)
    LT              reduce using rule 87 (fact -> OP fact_a exp CP .)
    GT              reduce using rule 87 (fact -> OP fact_a exp CP .)
    NE              reduce using rule 87 (fact -> OP fact_a exp CP .)
    EQEQ            reduce using rule 87 (fact -> OP fact_a exp CP .)
    LE              reduce using rule 87 (fact -> OP fact_a exp CP .)
    GE              reduce using rule 87 (fact -> OP fact_a exp CP .)
    COMMA           reduce using rule 87 (fact -> OP fact_a exp CP .)
    CP              reduce using rule 87 (fact -> OP fact_a exp CP .)
    SC              reduce using rule 87 (fact -> OP fact_a exp CP .)
    AND             reduce using rule 87 (fact -> OP fact_a exp CP .)
    OR              reduce using rule 87 (fact -> OP fact_a exp CP .)
    CSB             reduce using rule 87 (fact -> OP fact_a exp CP .)


state 191

    (114) asignacionsencilla -> ID EQ expresion .

    CP              reduce using rule 114 (asignacionsencilla -> ID EQ expresion .)
    SC              reduce using rule 114 (asignacionsencilla -> ID EQ expresion .)


state 192

    (94) classcreate -> CLASS CLASS_ID OB classcreate_a function . classcreate_c CB
    (98) classcreate_c -> . function classcreate_d
    (99) classcreate_c -> . classcreate_d
    (115) function -> . DEF function_e bloque
    (100) classcreate_d -> . classcreate_c
    (101) classcreate_d -> . empty
    (125) empty -> .

    DEF             shift and go to state 50
    CB              reduce using rule 125 (empty -> .)

    function                       shift and go to state 200
    classcreate_c                  shift and go to state 201
    classcreate_d                  shift and go to state 202
    empty                          shift and go to state 203

state 193

    (95) classcreate_a -> vars classcreate_a .

    DEF             reduce using rule 95 (classcreate_a -> vars classcreate_a .)


state 194

    (96) classcreate_a -> vars_vect_mat classcreate_a .

    DEF             reduce using rule 96 (classcreate_a -> vars_vect_mat classcreate_a .)


state 195

    (123) function_e -> function_c OP function_b CP . vars
    (124) function_e -> function_c OP function_b CP . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (125) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    OB              reduce using rule 125 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    vars                           shift and go to state 204
    empty                          shift and go to state 205
    tiposimple                     shift and go to state 49
    tipocompuesto                  shift and go to state 12

state 196

    (119) function_b -> function_d COMMA . function_b
    (118) function_b -> . function_d
    (119) function_b -> . function_d COMMA function_b
    (120) function_b -> . empty
    (122) function_d -> . tiposimple ID
    (125) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    CP              reduce using rule 125 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function_d                     shift and go to state 183
    function_b                     shift and go to state 206
    empty                          shift and go to state 182
    tiposimple                     shift and go to state 184

state 197

    (122) function_d -> tiposimple ID .

    COMMA           reduce using rule 122 (function_d -> tiposimple ID .)
    CP              reduce using rule 122 (function_d -> tiposimple ID .)


state 198

    (86) print -> PRINT OP expresion CP SC .

    ID              reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    CLASS           reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    CLASS_ID        reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    DEF             reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    RETURN          reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    PRINT           reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    IF              reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    FOR             reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    INT             reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    FLOAT           reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    CHAR            reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    DATAFRAME       reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    FILE            reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    WHILE           reduce using rule 86 (print -> PRINT OP expresion CP SC .)
    CB              reduce using rule 86 (print -> PRINT OP expresion CP SC .)


state 199

    (111) asignacion -> ID asignacion_a asignacion_a EQ expresion SC .

    ID              reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS           reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS_ID        reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DEF             reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    RETURN          reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    PRINT           reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    IF              reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FOR             reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    INT             reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FLOAT           reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CHAR            reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DATAFRAME       reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FILE            reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    WHILE           reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CB              reduce using rule 111 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)


state 200

    (98) classcreate_c -> function . classcreate_d
    (100) classcreate_d -> . classcreate_c
    (101) classcreate_d -> . empty
    (98) classcreate_c -> . function classcreate_d
    (99) classcreate_c -> . classcreate_d
    (125) empty -> .
    (115) function -> . DEF function_e bloque

    CB              reduce using rule 125 (empty -> .)
    DEF             shift and go to state 50

    function                       shift and go to state 200
    classcreate_d                  shift and go to state 207
    classcreate_c                  shift and go to state 208
    empty                          shift and go to state 203

state 201

    (94) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c . CB
    (100) classcreate_d -> classcreate_c .

  ! shift/reduce conflict for CB resolved as shift
    CB              shift and go to state 209

  ! CB              [ reduce using rule 100 (classcreate_d -> classcreate_c .) ]


state 202

    (99) classcreate_c -> classcreate_d .

    CB              reduce using rule 99 (classcreate_c -> classcreate_d .)


state 203

    (101) classcreate_d -> empty .

    CB              reduce using rule 101 (classcreate_d -> empty .)


state 204

    (123) function_e -> function_c OP function_b CP vars .

    OB              reduce using rule 123 (function_e -> function_c OP function_b CP vars .)


state 205

    (124) function_e -> function_c OP function_b CP empty .

    OB              reduce using rule 124 (function_e -> function_c OP function_b CP empty .)


state 206

    (119) function_b -> function_d COMMA function_b .

    CP              reduce using rule 119 (function_b -> function_d COMMA function_b .)


state 207

    (98) classcreate_c -> function classcreate_d .
    (99) classcreate_c -> classcreate_d .

  ! reduce/reduce conflict for CB resolved using rule 98 (classcreate_c -> function classcreate_d .)
    CB              reduce using rule 98 (classcreate_c -> function classcreate_d .)

  ! CB              [ reduce using rule 99 (classcreate_c -> classcreate_d .) ]


state 208

    (100) classcreate_d -> classcreate_c .

    CB              reduce using rule 100 (classcreate_d -> classcreate_c .)


state 209

    (94) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .

    ID              reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS           reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS_ID        reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DEF             reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    RETURN          reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    PRINT           reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    IF              reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FOR             reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INT             reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FLOAT           reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CHAR            reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DATAFRAME       reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FILE            reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    WHILE           reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CB              reduce using rule 94 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OSB in state 42 resolved as shift
WARNING: shift/reduce conflict for CB in state 201 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa_a -> programa_b)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 28 resolved using rule (bloque_a -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 207 resolved using rule (classcreate_c -> function classcreate_d)
WARNING: rejected rule (classcreate_c -> classcreate_d) in state 207
