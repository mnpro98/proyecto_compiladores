Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPT
    COL
    DIGIT
    DIGITS
    LETTER

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SC programa_a bloque
Rule 2     programa_a -> programa_b
Rule 3     programa_a -> programa_b programa_a
Rule 4     programa_a -> empty
Rule 5     programa_b -> vars
Rule 6     programa_b -> vars_vect_mat
Rule 7     vars -> tiposimple vars_a SC
Rule 8     vars -> tipocompuesto vars_a SC
Rule 9     vars_a -> vars_b
Rule 10    vars_a -> vars_c vars_a
Rule 11    vars_b -> ID
Rule 12    vars_b -> ID EQ expresion
Rule 13    vars_c -> vars_b COMMA
Rule 14    vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC
Rule 15    vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
Rule 16    vars_vect_mat_a -> vars_vect_mat_c exp CSB
Rule 17    vars_vect_mat_b -> tiposimple ID
Rule 18    vars_vect_mat_c -> OSB
Rule 19    vars_vect_mat_d -> OSB exp CSB
Rule 20    m_exp -> m_exp_b
Rule 21    m_exp -> m_exp_b m_exp_a m_exp
Rule 22    m_exp_a -> ADD
Rule 23    m_exp_a -> SUB
Rule 24    m_exp_b -> term
Rule 25    term -> term_b
Rule 26    term -> term_b term_a term
Rule 27    term_a -> MULT
Rule 28    term_a -> DIV
Rule 29    term_b -> fact
Rule 30    tiposimple -> INT
Rule 31    tiposimple -> FLOAT
Rule 32    tiposimple -> CHAR
Rule 33    tipocompuesto -> DATAFRAME
Rule 34    tipocompuesto -> ID
Rule 35    tipocompuesto -> FILE
Rule 36    bloque -> OB bloque_a CB
Rule 37    bloque_a -> estatuto bloque_a
Rule 38    bloque_a -> estatuto
Rule 39    bloque_a -> empty
Rule 40    estatuto -> asignacion
Rule 41    estatuto -> condicion
Rule 42    estatuto -> llamada SC
Rule 43    estatuto -> while
Rule 44    estatuto -> for
Rule 45    estatuto -> classcreate
Rule 46    estatuto -> vars
Rule 47    estatuto -> classdeclare
Rule 48    estatuto -> llamadafuncionclase
Rule 49    estatuto -> function
Rule 50    estatuto -> return
Rule 51    estatuto -> print
Rule 52    return -> RETURN expresion SC
Rule 53    expresion -> m_exp
Rule 54    expresion -> m_exp expresion_a m_exp
Rule 55    expresion_a -> LT
Rule 56    expresion_a -> GT
Rule 57    expresion_a -> NE
Rule 58    expresion_a -> EQEQ
Rule 59    expresion_a -> LE
Rule 60    expresion_a -> GE
Rule 61    varcte -> ID
Rule 62    varcte -> CTE_I
Rule 63    varcte -> CTE_F
Rule 64    while -> while_b bloque
Rule 65    while_a -> WHILE
Rule 66    while_b -> while_a OP expresion CP
Rule 67    exp -> and_exp
Rule 68    exp -> exp_b exp
Rule 69    exp_b -> and_exp OR
Rule 70    and_exp -> expresion
Rule 71    and_exp -> and_exp_b and_exp
Rule 72    and_exp_b -> expresion AND
Rule 73    for -> for_a for_b bloque
Rule 74    for_a -> FOR
Rule 75    for_b -> for_e asignacionsencilla CP
Rule 76    for_c -> OP asignacionsencilla SC
Rule 77    for_d -> for_c expresion
Rule 78    for_e -> for_d SC
Rule 79    llamada -> llamada_d llamada_a CP
Rule 80    llamada_a -> llamada_e llamada_b
Rule 81    llamada_a -> llamada_b
Rule 82    llamada_b -> llamada_f llamada_a
Rule 83    llamada_b -> empty
Rule 84    llamada_c -> ID
Rule 85    llamada_d -> llamada_c OP
Rule 86    llamada_e -> expresion
Rule 87    llamada_e -> CTE_STRING
Rule 88    llamada_f -> COMMA
Rule 89    print -> PRINT OP expresion CP SC
Rule 90    fact -> OP fact_a exp CP
Rule 91    fact -> CTE_I
Rule 92    fact -> CTE_F
Rule 93    fact -> CTE_CHAR
Rule 94    fact -> ID
Rule 95    fact -> llamada
Rule 96    fact -> array_access
Rule 97    fact_a -> empty
Rule 98    classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB
Rule 99    classcreate_a -> vars classcreate_a
Rule 100   classcreate_a -> vars_vect_mat classcreate_a
Rule 101   classcreate_a -> empty
Rule 102   classcreate_c -> function classcreate_d
Rule 103   classcreate_c -> classcreate_d
Rule 104   classcreate_d -> classcreate_c
Rule 105   classcreate_d -> empty
Rule 106   condicion -> condicion_c bloque condicion_a
Rule 107   condicion_a -> condicion_d condicion_b bloque
Rule 108   condicion_a -> empty
Rule 109   condicion_b -> condicion
Rule 110   condicion_b -> empty
Rule 111   condicion_c -> IF OP exp CP
Rule 112   condicion_d -> ELSE
Rule 113   classdeclare -> CLASS_ID ID SC
Rule 114   llamadafuncionclase -> ID POINT llamada
Rule 115   asignacion -> ID asignacion_a asignacion_a EQ expresion SC
Rule 116   asignacion_a -> OSB exp CSB
Rule 117   asignacion_a -> empty
Rule 118   asignacionsencilla -> ID EQ expresion
Rule 119   function -> DEF function_e bloque
Rule 120   function_a -> VOID
Rule 121   function_a -> tiposimple
Rule 122   function_b -> function_d
Rule 123   function_b -> function_d COMMA function_b
Rule 124   function_b -> empty
Rule 125   function_c -> function_a ID
Rule 126   function_d -> tiposimple ID
Rule 127   function_e -> function_c OP function_b CP vars
Rule 128   function_e -> function_c OP function_b CP empty
Rule 129   array_access -> array_access_c OSB exp CSB
Rule 130   array_access -> array_access_c
Rule 131   array_access_a -> ID
Rule 132   array_access_b -> array_access_a OSB
Rule 133   array_access_c -> array_access_b exp CSB
Rule 134   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 22
AND                  : 72
CAPT                 : 
CB                   : 36 98
CHAR                 : 32
CLASS                : 98
CLASS_ID             : 98 113
COL                  : 
COMMA                : 13 88 123
CP                   : 66 75 79 89 90 111 127 128
CSB                  : 16 19 116 129 133
CTE_CHAR             : 93
CTE_F                : 63 92
CTE_I                : 62 91
CTE_STRING           : 87
DATAFRAME            : 33
DEF                  : 119
DIGIT                : 
DIGITS               : 
DIV                  : 28
ELSE                 : 112
EQ                   : 12 115 118
EQEQ                 : 58
FILE                 : 35
FLOAT                : 31
FOR                  : 74
GE                   : 60
GT                   : 56
ID                   : 1 11 12 17 34 61 84 94 113 114 115 118 125 126 131
IF                   : 111
INT                  : 30
LE                   : 59
LETTER               : 
LT                   : 55
MULT                 : 27
NE                   : 57
OB                   : 36 98
OP                   : 66 76 85 89 90 111 127 128
OR                   : 69
OSB                  : 18 19 116 129 132
POINT                : 114
PRINT                : 89
PROGRAM              : 1
RETURN               : 52
SC                   : 1 7 8 14 15 42 52 76 78 89 113 115
SUB                  : 23
VOID                 : 120
WHILE                : 65
error                : 

Nonterminals, with rules where they appear

and_exp              : 67 69 71
and_exp_b            : 71
array_access         : 96
array_access_a       : 132
array_access_b       : 133
array_access_c       : 129 130
asignacion           : 40
asignacion_a         : 115 115
asignacionsencilla   : 75 76
bloque               : 1 64 73 106 107 119
bloque_a             : 36 37
classcreate          : 45
classcreate_a        : 98 99 100
classcreate_c        : 98 104
classcreate_d        : 102 103
classdeclare         : 47
condicion            : 41 109
condicion_a          : 106
condicion_b          : 107
condicion_c          : 106
condicion_d          : 107
empty                : 4 39 83 97 101 105 108 110 117 124 128
estatuto             : 37 38
exp                  : 16 19 68 90 111 116 129 133
exp_b                : 68
expresion            : 12 52 66 70 72 77 86 89 115 118
expresion_a          : 54
fact                 : 29
fact_a               : 90
for                  : 44
for_a                : 73
for_b                : 73
for_c                : 77
for_d                : 78
for_e                : 75
function             : 49 98 102
function_a           : 125
function_b           : 123 127 128
function_c           : 127 128
function_d           : 122 123
function_e           : 119
llamada              : 42 95 114
llamada_a            : 79 82
llamada_b            : 80 81
llamada_c            : 85
llamada_d            : 79
llamada_e            : 80
llamada_f            : 82
llamadafuncionclase  : 48
m_exp                : 21 53 54 54
m_exp_a              : 21
m_exp_b              : 20 21
print                : 51
programa             : 0
programa_a           : 1 3
programa_b           : 2 3
return               : 50
term                 : 24 26
term_a               : 26
term_b               : 25 26
tipocompuesto        : 8
tiposimple           : 7 17 121 126
varcte               : 
vars                 : 5 46 99 127
vars_a               : 7 8 10
vars_b               : 9 13
vars_c               : 10
vars_vect_mat        : 6 100
vars_vect_mat_a      : 14 15
vars_vect_mat_b      : 14 15
vars_vect_mat_c      : 16
vars_vect_mat_d      : 15
while                : 43
while_a              : 66
while_b              : 64

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SC programa_a bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SC programa_a bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SC programa_a bloque

    SC              shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SC . programa_a bloque
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (134) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

    OB              reduce using rule 134 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    programa_a                     shift and go to state 6
    programa_b                     shift and go to state 7
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 5

    (34) tipocompuesto -> ID .

    ID              reduce using rule 34 (tipocompuesto -> ID .)


state 6

    (1) programa -> PROGRAM ID SC programa_a . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 19

state 7

    (2) programa_a -> programa_b .
    (3) programa_a -> programa_b . programa_a
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (134) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

  ! reduce/reduce conflict for OB resolved using rule 2 (programa_a -> programa_b .)
    OB              reduce using rule 2 (programa_a -> programa_b .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

  ! OB              [ reduce using rule 134 (empty -> .) ]

    programa_b                     shift and go to state 7
    programa_a                     shift and go to state 21
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 8

    (4) programa_a -> empty .

    OB              reduce using rule 4 (programa_a -> empty .)


state 9

    (5) programa_b -> vars .

    INT             reduce using rule 5 (programa_b -> vars .)
    FLOAT           reduce using rule 5 (programa_b -> vars .)
    CHAR            reduce using rule 5 (programa_b -> vars .)
    DATAFRAME       reduce using rule 5 (programa_b -> vars .)
    ID              reduce using rule 5 (programa_b -> vars .)
    FILE            reduce using rule 5 (programa_b -> vars .)
    OB              reduce using rule 5 (programa_b -> vars .)


state 10

    (6) programa_b -> vars_vect_mat .

    INT             reduce using rule 6 (programa_b -> vars_vect_mat .)
    FLOAT           reduce using rule 6 (programa_b -> vars_vect_mat .)
    CHAR            reduce using rule 6 (programa_b -> vars_vect_mat .)
    DATAFRAME       reduce using rule 6 (programa_b -> vars_vect_mat .)
    ID              reduce using rule 6 (programa_b -> vars_vect_mat .)
    FILE            reduce using rule 6 (programa_b -> vars_vect_mat .)
    OB              reduce using rule 6 (programa_b -> vars_vect_mat .)


state 11

    (7) vars -> tiposimple . vars_a SC
    (17) vars_vect_mat_b -> tiposimple . ID
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 23

    vars_a                         shift and go to state 22
    vars_b                         shift and go to state 24
    vars_c                         shift and go to state 25

state 12

    (8) vars -> tipocompuesto . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 27

    vars_a                         shift and go to state 26
    vars_b                         shift and go to state 24
    vars_c                         shift and go to state 25

state 13

    (14) vars_vect_mat -> vars_vect_mat_b . vars_vect_mat_a SC
    (15) vars_vect_mat -> vars_vect_mat_b . vars_vect_mat_a vars_vect_mat_d SC
    (16) vars_vect_mat_a -> . vars_vect_mat_c exp CSB
    (18) vars_vect_mat_c -> . OSB

    OSB             shift and go to state 30

    vars_vect_mat_a                shift and go to state 28
    vars_vect_mat_c                shift and go to state 29

state 14

    (30) tiposimple -> INT .

    ID              reduce using rule 30 (tiposimple -> INT .)


state 15

    (31) tiposimple -> FLOAT .

    ID              reduce using rule 31 (tiposimple -> FLOAT .)


state 16

    (32) tiposimple -> CHAR .

    ID              reduce using rule 32 (tiposimple -> CHAR .)


state 17

    (33) tipocompuesto -> DATAFRAME .

    ID              reduce using rule 33 (tipocompuesto -> DATAFRAME .)


state 18

    (35) tipocompuesto -> FILE .

    ID              reduce using rule 35 (tipocompuesto -> FILE .)


state 19

    (1) programa -> PROGRAM ID SC programa_a bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SC programa_a bloque .)


state 20

    (36) bloque -> OB . bloque_a CB
    (37) bloque_a -> . estatuto bloque_a
    (38) bloque_a -> . estatuto
    (39) bloque_a -> . empty
    (40) estatuto -> . asignacion
    (41) estatuto -> . condicion
    (42) estatuto -> . llamada SC
    (43) estatuto -> . while
    (44) estatuto -> . for
    (45) estatuto -> . classcreate
    (46) estatuto -> . vars
    (47) estatuto -> . classdeclare
    (48) estatuto -> . llamadafuncionclase
    (49) estatuto -> . function
    (50) estatuto -> . return
    (51) estatuto -> . print
    (134) empty -> .
    (115) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (106) condicion -> . condicion_c bloque condicion_a
    (79) llamada -> . llamada_d llamada_a CP
    (64) while -> . while_b bloque
    (73) for -> . for_a for_b bloque
    (98) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (113) classdeclare -> . CLASS_ID ID SC
    (114) llamadafuncionclase -> . ID POINT llamada
    (119) function -> . DEF function_e bloque
    (52) return -> . RETURN expresion SC
    (89) print -> . PRINT OP expresion CP SC
    (111) condicion_c -> . IF OP exp CP
    (85) llamada_d -> . llamada_c OP
    (66) while_b -> . while_a OP expresion CP
    (74) for_a -> . FOR
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (84) llamada_c -> . ID
    (65) while_a -> . WHILE

    CB              reduce using rule 134 (empty -> .)
    ID              shift and go to state 46
    CLASS           shift and go to state 51
    CLASS_ID        shift and go to state 52
    DEF             shift and go to state 54
    RETURN          shift and go to state 55
    PRINT           shift and go to state 56
    IF              shift and go to state 57
    FOR             shift and go to state 60
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    FILE            shift and go to state 18
    WHILE           shift and go to state 61

    bloque_a                       shift and go to state 31
    estatuto                       shift and go to state 32
    empty                          shift and go to state 33
    asignacion                     shift and go to state 34
    condicion                      shift and go to state 35
    llamada                        shift and go to state 36
    while                          shift and go to state 37
    for                            shift and go to state 38
    classcreate                    shift and go to state 39
    vars                           shift and go to state 40
    classdeclare                   shift and go to state 41
    llamadafuncionclase            shift and go to state 42
    function                       shift and go to state 43
    return                         shift and go to state 44
    print                          shift and go to state 45
    condicion_c                    shift and go to state 47
    llamada_d                      shift and go to state 48
    while_b                        shift and go to state 49
    for_a                          shift and go to state 50
    tiposimple                     shift and go to state 53
    tipocompuesto                  shift and go to state 12
    llamada_c                      shift and go to state 58
    while_a                        shift and go to state 59

state 21

    (3) programa_a -> programa_b programa_a .

    OB              reduce using rule 3 (programa_a -> programa_b programa_a .)


state 22

    (7) vars -> tiposimple vars_a . SC

    SC              shift and go to state 62


state 23

    (17) vars_vect_mat_b -> tiposimple ID .
    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    OSB             reduce using rule 17 (vars_vect_mat_b -> tiposimple ID .)
    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 63


state 24

    (9) vars_a -> vars_b .
    (13) vars_c -> vars_b . COMMA

    SC              reduce using rule 9 (vars_a -> vars_b .)
    COMMA           shift and go to state 64


state 25

    (10) vars_a -> vars_c . vars_a
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 27

    vars_c                         shift and go to state 25
    vars_a                         shift and go to state 65
    vars_b                         shift and go to state 24

state 26

    (8) vars -> tipocompuesto vars_a . SC

    SC              shift and go to state 66


state 27

    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 63


state 28

    (14) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a . SC
    (15) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a . vars_vect_mat_d SC
    (19) vars_vect_mat_d -> . OSB exp CSB

    SC              shift and go to state 67
    OSB             shift and go to state 69

    vars_vect_mat_d                shift and go to state 68

state 29

    (16) vars_vect_mat_a -> vars_vect_mat_c . exp CSB
    (67) exp -> . and_exp
    (68) exp -> . exp_b exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (69) exp_b -> . and_exp OR
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    exp                            shift and go to state 70
    and_exp                        shift and go to state 71
    exp_b                          shift and go to state 72
    expresion                      shift and go to state 73
    and_exp_b                      shift and go to state 74
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 30

    (18) vars_vect_mat_c -> OSB .

    OP              reduce using rule 18 (vars_vect_mat_c -> OSB .)
    CTE_I           reduce using rule 18 (vars_vect_mat_c -> OSB .)
    CTE_F           reduce using rule 18 (vars_vect_mat_c -> OSB .)
    CTE_CHAR        reduce using rule 18 (vars_vect_mat_c -> OSB .)
    ID              reduce using rule 18 (vars_vect_mat_c -> OSB .)


state 31

    (36) bloque -> OB bloque_a . CB

    CB              shift and go to state 90


state 32

    (37) bloque_a -> estatuto . bloque_a
    (38) bloque_a -> estatuto .
    (37) bloque_a -> . estatuto bloque_a
    (38) bloque_a -> . estatuto
    (39) bloque_a -> . empty
    (40) estatuto -> . asignacion
    (41) estatuto -> . condicion
    (42) estatuto -> . llamada SC
    (43) estatuto -> . while
    (44) estatuto -> . for
    (45) estatuto -> . classcreate
    (46) estatuto -> . vars
    (47) estatuto -> . classdeclare
    (48) estatuto -> . llamadafuncionclase
    (49) estatuto -> . function
    (50) estatuto -> . return
    (51) estatuto -> . print
    (134) empty -> .
    (115) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (106) condicion -> . condicion_c bloque condicion_a
    (79) llamada -> . llamada_d llamada_a CP
    (64) while -> . while_b bloque
    (73) for -> . for_a for_b bloque
    (98) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (113) classdeclare -> . CLASS_ID ID SC
    (114) llamadafuncionclase -> . ID POINT llamada
    (119) function -> . DEF function_e bloque
    (52) return -> . RETURN expresion SC
    (89) print -> . PRINT OP expresion CP SC
    (111) condicion_c -> . IF OP exp CP
    (85) llamada_d -> . llamada_c OP
    (66) while_b -> . while_a OP expresion CP
    (74) for_a -> . FOR
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (84) llamada_c -> . ID
    (65) while_a -> . WHILE

  ! reduce/reduce conflict for CB resolved using rule 38 (bloque_a -> estatuto .)
    CB              reduce using rule 38 (bloque_a -> estatuto .)
    ID              shift and go to state 46
    CLASS           shift and go to state 51
    CLASS_ID        shift and go to state 52
    DEF             shift and go to state 54
    RETURN          shift and go to state 55
    PRINT           shift and go to state 56
    IF              shift and go to state 57
    FOR             shift and go to state 60
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    FILE            shift and go to state 18
    WHILE           shift and go to state 61

  ! CB              [ reduce using rule 134 (empty -> .) ]

    estatuto                       shift and go to state 32
    bloque_a                       shift and go to state 91
    empty                          shift and go to state 33
    asignacion                     shift and go to state 34
    condicion                      shift and go to state 35
    llamada                        shift and go to state 36
    while                          shift and go to state 37
    for                            shift and go to state 38
    classcreate                    shift and go to state 39
    vars                           shift and go to state 40
    classdeclare                   shift and go to state 41
    llamadafuncionclase            shift and go to state 42
    function                       shift and go to state 43
    return                         shift and go to state 44
    print                          shift and go to state 45
    condicion_c                    shift and go to state 47
    llamada_d                      shift and go to state 48
    while_b                        shift and go to state 49
    for_a                          shift and go to state 50
    tiposimple                     shift and go to state 53
    tipocompuesto                  shift and go to state 12
    llamada_c                      shift and go to state 58
    while_a                        shift and go to state 59

state 33

    (39) bloque_a -> empty .

    CB              reduce using rule 39 (bloque_a -> empty .)


state 34

    (40) estatuto -> asignacion .

    ID              reduce using rule 40 (estatuto -> asignacion .)
    CLASS           reduce using rule 40 (estatuto -> asignacion .)
    CLASS_ID        reduce using rule 40 (estatuto -> asignacion .)
    DEF             reduce using rule 40 (estatuto -> asignacion .)
    RETURN          reduce using rule 40 (estatuto -> asignacion .)
    PRINT           reduce using rule 40 (estatuto -> asignacion .)
    IF              reduce using rule 40 (estatuto -> asignacion .)
    FOR             reduce using rule 40 (estatuto -> asignacion .)
    INT             reduce using rule 40 (estatuto -> asignacion .)
    FLOAT           reduce using rule 40 (estatuto -> asignacion .)
    CHAR            reduce using rule 40 (estatuto -> asignacion .)
    DATAFRAME       reduce using rule 40 (estatuto -> asignacion .)
    FILE            reduce using rule 40 (estatuto -> asignacion .)
    WHILE           reduce using rule 40 (estatuto -> asignacion .)
    CB              reduce using rule 40 (estatuto -> asignacion .)


state 35

    (41) estatuto -> condicion .

    ID              reduce using rule 41 (estatuto -> condicion .)
    CLASS           reduce using rule 41 (estatuto -> condicion .)
    CLASS_ID        reduce using rule 41 (estatuto -> condicion .)
    DEF             reduce using rule 41 (estatuto -> condicion .)
    RETURN          reduce using rule 41 (estatuto -> condicion .)
    PRINT           reduce using rule 41 (estatuto -> condicion .)
    IF              reduce using rule 41 (estatuto -> condicion .)
    FOR             reduce using rule 41 (estatuto -> condicion .)
    INT             reduce using rule 41 (estatuto -> condicion .)
    FLOAT           reduce using rule 41 (estatuto -> condicion .)
    CHAR            reduce using rule 41 (estatuto -> condicion .)
    DATAFRAME       reduce using rule 41 (estatuto -> condicion .)
    FILE            reduce using rule 41 (estatuto -> condicion .)
    WHILE           reduce using rule 41 (estatuto -> condicion .)
    CB              reduce using rule 41 (estatuto -> condicion .)


state 36

    (42) estatuto -> llamada . SC

    SC              shift and go to state 92


state 37

    (43) estatuto -> while .

    ID              reduce using rule 43 (estatuto -> while .)
    CLASS           reduce using rule 43 (estatuto -> while .)
    CLASS_ID        reduce using rule 43 (estatuto -> while .)
    DEF             reduce using rule 43 (estatuto -> while .)
    RETURN          reduce using rule 43 (estatuto -> while .)
    PRINT           reduce using rule 43 (estatuto -> while .)
    IF              reduce using rule 43 (estatuto -> while .)
    FOR             reduce using rule 43 (estatuto -> while .)
    INT             reduce using rule 43 (estatuto -> while .)
    FLOAT           reduce using rule 43 (estatuto -> while .)
    CHAR            reduce using rule 43 (estatuto -> while .)
    DATAFRAME       reduce using rule 43 (estatuto -> while .)
    FILE            reduce using rule 43 (estatuto -> while .)
    WHILE           reduce using rule 43 (estatuto -> while .)
    CB              reduce using rule 43 (estatuto -> while .)


state 38

    (44) estatuto -> for .

    ID              reduce using rule 44 (estatuto -> for .)
    CLASS           reduce using rule 44 (estatuto -> for .)
    CLASS_ID        reduce using rule 44 (estatuto -> for .)
    DEF             reduce using rule 44 (estatuto -> for .)
    RETURN          reduce using rule 44 (estatuto -> for .)
    PRINT           reduce using rule 44 (estatuto -> for .)
    IF              reduce using rule 44 (estatuto -> for .)
    FOR             reduce using rule 44 (estatuto -> for .)
    INT             reduce using rule 44 (estatuto -> for .)
    FLOAT           reduce using rule 44 (estatuto -> for .)
    CHAR            reduce using rule 44 (estatuto -> for .)
    DATAFRAME       reduce using rule 44 (estatuto -> for .)
    FILE            reduce using rule 44 (estatuto -> for .)
    WHILE           reduce using rule 44 (estatuto -> for .)
    CB              reduce using rule 44 (estatuto -> for .)


state 39

    (45) estatuto -> classcreate .

    ID              reduce using rule 45 (estatuto -> classcreate .)
    CLASS           reduce using rule 45 (estatuto -> classcreate .)
    CLASS_ID        reduce using rule 45 (estatuto -> classcreate .)
    DEF             reduce using rule 45 (estatuto -> classcreate .)
    RETURN          reduce using rule 45 (estatuto -> classcreate .)
    PRINT           reduce using rule 45 (estatuto -> classcreate .)
    IF              reduce using rule 45 (estatuto -> classcreate .)
    FOR             reduce using rule 45 (estatuto -> classcreate .)
    INT             reduce using rule 45 (estatuto -> classcreate .)
    FLOAT           reduce using rule 45 (estatuto -> classcreate .)
    CHAR            reduce using rule 45 (estatuto -> classcreate .)
    DATAFRAME       reduce using rule 45 (estatuto -> classcreate .)
    FILE            reduce using rule 45 (estatuto -> classcreate .)
    WHILE           reduce using rule 45 (estatuto -> classcreate .)
    CB              reduce using rule 45 (estatuto -> classcreate .)


state 40

    (46) estatuto -> vars .

    ID              reduce using rule 46 (estatuto -> vars .)
    CLASS           reduce using rule 46 (estatuto -> vars .)
    CLASS_ID        reduce using rule 46 (estatuto -> vars .)
    DEF             reduce using rule 46 (estatuto -> vars .)
    RETURN          reduce using rule 46 (estatuto -> vars .)
    PRINT           reduce using rule 46 (estatuto -> vars .)
    IF              reduce using rule 46 (estatuto -> vars .)
    FOR             reduce using rule 46 (estatuto -> vars .)
    INT             reduce using rule 46 (estatuto -> vars .)
    FLOAT           reduce using rule 46 (estatuto -> vars .)
    CHAR            reduce using rule 46 (estatuto -> vars .)
    DATAFRAME       reduce using rule 46 (estatuto -> vars .)
    FILE            reduce using rule 46 (estatuto -> vars .)
    WHILE           reduce using rule 46 (estatuto -> vars .)
    CB              reduce using rule 46 (estatuto -> vars .)


state 41

    (47) estatuto -> classdeclare .

    ID              reduce using rule 47 (estatuto -> classdeclare .)
    CLASS           reduce using rule 47 (estatuto -> classdeclare .)
    CLASS_ID        reduce using rule 47 (estatuto -> classdeclare .)
    DEF             reduce using rule 47 (estatuto -> classdeclare .)
    RETURN          reduce using rule 47 (estatuto -> classdeclare .)
    PRINT           reduce using rule 47 (estatuto -> classdeclare .)
    IF              reduce using rule 47 (estatuto -> classdeclare .)
    FOR             reduce using rule 47 (estatuto -> classdeclare .)
    INT             reduce using rule 47 (estatuto -> classdeclare .)
    FLOAT           reduce using rule 47 (estatuto -> classdeclare .)
    CHAR            reduce using rule 47 (estatuto -> classdeclare .)
    DATAFRAME       reduce using rule 47 (estatuto -> classdeclare .)
    FILE            reduce using rule 47 (estatuto -> classdeclare .)
    WHILE           reduce using rule 47 (estatuto -> classdeclare .)
    CB              reduce using rule 47 (estatuto -> classdeclare .)


state 42

    (48) estatuto -> llamadafuncionclase .

    ID              reduce using rule 48 (estatuto -> llamadafuncionclase .)
    CLASS           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    CLASS_ID        reduce using rule 48 (estatuto -> llamadafuncionclase .)
    DEF             reduce using rule 48 (estatuto -> llamadafuncionclase .)
    RETURN          reduce using rule 48 (estatuto -> llamadafuncionclase .)
    PRINT           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    IF              reduce using rule 48 (estatuto -> llamadafuncionclase .)
    FOR             reduce using rule 48 (estatuto -> llamadafuncionclase .)
    INT             reduce using rule 48 (estatuto -> llamadafuncionclase .)
    FLOAT           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    CHAR            reduce using rule 48 (estatuto -> llamadafuncionclase .)
    DATAFRAME       reduce using rule 48 (estatuto -> llamadafuncionclase .)
    FILE            reduce using rule 48 (estatuto -> llamadafuncionclase .)
    WHILE           reduce using rule 48 (estatuto -> llamadafuncionclase .)
    CB              reduce using rule 48 (estatuto -> llamadafuncionclase .)


state 43

    (49) estatuto -> function .

    ID              reduce using rule 49 (estatuto -> function .)
    CLASS           reduce using rule 49 (estatuto -> function .)
    CLASS_ID        reduce using rule 49 (estatuto -> function .)
    DEF             reduce using rule 49 (estatuto -> function .)
    RETURN          reduce using rule 49 (estatuto -> function .)
    PRINT           reduce using rule 49 (estatuto -> function .)
    IF              reduce using rule 49 (estatuto -> function .)
    FOR             reduce using rule 49 (estatuto -> function .)
    INT             reduce using rule 49 (estatuto -> function .)
    FLOAT           reduce using rule 49 (estatuto -> function .)
    CHAR            reduce using rule 49 (estatuto -> function .)
    DATAFRAME       reduce using rule 49 (estatuto -> function .)
    FILE            reduce using rule 49 (estatuto -> function .)
    WHILE           reduce using rule 49 (estatuto -> function .)
    CB              reduce using rule 49 (estatuto -> function .)


state 44

    (50) estatuto -> return .

    ID              reduce using rule 50 (estatuto -> return .)
    CLASS           reduce using rule 50 (estatuto -> return .)
    CLASS_ID        reduce using rule 50 (estatuto -> return .)
    DEF             reduce using rule 50 (estatuto -> return .)
    RETURN          reduce using rule 50 (estatuto -> return .)
    PRINT           reduce using rule 50 (estatuto -> return .)
    IF              reduce using rule 50 (estatuto -> return .)
    FOR             reduce using rule 50 (estatuto -> return .)
    INT             reduce using rule 50 (estatuto -> return .)
    FLOAT           reduce using rule 50 (estatuto -> return .)
    CHAR            reduce using rule 50 (estatuto -> return .)
    DATAFRAME       reduce using rule 50 (estatuto -> return .)
    FILE            reduce using rule 50 (estatuto -> return .)
    WHILE           reduce using rule 50 (estatuto -> return .)
    CB              reduce using rule 50 (estatuto -> return .)


state 45

    (51) estatuto -> print .

    ID              reduce using rule 51 (estatuto -> print .)
    CLASS           reduce using rule 51 (estatuto -> print .)
    CLASS_ID        reduce using rule 51 (estatuto -> print .)
    DEF             reduce using rule 51 (estatuto -> print .)
    RETURN          reduce using rule 51 (estatuto -> print .)
    PRINT           reduce using rule 51 (estatuto -> print .)
    IF              reduce using rule 51 (estatuto -> print .)
    FOR             reduce using rule 51 (estatuto -> print .)
    INT             reduce using rule 51 (estatuto -> print .)
    FLOAT           reduce using rule 51 (estatuto -> print .)
    CHAR            reduce using rule 51 (estatuto -> print .)
    DATAFRAME       reduce using rule 51 (estatuto -> print .)
    FILE            reduce using rule 51 (estatuto -> print .)
    WHILE           reduce using rule 51 (estatuto -> print .)
    CB              reduce using rule 51 (estatuto -> print .)


state 46

    (115) asignacion -> ID . asignacion_a asignacion_a EQ expresion SC
    (114) llamadafuncionclase -> ID . POINT llamada
    (34) tipocompuesto -> ID .
    (84) llamada_c -> ID .
    (116) asignacion_a -> . OSB exp CSB
    (117) asignacion_a -> . empty
    (134) empty -> .

  ! shift/reduce conflict for OSB resolved as shift
    POINT           shift and go to state 94
    ID              reduce using rule 34 (tipocompuesto -> ID .)
    OP              reduce using rule 84 (llamada_c -> ID .)
    OSB             shift and go to state 95
    EQ              reduce using rule 134 (empty -> .)

  ! OSB             [ reduce using rule 134 (empty -> .) ]

    asignacion_a                   shift and go to state 93
    empty                          shift and go to state 96

state 47

    (106) condicion -> condicion_c . bloque condicion_a
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 97

state 48

    (79) llamada -> llamada_d . llamada_a CP
    (80) llamada_a -> . llamada_e llamada_b
    (81) llamada_a -> . llamada_b
    (86) llamada_e -> . expresion
    (87) llamada_e -> . CTE_STRING
    (82) llamada_b -> . llamada_f llamada_a
    (83) llamada_b -> . empty
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (88) llamada_f -> . COMMA
    (134) empty -> .
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    CTE_STRING      shift and go to state 102
    COMMA           shift and go to state 105
    CP              reduce using rule 134 (empty -> .)
    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    llamada_d                      shift and go to state 48
    llamada_a                      shift and go to state 98
    llamada_e                      shift and go to state 99
    llamada_b                      shift and go to state 100
    expresion                      shift and go to state 101
    llamada_f                      shift and go to state 103
    empty                          shift and go to state 104
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 49

    (64) while -> while_b . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 106

state 50

    (73) for -> for_a . for_b bloque
    (75) for_b -> . for_e asignacionsencilla CP
    (78) for_e -> . for_d SC
    (77) for_d -> . for_c expresion
    (76) for_c -> . OP asignacionsencilla SC

    OP              shift and go to state 111

    for_b                          shift and go to state 107
    for_e                          shift and go to state 108
    for_d                          shift and go to state 109
    for_c                          shift and go to state 110

state 51

    (98) classcreate -> CLASS . CLASS_ID OB classcreate_a function classcreate_c CB

    CLASS_ID        shift and go to state 112


state 52

    (113) classdeclare -> CLASS_ID . ID SC

    ID              shift and go to state 113


state 53

    (7) vars -> tiposimple . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 27

    vars_a                         shift and go to state 22
    vars_b                         shift and go to state 24
    vars_c                         shift and go to state 25

state 54

    (119) function -> DEF . function_e bloque
    (127) function_e -> . function_c OP function_b CP vars
    (128) function_e -> . function_c OP function_b CP empty
    (125) function_c -> . function_a ID
    (120) function_a -> . VOID
    (121) function_a -> . tiposimple
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR

    VOID            shift and go to state 117
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    function_e                     shift and go to state 114
    function_c                     shift and go to state 115
    function_a                     shift and go to state 116
    tiposimple                     shift and go to state 118

state 55

    (52) return -> RETURN . expresion SC
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    expresion                      shift and go to state 119
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 56

    (89) print -> PRINT . OP expresion CP SC

    OP              shift and go to state 120


state 57

    (111) condicion_c -> IF . OP exp CP

    OP              shift and go to state 121


state 58

    (85) llamada_d -> llamada_c . OP

    OP              shift and go to state 122


state 59

    (66) while_b -> while_a . OP expresion CP

    OP              shift and go to state 123


state 60

    (74) for_a -> FOR .

    OP              reduce using rule 74 (for_a -> FOR .)


state 61

    (65) while_a -> WHILE .

    OP              reduce using rule 65 (while_a -> WHILE .)


state 62

    (7) vars -> tiposimple vars_a SC .

    INT             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FLOAT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CHAR            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DATAFRAME       reduce using rule 7 (vars -> tiposimple vars_a SC .)
    ID              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FILE            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    OB              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS_ID        reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DEF             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    RETURN          reduce using rule 7 (vars -> tiposimple vars_a SC .)
    PRINT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    IF              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FOR             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    WHILE           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CB              reduce using rule 7 (vars -> tiposimple vars_a SC .)


state 63

    (12) vars_b -> ID EQ . expresion
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    expresion                      shift and go to state 124
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 64

    (13) vars_c -> vars_b COMMA .

    ID              reduce using rule 13 (vars_c -> vars_b COMMA .)


state 65

    (10) vars_a -> vars_c vars_a .

    SC              reduce using rule 10 (vars_a -> vars_c vars_a .)


state 66

    (8) vars -> tipocompuesto vars_a SC .

    INT             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FLOAT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CHAR            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DATAFRAME       reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    ID              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FILE            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    OB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS_ID        reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DEF             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    RETURN          reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    PRINT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    IF              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FOR             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    WHILE           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)


state 67

    (14) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .

    INT             reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    FLOAT           reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    CHAR            reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    ID              reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    FILE            reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    OB              reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)
    DEF             reduce using rule 14 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a SC .)


state 68

    (15) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d . SC

    SC              shift and go to state 125


state 69

    (19) vars_vect_mat_d -> OSB . exp CSB
    (67) exp -> . and_exp
    (68) exp -> . exp_b exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (69) exp_b -> . and_exp OR
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    exp                            shift and go to state 126
    and_exp                        shift and go to state 71
    exp_b                          shift and go to state 72
    expresion                      shift and go to state 73
    and_exp_b                      shift and go to state 74
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 70

    (16) vars_vect_mat_a -> vars_vect_mat_c exp . CSB

    CSB             shift and go to state 127


state 71

    (67) exp -> and_exp .
    (69) exp_b -> and_exp . OR

    CSB             reduce using rule 67 (exp -> and_exp .)
    CP              reduce using rule 67 (exp -> and_exp .)
    OR              shift and go to state 128


state 72

    (68) exp -> exp_b . exp
    (67) exp -> . and_exp
    (68) exp -> . exp_b exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (69) exp_b -> . and_exp OR
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    exp_b                          shift and go to state 72
    exp                            shift and go to state 129
    and_exp                        shift and go to state 71
    expresion                      shift and go to state 73
    and_exp_b                      shift and go to state 74
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 73

    (70) and_exp -> expresion .
    (72) and_exp_b -> expresion . AND

    OR              reduce using rule 70 (and_exp -> expresion .)
    CSB             reduce using rule 70 (and_exp -> expresion .)
    CP              reduce using rule 70 (and_exp -> expresion .)
    AND             shift and go to state 130


state 74

    (71) and_exp -> and_exp_b . and_exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    and_exp_b                      shift and go to state 74
    and_exp                        shift and go to state 131
    expresion                      shift and go to state 73
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 75

    (53) expresion -> m_exp .
    (54) expresion -> m_exp . expresion_a m_exp
    (55) expresion_a -> . LT
    (56) expresion_a -> . GT
    (57) expresion_a -> . NE
    (58) expresion_a -> . EQEQ
    (59) expresion_a -> . LE
    (60) expresion_a -> . GE

    AND             reduce using rule 53 (expresion -> m_exp .)
    OR              reduce using rule 53 (expresion -> m_exp .)
    CSB             reduce using rule 53 (expresion -> m_exp .)
    COMMA           reduce using rule 53 (expresion -> m_exp .)
    CP              reduce using rule 53 (expresion -> m_exp .)
    SC              reduce using rule 53 (expresion -> m_exp .)
    LT              shift and go to state 133
    GT              shift and go to state 134
    NE              shift and go to state 135
    EQEQ            shift and go to state 136
    LE              shift and go to state 137
    GE              shift and go to state 138

    expresion_a                    shift and go to state 132

state 76

    (20) m_exp -> m_exp_b .
    (21) m_exp -> m_exp_b . m_exp_a m_exp
    (22) m_exp_a -> . ADD
    (23) m_exp_a -> . SUB

    LT              reduce using rule 20 (m_exp -> m_exp_b .)
    GT              reduce using rule 20 (m_exp -> m_exp_b .)
    NE              reduce using rule 20 (m_exp -> m_exp_b .)
    EQEQ            reduce using rule 20 (m_exp -> m_exp_b .)
    LE              reduce using rule 20 (m_exp -> m_exp_b .)
    GE              reduce using rule 20 (m_exp -> m_exp_b .)
    AND             reduce using rule 20 (m_exp -> m_exp_b .)
    OR              reduce using rule 20 (m_exp -> m_exp_b .)
    CSB             reduce using rule 20 (m_exp -> m_exp_b .)
    COMMA           reduce using rule 20 (m_exp -> m_exp_b .)
    CP              reduce using rule 20 (m_exp -> m_exp_b .)
    SC              reduce using rule 20 (m_exp -> m_exp_b .)
    ADD             shift and go to state 140
    SUB             shift and go to state 141

    m_exp_a                        shift and go to state 139

state 77

    (24) m_exp_b -> term .

    ADD             reduce using rule 24 (m_exp_b -> term .)
    SUB             reduce using rule 24 (m_exp_b -> term .)
    LT              reduce using rule 24 (m_exp_b -> term .)
    GT              reduce using rule 24 (m_exp_b -> term .)
    NE              reduce using rule 24 (m_exp_b -> term .)
    EQEQ            reduce using rule 24 (m_exp_b -> term .)
    LE              reduce using rule 24 (m_exp_b -> term .)
    GE              reduce using rule 24 (m_exp_b -> term .)
    AND             reduce using rule 24 (m_exp_b -> term .)
    OR              reduce using rule 24 (m_exp_b -> term .)
    CSB             reduce using rule 24 (m_exp_b -> term .)
    COMMA           reduce using rule 24 (m_exp_b -> term .)
    CP              reduce using rule 24 (m_exp_b -> term .)
    SC              reduce using rule 24 (m_exp_b -> term .)


state 78

    (25) term -> term_b .
    (26) term -> term_b . term_a term
    (27) term_a -> . MULT
    (28) term_a -> . DIV

    ADD             reduce using rule 25 (term -> term_b .)
    SUB             reduce using rule 25 (term -> term_b .)
    LT              reduce using rule 25 (term -> term_b .)
    GT              reduce using rule 25 (term -> term_b .)
    NE              reduce using rule 25 (term -> term_b .)
    EQEQ            reduce using rule 25 (term -> term_b .)
    LE              reduce using rule 25 (term -> term_b .)
    GE              reduce using rule 25 (term -> term_b .)
    AND             reduce using rule 25 (term -> term_b .)
    OR              reduce using rule 25 (term -> term_b .)
    CSB             reduce using rule 25 (term -> term_b .)
    COMMA           reduce using rule 25 (term -> term_b .)
    CP              reduce using rule 25 (term -> term_b .)
    SC              reduce using rule 25 (term -> term_b .)
    MULT            shift and go to state 143
    DIV             shift and go to state 144

    term_a                         shift and go to state 142

state 79

    (29) term_b -> fact .

    MULT            reduce using rule 29 (term_b -> fact .)
    DIV             reduce using rule 29 (term_b -> fact .)
    ADD             reduce using rule 29 (term_b -> fact .)
    SUB             reduce using rule 29 (term_b -> fact .)
    LT              reduce using rule 29 (term_b -> fact .)
    GT              reduce using rule 29 (term_b -> fact .)
    NE              reduce using rule 29 (term_b -> fact .)
    EQEQ            reduce using rule 29 (term_b -> fact .)
    LE              reduce using rule 29 (term_b -> fact .)
    GE              reduce using rule 29 (term_b -> fact .)
    AND             reduce using rule 29 (term_b -> fact .)
    OR              reduce using rule 29 (term_b -> fact .)
    CSB             reduce using rule 29 (term_b -> fact .)
    COMMA           reduce using rule 29 (term_b -> fact .)
    CP              reduce using rule 29 (term_b -> fact .)
    SC              reduce using rule 29 (term_b -> fact .)


state 80

    (90) fact -> OP . fact_a exp CP
    (97) fact_a -> . empty
    (134) empty -> .

    OP              reduce using rule 134 (empty -> .)
    CTE_I           reduce using rule 134 (empty -> .)
    CTE_F           reduce using rule 134 (empty -> .)
    CTE_CHAR        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)

    fact_a                         shift and go to state 145
    empty                          shift and go to state 146

state 81

    (91) fact -> CTE_I .

    MULT            reduce using rule 91 (fact -> CTE_I .)
    DIV             reduce using rule 91 (fact -> CTE_I .)
    ADD             reduce using rule 91 (fact -> CTE_I .)
    SUB             reduce using rule 91 (fact -> CTE_I .)
    LT              reduce using rule 91 (fact -> CTE_I .)
    GT              reduce using rule 91 (fact -> CTE_I .)
    NE              reduce using rule 91 (fact -> CTE_I .)
    EQEQ            reduce using rule 91 (fact -> CTE_I .)
    LE              reduce using rule 91 (fact -> CTE_I .)
    GE              reduce using rule 91 (fact -> CTE_I .)
    AND             reduce using rule 91 (fact -> CTE_I .)
    OR              reduce using rule 91 (fact -> CTE_I .)
    CSB             reduce using rule 91 (fact -> CTE_I .)
    COMMA           reduce using rule 91 (fact -> CTE_I .)
    CP              reduce using rule 91 (fact -> CTE_I .)
    SC              reduce using rule 91 (fact -> CTE_I .)


state 82

    (92) fact -> CTE_F .

    MULT            reduce using rule 92 (fact -> CTE_F .)
    DIV             reduce using rule 92 (fact -> CTE_F .)
    ADD             reduce using rule 92 (fact -> CTE_F .)
    SUB             reduce using rule 92 (fact -> CTE_F .)
    LT              reduce using rule 92 (fact -> CTE_F .)
    GT              reduce using rule 92 (fact -> CTE_F .)
    NE              reduce using rule 92 (fact -> CTE_F .)
    EQEQ            reduce using rule 92 (fact -> CTE_F .)
    LE              reduce using rule 92 (fact -> CTE_F .)
    GE              reduce using rule 92 (fact -> CTE_F .)
    AND             reduce using rule 92 (fact -> CTE_F .)
    OR              reduce using rule 92 (fact -> CTE_F .)
    CSB             reduce using rule 92 (fact -> CTE_F .)
    COMMA           reduce using rule 92 (fact -> CTE_F .)
    CP              reduce using rule 92 (fact -> CTE_F .)
    SC              reduce using rule 92 (fact -> CTE_F .)


state 83

    (93) fact -> CTE_CHAR .

    MULT            reduce using rule 93 (fact -> CTE_CHAR .)
    DIV             reduce using rule 93 (fact -> CTE_CHAR .)
    ADD             reduce using rule 93 (fact -> CTE_CHAR .)
    SUB             reduce using rule 93 (fact -> CTE_CHAR .)
    LT              reduce using rule 93 (fact -> CTE_CHAR .)
    GT              reduce using rule 93 (fact -> CTE_CHAR .)
    NE              reduce using rule 93 (fact -> CTE_CHAR .)
    EQEQ            reduce using rule 93 (fact -> CTE_CHAR .)
    LE              reduce using rule 93 (fact -> CTE_CHAR .)
    GE              reduce using rule 93 (fact -> CTE_CHAR .)
    AND             reduce using rule 93 (fact -> CTE_CHAR .)
    OR              reduce using rule 93 (fact -> CTE_CHAR .)
    CSB             reduce using rule 93 (fact -> CTE_CHAR .)
    COMMA           reduce using rule 93 (fact -> CTE_CHAR .)
    CP              reduce using rule 93 (fact -> CTE_CHAR .)
    SC              reduce using rule 93 (fact -> CTE_CHAR .)


state 84

    (94) fact -> ID .
    (84) llamada_c -> ID .
    (131) array_access_a -> ID .

    MULT            reduce using rule 94 (fact -> ID .)
    DIV             reduce using rule 94 (fact -> ID .)
    ADD             reduce using rule 94 (fact -> ID .)
    SUB             reduce using rule 94 (fact -> ID .)
    LT              reduce using rule 94 (fact -> ID .)
    GT              reduce using rule 94 (fact -> ID .)
    NE              reduce using rule 94 (fact -> ID .)
    EQEQ            reduce using rule 94 (fact -> ID .)
    LE              reduce using rule 94 (fact -> ID .)
    GE              reduce using rule 94 (fact -> ID .)
    AND             reduce using rule 94 (fact -> ID .)
    OR              reduce using rule 94 (fact -> ID .)
    CSB             reduce using rule 94 (fact -> ID .)
    COMMA           reduce using rule 94 (fact -> ID .)
    CP              reduce using rule 94 (fact -> ID .)
    SC              reduce using rule 94 (fact -> ID .)
    OP              reduce using rule 84 (llamada_c -> ID .)
    OSB             reduce using rule 131 (array_access_a -> ID .)


state 85

    (95) fact -> llamada .

    MULT            reduce using rule 95 (fact -> llamada .)
    DIV             reduce using rule 95 (fact -> llamada .)
    ADD             reduce using rule 95 (fact -> llamada .)
    SUB             reduce using rule 95 (fact -> llamada .)
    LT              reduce using rule 95 (fact -> llamada .)
    GT              reduce using rule 95 (fact -> llamada .)
    NE              reduce using rule 95 (fact -> llamada .)
    EQEQ            reduce using rule 95 (fact -> llamada .)
    LE              reduce using rule 95 (fact -> llamada .)
    GE              reduce using rule 95 (fact -> llamada .)
    AND             reduce using rule 95 (fact -> llamada .)
    OR              reduce using rule 95 (fact -> llamada .)
    CSB             reduce using rule 95 (fact -> llamada .)
    COMMA           reduce using rule 95 (fact -> llamada .)
    CP              reduce using rule 95 (fact -> llamada .)
    SC              reduce using rule 95 (fact -> llamada .)


state 86

    (96) fact -> array_access .

    MULT            reduce using rule 96 (fact -> array_access .)
    DIV             reduce using rule 96 (fact -> array_access .)
    ADD             reduce using rule 96 (fact -> array_access .)
    SUB             reduce using rule 96 (fact -> array_access .)
    LT              reduce using rule 96 (fact -> array_access .)
    GT              reduce using rule 96 (fact -> array_access .)
    NE              reduce using rule 96 (fact -> array_access .)
    EQEQ            reduce using rule 96 (fact -> array_access .)
    LE              reduce using rule 96 (fact -> array_access .)
    GE              reduce using rule 96 (fact -> array_access .)
    AND             reduce using rule 96 (fact -> array_access .)
    OR              reduce using rule 96 (fact -> array_access .)
    CSB             reduce using rule 96 (fact -> array_access .)
    COMMA           reduce using rule 96 (fact -> array_access .)
    CP              reduce using rule 96 (fact -> array_access .)
    SC              reduce using rule 96 (fact -> array_access .)


state 87

    (129) array_access -> array_access_c . OSB exp CSB
    (130) array_access -> array_access_c .

    OSB             shift and go to state 147
    MULT            reduce using rule 130 (array_access -> array_access_c .)
    DIV             reduce using rule 130 (array_access -> array_access_c .)
    ADD             reduce using rule 130 (array_access -> array_access_c .)
    SUB             reduce using rule 130 (array_access -> array_access_c .)
    LT              reduce using rule 130 (array_access -> array_access_c .)
    GT              reduce using rule 130 (array_access -> array_access_c .)
    NE              reduce using rule 130 (array_access -> array_access_c .)
    EQEQ            reduce using rule 130 (array_access -> array_access_c .)
    LE              reduce using rule 130 (array_access -> array_access_c .)
    GE              reduce using rule 130 (array_access -> array_access_c .)
    AND             reduce using rule 130 (array_access -> array_access_c .)
    OR              reduce using rule 130 (array_access -> array_access_c .)
    CSB             reduce using rule 130 (array_access -> array_access_c .)
    COMMA           reduce using rule 130 (array_access -> array_access_c .)
    CP              reduce using rule 130 (array_access -> array_access_c .)
    SC              reduce using rule 130 (array_access -> array_access_c .)


state 88

    (133) array_access_c -> array_access_b . exp CSB
    (67) exp -> . and_exp
    (68) exp -> . exp_b exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (69) exp_b -> . and_exp OR
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    array_access_b                 shift and go to state 88
    exp                            shift and go to state 148
    and_exp                        shift and go to state 71
    exp_b                          shift and go to state 72
    expresion                      shift and go to state 73
    and_exp_b                      shift and go to state 74
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_a                 shift and go to state 89

state 89

    (132) array_access_b -> array_access_a . OSB

    OSB             shift and go to state 149


state 90

    (36) bloque -> OB bloque_a CB .

    $end            reduce using rule 36 (bloque -> OB bloque_a CB .)
    ELSE            reduce using rule 36 (bloque -> OB bloque_a CB .)
    ID              reduce using rule 36 (bloque -> OB bloque_a CB .)
    CLASS           reduce using rule 36 (bloque -> OB bloque_a CB .)
    CLASS_ID        reduce using rule 36 (bloque -> OB bloque_a CB .)
    DEF             reduce using rule 36 (bloque -> OB bloque_a CB .)
    RETURN          reduce using rule 36 (bloque -> OB bloque_a CB .)
    PRINT           reduce using rule 36 (bloque -> OB bloque_a CB .)
    IF              reduce using rule 36 (bloque -> OB bloque_a CB .)
    FOR             reduce using rule 36 (bloque -> OB bloque_a CB .)
    INT             reduce using rule 36 (bloque -> OB bloque_a CB .)
    FLOAT           reduce using rule 36 (bloque -> OB bloque_a CB .)
    CHAR            reduce using rule 36 (bloque -> OB bloque_a CB .)
    DATAFRAME       reduce using rule 36 (bloque -> OB bloque_a CB .)
    FILE            reduce using rule 36 (bloque -> OB bloque_a CB .)
    WHILE           reduce using rule 36 (bloque -> OB bloque_a CB .)
    CB              reduce using rule 36 (bloque -> OB bloque_a CB .)
    OB              reduce using rule 36 (bloque -> OB bloque_a CB .)


state 91

    (37) bloque_a -> estatuto bloque_a .

    CB              reduce using rule 37 (bloque_a -> estatuto bloque_a .)


state 92

    (42) estatuto -> llamada SC .

    ID              reduce using rule 42 (estatuto -> llamada SC .)
    CLASS           reduce using rule 42 (estatuto -> llamada SC .)
    CLASS_ID        reduce using rule 42 (estatuto -> llamada SC .)
    DEF             reduce using rule 42 (estatuto -> llamada SC .)
    RETURN          reduce using rule 42 (estatuto -> llamada SC .)
    PRINT           reduce using rule 42 (estatuto -> llamada SC .)
    IF              reduce using rule 42 (estatuto -> llamada SC .)
    FOR             reduce using rule 42 (estatuto -> llamada SC .)
    INT             reduce using rule 42 (estatuto -> llamada SC .)
    FLOAT           reduce using rule 42 (estatuto -> llamada SC .)
    CHAR            reduce using rule 42 (estatuto -> llamada SC .)
    DATAFRAME       reduce using rule 42 (estatuto -> llamada SC .)
    FILE            reduce using rule 42 (estatuto -> llamada SC .)
    WHILE           reduce using rule 42 (estatuto -> llamada SC .)
    CB              reduce using rule 42 (estatuto -> llamada SC .)


state 93

    (115) asignacion -> ID asignacion_a . asignacion_a EQ expresion SC
    (116) asignacion_a -> . OSB exp CSB
    (117) asignacion_a -> . empty
    (134) empty -> .

    OSB             shift and go to state 95
    EQ              reduce using rule 134 (empty -> .)

    asignacion_a                   shift and go to state 150
    empty                          shift and go to state 96

state 94

    (114) llamadafuncionclase -> ID POINT . llamada
    (79) llamada -> . llamada_d llamada_a CP
    (85) llamada_d -> . llamada_c OP
    (84) llamada_c -> . ID

    ID              shift and go to state 151

    llamada                        shift and go to state 152
    llamada_d                      shift and go to state 48
    llamada_c                      shift and go to state 58

state 95

    (116) asignacion_a -> OSB . exp CSB
    (67) exp -> . and_exp
    (68) exp -> . exp_b exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (69) exp_b -> . and_exp OR
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    exp                            shift and go to state 153
    and_exp                        shift and go to state 71
    exp_b                          shift and go to state 72
    expresion                      shift and go to state 73
    and_exp_b                      shift and go to state 74
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 96

    (117) asignacion_a -> empty .

    OSB             reduce using rule 117 (asignacion_a -> empty .)
    EQ              reduce using rule 117 (asignacion_a -> empty .)


state 97

    (106) condicion -> condicion_c bloque . condicion_a
    (107) condicion_a -> . condicion_d condicion_b bloque
    (108) condicion_a -> . empty
    (112) condicion_d -> . ELSE
    (134) empty -> .

    ELSE            shift and go to state 157
    ID              reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    CLASS_ID        reduce using rule 134 (empty -> .)
    DEF             reduce using rule 134 (empty -> .)
    RETURN          reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    INT             reduce using rule 134 (empty -> .)
    FLOAT           reduce using rule 134 (empty -> .)
    CHAR            reduce using rule 134 (empty -> .)
    DATAFRAME       reduce using rule 134 (empty -> .)
    FILE            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    CB              reduce using rule 134 (empty -> .)
    OB              reduce using rule 134 (empty -> .)

    condicion_a                    shift and go to state 154
    condicion_d                    shift and go to state 155
    empty                          shift and go to state 156

state 98

    (79) llamada -> llamada_d llamada_a . CP

    CP              shift and go to state 158


state 99

    (80) llamada_a -> llamada_e . llamada_b
    (82) llamada_b -> . llamada_f llamada_a
    (83) llamada_b -> . empty
    (88) llamada_f -> . COMMA
    (134) empty -> .

    COMMA           shift and go to state 105
    CP              reduce using rule 134 (empty -> .)

    llamada_b                      shift and go to state 159
    llamada_f                      shift and go to state 103
    empty                          shift and go to state 104

state 100

    (81) llamada_a -> llamada_b .

    CP              reduce using rule 81 (llamada_a -> llamada_b .)


state 101

    (86) llamada_e -> expresion .

    COMMA           reduce using rule 86 (llamada_e -> expresion .)
    CP              reduce using rule 86 (llamada_e -> expresion .)


state 102

    (87) llamada_e -> CTE_STRING .

    COMMA           reduce using rule 87 (llamada_e -> CTE_STRING .)
    CP              reduce using rule 87 (llamada_e -> CTE_STRING .)


state 103

    (82) llamada_b -> llamada_f . llamada_a
    (80) llamada_a -> . llamada_e llamada_b
    (81) llamada_a -> . llamada_b
    (86) llamada_e -> . expresion
    (87) llamada_e -> . CTE_STRING
    (82) llamada_b -> . llamada_f llamada_a
    (83) llamada_b -> . empty
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (88) llamada_f -> . COMMA
    (134) empty -> .
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    CTE_STRING      shift and go to state 102
    COMMA           shift and go to state 105
    CP              reduce using rule 134 (empty -> .)
    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    llamada_f                      shift and go to state 103
    llamada_a                      shift and go to state 160
    llamada_e                      shift and go to state 99
    llamada_b                      shift and go to state 100
    expresion                      shift and go to state 101
    empty                          shift and go to state 104
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 104

    (83) llamada_b -> empty .

    CP              reduce using rule 83 (llamada_b -> empty .)


state 105

    (88) llamada_f -> COMMA .

    CTE_STRING      reduce using rule 88 (llamada_f -> COMMA .)
    COMMA           reduce using rule 88 (llamada_f -> COMMA .)
    OP              reduce using rule 88 (llamada_f -> COMMA .)
    CTE_I           reduce using rule 88 (llamada_f -> COMMA .)
    CTE_F           reduce using rule 88 (llamada_f -> COMMA .)
    CTE_CHAR        reduce using rule 88 (llamada_f -> COMMA .)
    ID              reduce using rule 88 (llamada_f -> COMMA .)
    CP              reduce using rule 88 (llamada_f -> COMMA .)


state 106

    (64) while -> while_b bloque .

    ID              reduce using rule 64 (while -> while_b bloque .)
    CLASS           reduce using rule 64 (while -> while_b bloque .)
    CLASS_ID        reduce using rule 64 (while -> while_b bloque .)
    DEF             reduce using rule 64 (while -> while_b bloque .)
    RETURN          reduce using rule 64 (while -> while_b bloque .)
    PRINT           reduce using rule 64 (while -> while_b bloque .)
    IF              reduce using rule 64 (while -> while_b bloque .)
    FOR             reduce using rule 64 (while -> while_b bloque .)
    INT             reduce using rule 64 (while -> while_b bloque .)
    FLOAT           reduce using rule 64 (while -> while_b bloque .)
    CHAR            reduce using rule 64 (while -> while_b bloque .)
    DATAFRAME       reduce using rule 64 (while -> while_b bloque .)
    FILE            reduce using rule 64 (while -> while_b bloque .)
    WHILE           reduce using rule 64 (while -> while_b bloque .)
    CB              reduce using rule 64 (while -> while_b bloque .)


state 107

    (73) for -> for_a for_b . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 161

state 108

    (75) for_b -> for_e . asignacionsencilla CP
    (118) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 163

    asignacionsencilla             shift and go to state 162

state 109

    (78) for_e -> for_d . SC

    SC              shift and go to state 164


state 110

    (77) for_d -> for_c . expresion
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    expresion                      shift and go to state 165
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 111

    (76) for_c -> OP . asignacionsencilla SC
    (118) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 163

    asignacionsencilla             shift and go to state 166

state 112

    (98) classcreate -> CLASS CLASS_ID . OB classcreate_a function classcreate_c CB

    OB              shift and go to state 167


state 113

    (113) classdeclare -> CLASS_ID ID . SC

    SC              shift and go to state 168


state 114

    (119) function -> DEF function_e . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 169

state 115

    (127) function_e -> function_c . OP function_b CP vars
    (128) function_e -> function_c . OP function_b CP empty

    OP              shift and go to state 170


state 116

    (125) function_c -> function_a . ID

    ID              shift and go to state 171


state 117

    (120) function_a -> VOID .

    ID              reduce using rule 120 (function_a -> VOID .)


state 118

    (121) function_a -> tiposimple .

    ID              reduce using rule 121 (function_a -> tiposimple .)


state 119

    (52) return -> RETURN expresion . SC

    SC              shift and go to state 172


state 120

    (89) print -> PRINT OP . expresion CP SC
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    expresion                      shift and go to state 173
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 121

    (111) condicion_c -> IF OP . exp CP
    (67) exp -> . and_exp
    (68) exp -> . exp_b exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (69) exp_b -> . and_exp OR
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    exp                            shift and go to state 174
    and_exp                        shift and go to state 71
    exp_b                          shift and go to state 72
    expresion                      shift and go to state 73
    and_exp_b                      shift and go to state 74
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 122

    (85) llamada_d -> llamada_c OP .

    CTE_STRING      reduce using rule 85 (llamada_d -> llamada_c OP .)
    COMMA           reduce using rule 85 (llamada_d -> llamada_c OP .)
    OP              reduce using rule 85 (llamada_d -> llamada_c OP .)
    CTE_I           reduce using rule 85 (llamada_d -> llamada_c OP .)
    CTE_F           reduce using rule 85 (llamada_d -> llamada_c OP .)
    CTE_CHAR        reduce using rule 85 (llamada_d -> llamada_c OP .)
    ID              reduce using rule 85 (llamada_d -> llamada_c OP .)
    CP              reduce using rule 85 (llamada_d -> llamada_c OP .)


state 123

    (66) while_b -> while_a OP . expresion CP
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    expresion                      shift and go to state 175
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 124

    (12) vars_b -> ID EQ expresion .

    COMMA           reduce using rule 12 (vars_b -> ID EQ expresion .)
    SC              reduce using rule 12 (vars_b -> ID EQ expresion .)


state 125

    (15) vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .

    INT             reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    FLOAT           reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    CHAR            reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    DATAFRAME       reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    ID              reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    FILE            reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    OB              reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)
    DEF             reduce using rule 15 (vars_vect_mat -> vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC .)


state 126

    (19) vars_vect_mat_d -> OSB exp . CSB

    CSB             shift and go to state 176


state 127

    (16) vars_vect_mat_a -> vars_vect_mat_c exp CSB .

    SC              reduce using rule 16 (vars_vect_mat_a -> vars_vect_mat_c exp CSB .)
    OSB             reduce using rule 16 (vars_vect_mat_a -> vars_vect_mat_c exp CSB .)


state 128

    (69) exp_b -> and_exp OR .

    OP              reduce using rule 69 (exp_b -> and_exp OR .)
    CTE_I           reduce using rule 69 (exp_b -> and_exp OR .)
    CTE_F           reduce using rule 69 (exp_b -> and_exp OR .)
    CTE_CHAR        reduce using rule 69 (exp_b -> and_exp OR .)
    ID              reduce using rule 69 (exp_b -> and_exp OR .)


state 129

    (68) exp -> exp_b exp .

    CSB             reduce using rule 68 (exp -> exp_b exp .)
    CP              reduce using rule 68 (exp -> exp_b exp .)


state 130

    (72) and_exp_b -> expresion AND .

    OP              reduce using rule 72 (and_exp_b -> expresion AND .)
    CTE_I           reduce using rule 72 (and_exp_b -> expresion AND .)
    CTE_F           reduce using rule 72 (and_exp_b -> expresion AND .)
    CTE_CHAR        reduce using rule 72 (and_exp_b -> expresion AND .)
    ID              reduce using rule 72 (and_exp_b -> expresion AND .)


state 131

    (71) and_exp -> and_exp_b and_exp .

    OR              reduce using rule 71 (and_exp -> and_exp_b and_exp .)
    CSB             reduce using rule 71 (and_exp -> and_exp_b and_exp .)
    CP              reduce using rule 71 (and_exp -> and_exp_b and_exp .)


state 132

    (54) expresion -> m_exp expresion_a . m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    m_exp                          shift and go to state 177
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 133

    (55) expresion_a -> LT .

    OP              reduce using rule 55 (expresion_a -> LT .)
    CTE_I           reduce using rule 55 (expresion_a -> LT .)
    CTE_F           reduce using rule 55 (expresion_a -> LT .)
    CTE_CHAR        reduce using rule 55 (expresion_a -> LT .)
    ID              reduce using rule 55 (expresion_a -> LT .)


state 134

    (56) expresion_a -> GT .

    OP              reduce using rule 56 (expresion_a -> GT .)
    CTE_I           reduce using rule 56 (expresion_a -> GT .)
    CTE_F           reduce using rule 56 (expresion_a -> GT .)
    CTE_CHAR        reduce using rule 56 (expresion_a -> GT .)
    ID              reduce using rule 56 (expresion_a -> GT .)


state 135

    (57) expresion_a -> NE .

    OP              reduce using rule 57 (expresion_a -> NE .)
    CTE_I           reduce using rule 57 (expresion_a -> NE .)
    CTE_F           reduce using rule 57 (expresion_a -> NE .)
    CTE_CHAR        reduce using rule 57 (expresion_a -> NE .)
    ID              reduce using rule 57 (expresion_a -> NE .)


state 136

    (58) expresion_a -> EQEQ .

    OP              reduce using rule 58 (expresion_a -> EQEQ .)
    CTE_I           reduce using rule 58 (expresion_a -> EQEQ .)
    CTE_F           reduce using rule 58 (expresion_a -> EQEQ .)
    CTE_CHAR        reduce using rule 58 (expresion_a -> EQEQ .)
    ID              reduce using rule 58 (expresion_a -> EQEQ .)


state 137

    (59) expresion_a -> LE .

    OP              reduce using rule 59 (expresion_a -> LE .)
    CTE_I           reduce using rule 59 (expresion_a -> LE .)
    CTE_F           reduce using rule 59 (expresion_a -> LE .)
    CTE_CHAR        reduce using rule 59 (expresion_a -> LE .)
    ID              reduce using rule 59 (expresion_a -> LE .)


state 138

    (60) expresion_a -> GE .

    OP              reduce using rule 60 (expresion_a -> GE .)
    CTE_I           reduce using rule 60 (expresion_a -> GE .)
    CTE_F           reduce using rule 60 (expresion_a -> GE .)
    CTE_CHAR        reduce using rule 60 (expresion_a -> GE .)
    ID              reduce using rule 60 (expresion_a -> GE .)


state 139

    (21) m_exp -> m_exp_b m_exp_a . m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    m_exp_b                        shift and go to state 76
    m_exp                          shift and go to state 178
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 140

    (22) m_exp_a -> ADD .

    OP              reduce using rule 22 (m_exp_a -> ADD .)
    CTE_I           reduce using rule 22 (m_exp_a -> ADD .)
    CTE_F           reduce using rule 22 (m_exp_a -> ADD .)
    CTE_CHAR        reduce using rule 22 (m_exp_a -> ADD .)
    ID              reduce using rule 22 (m_exp_a -> ADD .)


state 141

    (23) m_exp_a -> SUB .

    OP              reduce using rule 23 (m_exp_a -> SUB .)
    CTE_I           reduce using rule 23 (m_exp_a -> SUB .)
    CTE_F           reduce using rule 23 (m_exp_a -> SUB .)
    CTE_CHAR        reduce using rule 23 (m_exp_a -> SUB .)
    ID              reduce using rule 23 (m_exp_a -> SUB .)


state 142

    (26) term -> term_b term_a . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    term_b                         shift and go to state 78
    term                           shift and go to state 179
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 143

    (27) term_a -> MULT .

    OP              reduce using rule 27 (term_a -> MULT .)
    CTE_I           reduce using rule 27 (term_a -> MULT .)
    CTE_F           reduce using rule 27 (term_a -> MULT .)
    CTE_CHAR        reduce using rule 27 (term_a -> MULT .)
    ID              reduce using rule 27 (term_a -> MULT .)


state 144

    (28) term_a -> DIV .

    OP              reduce using rule 28 (term_a -> DIV .)
    CTE_I           reduce using rule 28 (term_a -> DIV .)
    CTE_F           reduce using rule 28 (term_a -> DIV .)
    CTE_CHAR        reduce using rule 28 (term_a -> DIV .)
    ID              reduce using rule 28 (term_a -> DIV .)


state 145

    (90) fact -> OP fact_a . exp CP
    (67) exp -> . and_exp
    (68) exp -> . exp_b exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (69) exp_b -> . and_exp OR
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    exp                            shift and go to state 180
    and_exp                        shift and go to state 71
    exp_b                          shift and go to state 72
    expresion                      shift and go to state 73
    and_exp_b                      shift and go to state 74
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 146

    (97) fact_a -> empty .

    OP              reduce using rule 97 (fact_a -> empty .)
    CTE_I           reduce using rule 97 (fact_a -> empty .)
    CTE_F           reduce using rule 97 (fact_a -> empty .)
    CTE_CHAR        reduce using rule 97 (fact_a -> empty .)
    ID              reduce using rule 97 (fact_a -> empty .)


state 147

    (129) array_access -> array_access_c OSB . exp CSB
    (67) exp -> . and_exp
    (68) exp -> . exp_b exp
    (70) and_exp -> . expresion
    (71) and_exp -> . and_exp_b and_exp
    (69) exp_b -> . and_exp OR
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (72) and_exp_b -> . expresion AND
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    array_access_c                 shift and go to state 87
    exp                            shift and go to state 181
    and_exp                        shift and go to state 71
    exp_b                          shift and go to state 72
    expresion                      shift and go to state 73
    and_exp_b                      shift and go to state 74
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 148

    (133) array_access_c -> array_access_b exp . CSB

    CSB             shift and go to state 182


state 149

    (132) array_access_b -> array_access_a OSB .

    OP              reduce using rule 132 (array_access_b -> array_access_a OSB .)
    CTE_I           reduce using rule 132 (array_access_b -> array_access_a OSB .)
    CTE_F           reduce using rule 132 (array_access_b -> array_access_a OSB .)
    CTE_CHAR        reduce using rule 132 (array_access_b -> array_access_a OSB .)
    ID              reduce using rule 132 (array_access_b -> array_access_a OSB .)


state 150

    (115) asignacion -> ID asignacion_a asignacion_a . EQ expresion SC

    EQ              shift and go to state 183


state 151

    (84) llamada_c -> ID .

    OP              reduce using rule 84 (llamada_c -> ID .)


state 152

    (114) llamadafuncionclase -> ID POINT llamada .

    ID              reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    CLASS           reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    CLASS_ID        reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    DEF             reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    RETURN          reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    PRINT           reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    IF              reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    FOR             reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    INT             reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    FLOAT           reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    CHAR            reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    DATAFRAME       reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    FILE            reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    WHILE           reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)
    CB              reduce using rule 114 (llamadafuncionclase -> ID POINT llamada .)


state 153

    (116) asignacion_a -> OSB exp . CSB

    CSB             shift and go to state 184


state 154

    (106) condicion -> condicion_c bloque condicion_a .

    ID              reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    CLASS           reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    CLASS_ID        reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    DEF             reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    RETURN          reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    PRINT           reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    IF              reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    FOR             reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    INT             reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    FLOAT           reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    CHAR            reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    DATAFRAME       reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    FILE            reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    WHILE           reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    CB              reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)
    OB              reduce using rule 106 (condicion -> condicion_c bloque condicion_a .)


state 155

    (107) condicion_a -> condicion_d . condicion_b bloque
    (109) condicion_b -> . condicion
    (110) condicion_b -> . empty
    (106) condicion -> . condicion_c bloque condicion_a
    (134) empty -> .
    (111) condicion_c -> . IF OP exp CP

    OB              reduce using rule 134 (empty -> .)
    IF              shift and go to state 57

    condicion_b                    shift and go to state 185
    condicion                      shift and go to state 186
    empty                          shift and go to state 187
    condicion_c                    shift and go to state 47

state 156

    (108) condicion_a -> empty .

    ID              reduce using rule 108 (condicion_a -> empty .)
    CLASS           reduce using rule 108 (condicion_a -> empty .)
    CLASS_ID        reduce using rule 108 (condicion_a -> empty .)
    DEF             reduce using rule 108 (condicion_a -> empty .)
    RETURN          reduce using rule 108 (condicion_a -> empty .)
    PRINT           reduce using rule 108 (condicion_a -> empty .)
    IF              reduce using rule 108 (condicion_a -> empty .)
    FOR             reduce using rule 108 (condicion_a -> empty .)
    INT             reduce using rule 108 (condicion_a -> empty .)
    FLOAT           reduce using rule 108 (condicion_a -> empty .)
    CHAR            reduce using rule 108 (condicion_a -> empty .)
    DATAFRAME       reduce using rule 108 (condicion_a -> empty .)
    FILE            reduce using rule 108 (condicion_a -> empty .)
    WHILE           reduce using rule 108 (condicion_a -> empty .)
    CB              reduce using rule 108 (condicion_a -> empty .)
    OB              reduce using rule 108 (condicion_a -> empty .)


state 157

    (112) condicion_d -> ELSE .

    IF              reduce using rule 112 (condicion_d -> ELSE .)
    OB              reduce using rule 112 (condicion_d -> ELSE .)


state 158

    (79) llamada -> llamada_d llamada_a CP .

    SC              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    MULT            reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    DIV             reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    ADD             reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    SUB             reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    LT              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    GT              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    NE              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    EQEQ            reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    LE              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    GE              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    AND             reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    OR              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    CSB             reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    COMMA           reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    CP              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    ID              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    CLASS           reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    CLASS_ID        reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    DEF             reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    RETURN          reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    PRINT           reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    IF              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    FOR             reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    INT             reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    FLOAT           reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    CHAR            reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    DATAFRAME       reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    FILE            reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    WHILE           reduce using rule 79 (llamada -> llamada_d llamada_a CP .)
    CB              reduce using rule 79 (llamada -> llamada_d llamada_a CP .)


state 159

    (80) llamada_a -> llamada_e llamada_b .

    CP              reduce using rule 80 (llamada_a -> llamada_e llamada_b .)


state 160

    (82) llamada_b -> llamada_f llamada_a .

    CP              reduce using rule 82 (llamada_b -> llamada_f llamada_a .)


state 161

    (73) for -> for_a for_b bloque .

    ID              reduce using rule 73 (for -> for_a for_b bloque .)
    CLASS           reduce using rule 73 (for -> for_a for_b bloque .)
    CLASS_ID        reduce using rule 73 (for -> for_a for_b bloque .)
    DEF             reduce using rule 73 (for -> for_a for_b bloque .)
    RETURN          reduce using rule 73 (for -> for_a for_b bloque .)
    PRINT           reduce using rule 73 (for -> for_a for_b bloque .)
    IF              reduce using rule 73 (for -> for_a for_b bloque .)
    FOR             reduce using rule 73 (for -> for_a for_b bloque .)
    INT             reduce using rule 73 (for -> for_a for_b bloque .)
    FLOAT           reduce using rule 73 (for -> for_a for_b bloque .)
    CHAR            reduce using rule 73 (for -> for_a for_b bloque .)
    DATAFRAME       reduce using rule 73 (for -> for_a for_b bloque .)
    FILE            reduce using rule 73 (for -> for_a for_b bloque .)
    WHILE           reduce using rule 73 (for -> for_a for_b bloque .)
    CB              reduce using rule 73 (for -> for_a for_b bloque .)


state 162

    (75) for_b -> for_e asignacionsencilla . CP

    CP              shift and go to state 188


state 163

    (118) asignacionsencilla -> ID . EQ expresion

    EQ              shift and go to state 189


state 164

    (78) for_e -> for_d SC .

    ID              reduce using rule 78 (for_e -> for_d SC .)


state 165

    (77) for_d -> for_c expresion .

    SC              reduce using rule 77 (for_d -> for_c expresion .)


state 166

    (76) for_c -> OP asignacionsencilla . SC

    SC              shift and go to state 190


state 167

    (98) classcreate -> CLASS CLASS_ID OB . classcreate_a function classcreate_c CB
    (99) classcreate_a -> . vars classcreate_a
    (100) classcreate_a -> . vars_vect_mat classcreate_a
    (101) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (134) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

    DEF             reduce using rule 134 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    classcreate_a                  shift and go to state 191
    vars                           shift and go to state 192
    vars_vect_mat                  shift and go to state 193
    empty                          shift and go to state 194
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 168

    (113) classdeclare -> CLASS_ID ID SC .

    ID              reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    CLASS           reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    CLASS_ID        reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    DEF             reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    RETURN          reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    PRINT           reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    IF              reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    FOR             reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    INT             reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    FLOAT           reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    CHAR            reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    DATAFRAME       reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    FILE            reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    WHILE           reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)
    CB              reduce using rule 113 (classdeclare -> CLASS_ID ID SC .)


state 169

    (119) function -> DEF function_e bloque .

    ID              reduce using rule 119 (function -> DEF function_e bloque .)
    CLASS           reduce using rule 119 (function -> DEF function_e bloque .)
    CLASS_ID        reduce using rule 119 (function -> DEF function_e bloque .)
    DEF             reduce using rule 119 (function -> DEF function_e bloque .)
    RETURN          reduce using rule 119 (function -> DEF function_e bloque .)
    PRINT           reduce using rule 119 (function -> DEF function_e bloque .)
    IF              reduce using rule 119 (function -> DEF function_e bloque .)
    FOR             reduce using rule 119 (function -> DEF function_e bloque .)
    INT             reduce using rule 119 (function -> DEF function_e bloque .)
    FLOAT           reduce using rule 119 (function -> DEF function_e bloque .)
    CHAR            reduce using rule 119 (function -> DEF function_e bloque .)
    DATAFRAME       reduce using rule 119 (function -> DEF function_e bloque .)
    FILE            reduce using rule 119 (function -> DEF function_e bloque .)
    WHILE           reduce using rule 119 (function -> DEF function_e bloque .)
    CB              reduce using rule 119 (function -> DEF function_e bloque .)


state 170

    (127) function_e -> function_c OP . function_b CP vars
    (128) function_e -> function_c OP . function_b CP empty
    (122) function_b -> . function_d
    (123) function_b -> . function_d COMMA function_b
    (124) function_b -> . empty
    (126) function_d -> . tiposimple ID
    (134) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR

    CP              reduce using rule 134 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    function_b                     shift and go to state 195
    empty                          shift and go to state 196
    function_d                     shift and go to state 197
    tiposimple                     shift and go to state 198

state 171

    (125) function_c -> function_a ID .

    OP              reduce using rule 125 (function_c -> function_a ID .)


state 172

    (52) return -> RETURN expresion SC .

    ID              reduce using rule 52 (return -> RETURN expresion SC .)
    CLASS           reduce using rule 52 (return -> RETURN expresion SC .)
    CLASS_ID        reduce using rule 52 (return -> RETURN expresion SC .)
    DEF             reduce using rule 52 (return -> RETURN expresion SC .)
    RETURN          reduce using rule 52 (return -> RETURN expresion SC .)
    PRINT           reduce using rule 52 (return -> RETURN expresion SC .)
    IF              reduce using rule 52 (return -> RETURN expresion SC .)
    FOR             reduce using rule 52 (return -> RETURN expresion SC .)
    INT             reduce using rule 52 (return -> RETURN expresion SC .)
    FLOAT           reduce using rule 52 (return -> RETURN expresion SC .)
    CHAR            reduce using rule 52 (return -> RETURN expresion SC .)
    DATAFRAME       reduce using rule 52 (return -> RETURN expresion SC .)
    FILE            reduce using rule 52 (return -> RETURN expresion SC .)
    WHILE           reduce using rule 52 (return -> RETURN expresion SC .)
    CB              reduce using rule 52 (return -> RETURN expresion SC .)


state 173

    (89) print -> PRINT OP expresion . CP SC

    CP              shift and go to state 199


state 174

    (111) condicion_c -> IF OP exp . CP

    CP              shift and go to state 200


state 175

    (66) while_b -> while_a OP expresion . CP

    CP              shift and go to state 201


state 176

    (19) vars_vect_mat_d -> OSB exp CSB .

    SC              reduce using rule 19 (vars_vect_mat_d -> OSB exp CSB .)


state 177

    (54) expresion -> m_exp expresion_a m_exp .

    AND             reduce using rule 54 (expresion -> m_exp expresion_a m_exp .)
    OR              reduce using rule 54 (expresion -> m_exp expresion_a m_exp .)
    CSB             reduce using rule 54 (expresion -> m_exp expresion_a m_exp .)
    COMMA           reduce using rule 54 (expresion -> m_exp expresion_a m_exp .)
    CP              reduce using rule 54 (expresion -> m_exp expresion_a m_exp .)
    SC              reduce using rule 54 (expresion -> m_exp expresion_a m_exp .)


state 178

    (21) m_exp -> m_exp_b m_exp_a m_exp .

    LT              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    GT              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    NE              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    EQEQ            reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    LE              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    GE              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    AND             reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    OR              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    CSB             reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    COMMA           reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    CP              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)
    SC              reduce using rule 21 (m_exp -> m_exp_b m_exp_a m_exp .)


state 179

    (26) term -> term_b term_a term .

    ADD             reduce using rule 26 (term -> term_b term_a term .)
    SUB             reduce using rule 26 (term -> term_b term_a term .)
    LT              reduce using rule 26 (term -> term_b term_a term .)
    GT              reduce using rule 26 (term -> term_b term_a term .)
    NE              reduce using rule 26 (term -> term_b term_a term .)
    EQEQ            reduce using rule 26 (term -> term_b term_a term .)
    LE              reduce using rule 26 (term -> term_b term_a term .)
    GE              reduce using rule 26 (term -> term_b term_a term .)
    AND             reduce using rule 26 (term -> term_b term_a term .)
    OR              reduce using rule 26 (term -> term_b term_a term .)
    CSB             reduce using rule 26 (term -> term_b term_a term .)
    COMMA           reduce using rule 26 (term -> term_b term_a term .)
    CP              reduce using rule 26 (term -> term_b term_a term .)
    SC              reduce using rule 26 (term -> term_b term_a term .)


state 180

    (90) fact -> OP fact_a exp . CP

    CP              shift and go to state 202


state 181

    (129) array_access -> array_access_c OSB exp . CSB

    CSB             shift and go to state 203


state 182

    (133) array_access_c -> array_access_b exp CSB .

    OSB             reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    MULT            reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    DIV             reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    ADD             reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    SUB             reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    LT              reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    GT              reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    NE              reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    EQEQ            reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    LE              reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    GE              reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    AND             reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    OR              reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    CSB             reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    COMMA           reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    CP              reduce using rule 133 (array_access_c -> array_access_b exp CSB .)
    SC              reduce using rule 133 (array_access_c -> array_access_b exp CSB .)


state 183

    (115) asignacion -> ID asignacion_a asignacion_a EQ . expresion SC
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    expresion                      shift and go to state 204
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 184

    (116) asignacion_a -> OSB exp CSB .

    OSB             reduce using rule 116 (asignacion_a -> OSB exp CSB .)
    EQ              reduce using rule 116 (asignacion_a -> OSB exp CSB .)


state 185

    (107) condicion_a -> condicion_d condicion_b . bloque
    (36) bloque -> . OB bloque_a CB

    OB              shift and go to state 20

    bloque                         shift and go to state 205

state 186

    (109) condicion_b -> condicion .

    OB              reduce using rule 109 (condicion_b -> condicion .)


state 187

    (110) condicion_b -> empty .

    OB              reduce using rule 110 (condicion_b -> empty .)


state 188

    (75) for_b -> for_e asignacionsencilla CP .

    OB              reduce using rule 75 (for_b -> for_e asignacionsencilla CP .)


state 189

    (118) asignacionsencilla -> ID EQ . expresion
    (53) expresion -> . m_exp
    (54) expresion -> . m_exp expresion_a m_exp
    (20) m_exp -> . m_exp_b
    (21) m_exp -> . m_exp_b m_exp_a m_exp
    (24) m_exp_b -> . term
    (25) term -> . term_b
    (26) term -> . term_b term_a term
    (29) term_b -> . fact
    (90) fact -> . OP fact_a exp CP
    (91) fact -> . CTE_I
    (92) fact -> . CTE_F
    (93) fact -> . CTE_CHAR
    (94) fact -> . ID
    (95) fact -> . llamada
    (96) fact -> . array_access
    (79) llamada -> . llamada_d llamada_a CP
    (129) array_access -> . array_access_c OSB exp CSB
    (130) array_access -> . array_access_c
    (85) llamada_d -> . llamada_c OP
    (133) array_access_c -> . array_access_b exp CSB
    (84) llamada_c -> . ID
    (132) array_access_b -> . array_access_a OSB
    (131) array_access_a -> . ID

    OP              shift and go to state 80
    CTE_I           shift and go to state 81
    CTE_F           shift and go to state 82
    CTE_CHAR        shift and go to state 83
    ID              shift and go to state 84

    expresion                      shift and go to state 206
    m_exp                          shift and go to state 75
    m_exp_b                        shift and go to state 76
    term                           shift and go to state 77
    term_b                         shift and go to state 78
    fact                           shift and go to state 79
    llamada                        shift and go to state 85
    array_access                   shift and go to state 86
    llamada_d                      shift and go to state 48
    array_access_c                 shift and go to state 87
    llamada_c                      shift and go to state 58
    array_access_b                 shift and go to state 88
    array_access_a                 shift and go to state 89

state 190

    (76) for_c -> OP asignacionsencilla SC .

    OP              reduce using rule 76 (for_c -> OP asignacionsencilla SC .)
    CTE_I           reduce using rule 76 (for_c -> OP asignacionsencilla SC .)
    CTE_F           reduce using rule 76 (for_c -> OP asignacionsencilla SC .)
    CTE_CHAR        reduce using rule 76 (for_c -> OP asignacionsencilla SC .)
    ID              reduce using rule 76 (for_c -> OP asignacionsencilla SC .)


state 191

    (98) classcreate -> CLASS CLASS_ID OB classcreate_a . function classcreate_c CB
    (119) function -> . DEF function_e bloque

    DEF             shift and go to state 54

    function                       shift and go to state 207

state 192

    (99) classcreate_a -> vars . classcreate_a
    (99) classcreate_a -> . vars classcreate_a
    (100) classcreate_a -> . vars_vect_mat classcreate_a
    (101) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (134) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

    DEF             reduce using rule 134 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    vars                           shift and go to state 192
    classcreate_a                  shift and go to state 208
    vars_vect_mat                  shift and go to state 193
    empty                          shift and go to state 194
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 193

    (100) classcreate_a -> vars_vect_mat . classcreate_a
    (99) classcreate_a -> . vars classcreate_a
    (100) classcreate_a -> . vars_vect_mat classcreate_a
    (101) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a SC
    (15) vars_vect_mat -> . vars_vect_mat_b vars_vect_mat_a vars_vect_mat_d SC
    (134) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE
    (17) vars_vect_mat_b -> . tiposimple ID

    DEF             reduce using rule 134 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    vars_vect_mat                  shift and go to state 193
    classcreate_a                  shift and go to state 209
    vars                           shift and go to state 192
    empty                          shift and go to state 194
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12
    vars_vect_mat_b                shift and go to state 13

state 194

    (101) classcreate_a -> empty .

    DEF             reduce using rule 101 (classcreate_a -> empty .)


state 195

    (127) function_e -> function_c OP function_b . CP vars
    (128) function_e -> function_c OP function_b . CP empty

    CP              shift and go to state 210


state 196

    (124) function_b -> empty .

    CP              reduce using rule 124 (function_b -> empty .)


state 197

    (122) function_b -> function_d .
    (123) function_b -> function_d . COMMA function_b

    CP              reduce using rule 122 (function_b -> function_d .)
    COMMA           shift and go to state 211


state 198

    (126) function_d -> tiposimple . ID

    ID              shift and go to state 212


state 199

    (89) print -> PRINT OP expresion CP . SC

    SC              shift and go to state 213


state 200

    (111) condicion_c -> IF OP exp CP .

    OB              reduce using rule 111 (condicion_c -> IF OP exp CP .)


state 201

    (66) while_b -> while_a OP expresion CP .

    OB              reduce using rule 66 (while_b -> while_a OP expresion CP .)


state 202

    (90) fact -> OP fact_a exp CP .

    MULT            reduce using rule 90 (fact -> OP fact_a exp CP .)
    DIV             reduce using rule 90 (fact -> OP fact_a exp CP .)
    ADD             reduce using rule 90 (fact -> OP fact_a exp CP .)
    SUB             reduce using rule 90 (fact -> OP fact_a exp CP .)
    LT              reduce using rule 90 (fact -> OP fact_a exp CP .)
    GT              reduce using rule 90 (fact -> OP fact_a exp CP .)
    NE              reduce using rule 90 (fact -> OP fact_a exp CP .)
    EQEQ            reduce using rule 90 (fact -> OP fact_a exp CP .)
    LE              reduce using rule 90 (fact -> OP fact_a exp CP .)
    GE              reduce using rule 90 (fact -> OP fact_a exp CP .)
    AND             reduce using rule 90 (fact -> OP fact_a exp CP .)
    OR              reduce using rule 90 (fact -> OP fact_a exp CP .)
    CSB             reduce using rule 90 (fact -> OP fact_a exp CP .)
    COMMA           reduce using rule 90 (fact -> OP fact_a exp CP .)
    CP              reduce using rule 90 (fact -> OP fact_a exp CP .)
    SC              reduce using rule 90 (fact -> OP fact_a exp CP .)


state 203

    (129) array_access -> array_access_c OSB exp CSB .

    MULT            reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    DIV             reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    ADD             reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    SUB             reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    LT              reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    GT              reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    NE              reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    EQEQ            reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    LE              reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    GE              reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    AND             reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    OR              reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    CSB             reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    COMMA           reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    CP              reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)
    SC              reduce using rule 129 (array_access -> array_access_c OSB exp CSB .)


state 204

    (115) asignacion -> ID asignacion_a asignacion_a EQ expresion . SC

    SC              shift and go to state 214


state 205

    (107) condicion_a -> condicion_d condicion_b bloque .

    ID              reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS           reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS_ID        reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    DEF             reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    RETURN          reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    PRINT           reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    IF              reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    FOR             reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    INT             reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    FLOAT           reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    CHAR            reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    DATAFRAME       reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    FILE            reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    WHILE           reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    CB              reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)
    OB              reduce using rule 107 (condicion_a -> condicion_d condicion_b bloque .)


state 206

    (118) asignacionsencilla -> ID EQ expresion .

    CP              reduce using rule 118 (asignacionsencilla -> ID EQ expresion .)
    SC              reduce using rule 118 (asignacionsencilla -> ID EQ expresion .)


state 207

    (98) classcreate -> CLASS CLASS_ID OB classcreate_a function . classcreate_c CB
    (102) classcreate_c -> . function classcreate_d
    (103) classcreate_c -> . classcreate_d
    (119) function -> . DEF function_e bloque
    (104) classcreate_d -> . classcreate_c
    (105) classcreate_d -> . empty
    (134) empty -> .

    DEF             shift and go to state 54
    CB              reduce using rule 134 (empty -> .)

    function                       shift and go to state 215
    classcreate_c                  shift and go to state 216
    classcreate_d                  shift and go to state 217
    empty                          shift and go to state 218

state 208

    (99) classcreate_a -> vars classcreate_a .

    DEF             reduce using rule 99 (classcreate_a -> vars classcreate_a .)


state 209

    (100) classcreate_a -> vars_vect_mat classcreate_a .

    DEF             reduce using rule 100 (classcreate_a -> vars_vect_mat classcreate_a .)


state 210

    (127) function_e -> function_c OP function_b CP . vars
    (128) function_e -> function_c OP function_b CP . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (134) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR
    (33) tipocompuesto -> . DATAFRAME
    (34) tipocompuesto -> . ID
    (35) tipocompuesto -> . FILE

    OB              reduce using rule 134 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    ID              shift and go to state 5
    FILE            shift and go to state 18

    vars                           shift and go to state 219
    empty                          shift and go to state 220
    tiposimple                     shift and go to state 53
    tipocompuesto                  shift and go to state 12

state 211

    (123) function_b -> function_d COMMA . function_b
    (122) function_b -> . function_d
    (123) function_b -> . function_d COMMA function_b
    (124) function_b -> . empty
    (126) function_d -> . tiposimple ID
    (134) empty -> .
    (30) tiposimple -> . INT
    (31) tiposimple -> . FLOAT
    (32) tiposimple -> . CHAR

    CP              reduce using rule 134 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    function_d                     shift and go to state 197
    function_b                     shift and go to state 221
    empty                          shift and go to state 196
    tiposimple                     shift and go to state 198

state 212

    (126) function_d -> tiposimple ID .

    COMMA           reduce using rule 126 (function_d -> tiposimple ID .)
    CP              reduce using rule 126 (function_d -> tiposimple ID .)


state 213

    (89) print -> PRINT OP expresion CP SC .

    ID              reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    CLASS           reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    CLASS_ID        reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    DEF             reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    RETURN          reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    PRINT           reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    IF              reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    FOR             reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    INT             reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    FLOAT           reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    CHAR            reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    DATAFRAME       reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    FILE            reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    WHILE           reduce using rule 89 (print -> PRINT OP expresion CP SC .)
    CB              reduce using rule 89 (print -> PRINT OP expresion CP SC .)


state 214

    (115) asignacion -> ID asignacion_a asignacion_a EQ expresion SC .

    ID              reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS           reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS_ID        reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DEF             reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    RETURN          reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    PRINT           reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    IF              reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FOR             reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    INT             reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FLOAT           reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CHAR            reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DATAFRAME       reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FILE            reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    WHILE           reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CB              reduce using rule 115 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)


state 215

    (102) classcreate_c -> function . classcreate_d
    (104) classcreate_d -> . classcreate_c
    (105) classcreate_d -> . empty
    (102) classcreate_c -> . function classcreate_d
    (103) classcreate_c -> . classcreate_d
    (134) empty -> .
    (119) function -> . DEF function_e bloque

    CB              reduce using rule 134 (empty -> .)
    DEF             shift and go to state 54

    function                       shift and go to state 215
    classcreate_d                  shift and go to state 222
    classcreate_c                  shift and go to state 223
    empty                          shift and go to state 218

state 216

    (98) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c . CB
    (104) classcreate_d -> classcreate_c .

  ! shift/reduce conflict for CB resolved as shift
    CB              shift and go to state 224

  ! CB              [ reduce using rule 104 (classcreate_d -> classcreate_c .) ]


state 217

    (103) classcreate_c -> classcreate_d .

    CB              reduce using rule 103 (classcreate_c -> classcreate_d .)


state 218

    (105) classcreate_d -> empty .

    CB              reduce using rule 105 (classcreate_d -> empty .)


state 219

    (127) function_e -> function_c OP function_b CP vars .

    OB              reduce using rule 127 (function_e -> function_c OP function_b CP vars .)


state 220

    (128) function_e -> function_c OP function_b CP empty .

    OB              reduce using rule 128 (function_e -> function_c OP function_b CP empty .)


state 221

    (123) function_b -> function_d COMMA function_b .

    CP              reduce using rule 123 (function_b -> function_d COMMA function_b .)


state 222

    (102) classcreate_c -> function classcreate_d .
    (103) classcreate_c -> classcreate_d .

  ! reduce/reduce conflict for CB resolved using rule 102 (classcreate_c -> function classcreate_d .)
    CB              reduce using rule 102 (classcreate_c -> function classcreate_d .)

  ! CB              [ reduce using rule 103 (classcreate_c -> classcreate_d .) ]


state 223

    (104) classcreate_d -> classcreate_c .

    CB              reduce using rule 104 (classcreate_d -> classcreate_c .)


state 224

    (98) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .

    ID              reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS           reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS_ID        reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DEF             reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    RETURN          reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    PRINT           reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    IF              reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FOR             reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INT             reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FLOAT           reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CHAR            reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DATAFRAME       reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FILE            reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    WHILE           reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CB              reduce using rule 98 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OSB in state 46 resolved as shift
WARNING: shift/reduce conflict for CB in state 216 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa_a -> programa_b)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 32 resolved using rule (bloque_a -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 32
WARNING: reduce/reduce conflict in state 222 resolved using rule (classcreate_c -> function classcreate_d)
WARNING: rejected rule (classcreate_c -> classcreate_d) in state 222
