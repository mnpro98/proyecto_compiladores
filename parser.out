Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPT
    COL
    DIGIT
    DIGITS
    LETTER

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SC programa_a bloque
Rule 2     programa_a -> programa_b
Rule 3     programa_a -> programa_b programa_a
Rule 4     programa_a -> empty
Rule 5     programa_b -> vars
Rule 6     programa_b -> vars_vect_mat
Rule 7     vars -> tiposimple vars_a SC
Rule 8     vars -> tipocompuesto vars_a SC
Rule 9     vars_a -> vars_b
Rule 10    vars_a -> vars_c vars_a
Rule 11    vars_b -> ID
Rule 12    vars_b -> ID EQ expresion
Rule 13    vars_c -> vars_b COMMA
Rule 14    vars_vect_mat -> tiposimple ID vars_vect_mat_a SC
Rule 15    vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
Rule 16    vars_vect_mat_a -> OSB exp CSB
Rule 17    m_exp -> m_exp_b
Rule 18    m_exp -> m_exp_b m_exp_a m_exp
Rule 19    m_exp_a -> ADD
Rule 20    m_exp_a -> SUB
Rule 21    m_exp_b -> term
Rule 22    term -> term_b
Rule 23    term -> term_b term_a term
Rule 24    term_a -> MULT
Rule 25    term_a -> DIV
Rule 26    term_b -> fact
Rule 27    tiposimple -> INT
Rule 28    tiposimple -> FLOAT
Rule 29    tiposimple -> CHAR
Rule 30    tipocompuesto -> DATAFRAME
Rule 31    tipocompuesto -> ID
Rule 32    tipocompuesto -> FILE
Rule 33    bloque -> OB bloque_a CB
Rule 34    bloque_a -> estatuto bloque_a
Rule 35    bloque_a -> estatuto
Rule 36    bloque_a -> empty
Rule 37    estatuto -> asignacion
Rule 38    estatuto -> condicion
Rule 39    estatuto -> llamada
Rule 40    estatuto -> while
Rule 41    estatuto -> for
Rule 42    estatuto -> classcreate
Rule 43    estatuto -> vars
Rule 44    estatuto -> classdeclare
Rule 45    estatuto -> llamadafuncionclase
Rule 46    estatuto -> function
Rule 47    estatuto -> return
Rule 48    return -> RETURN expresion SC
Rule 49    expresion -> m_exp
Rule 50    expresion -> m_exp expresion_a m_exp
Rule 51    expresion_a -> LT
Rule 52    expresion_a -> GT
Rule 53    expresion_a -> NE
Rule 54    expresion_a -> EQEQ
Rule 55    expresion_a -> LE
Rule 56    expresion_a -> GE
Rule 57    varcte -> ID
Rule 58    varcte -> CTE_I
Rule 59    varcte -> CTE_F
Rule 60    while -> while_b bloque
Rule 61    while_a -> WHILE
Rule 62    while_b -> while_a OP expresion CP
Rule 63    exp -> and_exp exp_a
Rule 64    exp_a -> OR
Rule 65    exp_a -> empty
Rule 66    and_exp -> expresion and_exp_a
Rule 67    and_exp_a -> AND
Rule 68    and_exp_a -> empty
Rule 69    for -> for_a for_b bloque
Rule 70    for_a -> FOR
Rule 71    for_b -> for_e asignacionsencilla CP
Rule 72    for_c -> OP asignacionsencilla SC
Rule 73    for_d -> for_c expresion
Rule 74    for_e -> for_d SC
Rule 75    llamada -> ID OP llamada_a CP SC
Rule 76    llamada_a -> expresion llamada_b
Rule 77    llamada_a -> CTE_STRING llamada_b
Rule 78    llamada_a -> llamada_b
Rule 79    llamada_b -> COMMA llamada_a
Rule 80    llamada_b -> empty
Rule 81    fact -> fact_a exp CP
Rule 82    fact -> CTE_I
Rule 83    fact -> CTE_F
Rule 84    fact -> CTE_CHAR
Rule 85    fact -> ID
Rule 86    fact -> llamada
Rule 87    fact_a -> OP
Rule 88    classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB
Rule 89    classcreate_a -> vars classcreate_a
Rule 90    classcreate_a -> vars_vect_mat classcreate_a
Rule 91    classcreate_a -> empty
Rule 92    classcreate_c -> function classcreate_d
Rule 93    classcreate_c -> classcreate_d
Rule 94    classcreate_d -> classcreate_c
Rule 95    classcreate_d -> empty
Rule 96    condicion -> condicion_c bloque condicion_a
Rule 97    condicion_a -> condicion_d condicion_b bloque
Rule 98    condicion_b -> condicion
Rule 99    condicion_b -> empty
Rule 100   condicion_c -> IF OP expresion CP
Rule 101   condicion_d -> ELSE
Rule 102   classdeclare -> CLASS_ID ID SC
Rule 103   llamadafuncionclase -> ID POINT llamada
Rule 104   asignacion -> ID asignacion_a asignacion_a EQ expresion SC
Rule 105   asignacion_a -> OSB exp CSB
Rule 106   asignacion_a -> empty
Rule 107   asignacionsencilla -> ID EQ expresion
Rule 108   function -> function_a ID OP function_b CP bloque
Rule 109   function_a -> VOID
Rule 110   function_a -> tiposimple
Rule 111   function_b -> tiposimple ID
Rule 112   function_b -> tiposimple ID COMMA function_b
Rule 113   function_b -> empty
Rule 114   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 19
AND                  : 67
CAPT                 : 
CB                   : 33 88
CHAR                 : 29
CLASS                : 88
CLASS_ID             : 88 102
COL                  : 
COMMA                : 13 79 112
CP                   : 62 71 75 81 100 108
CSB                  : 16 105
CTE_CHAR             : 84
CTE_F                : 59 83
CTE_I                : 58 82
CTE_STRING           : 77
DATAFRAME            : 30
DIGIT                : 
DIGITS               : 
DIV                  : 25
ELSE                 : 101
EQ                   : 12 104 107
EQEQ                 : 54
FILE                 : 32
FLOAT                : 28
FOR                  : 70
GE                   : 56
GT                   : 52
ID                   : 1 11 12 14 15 31 57 75 85 102 103 104 107 108 111 112
IF                   : 100
INT                  : 27
LE                   : 55
LETTER               : 
LT                   : 51
MULT                 : 24
NE                   : 53
OB                   : 33 88
OP                   : 62 72 75 87 100 108
OR                   : 64
OSB                  : 16 105
POINT                : 103
PROGRAM              : 1
RETURN               : 48
SC                   : 1 7 8 14 15 48 72 74 75 102 104
SUB                  : 20
VOID                 : 109
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

and_exp              : 63
and_exp_a            : 66
asignacion           : 37
asignacion_a         : 104 104
asignacionsencilla   : 71 72
bloque               : 1 60 69 96 97 108
bloque_a             : 33 34
classcreate          : 42
classcreate_a        : 88 89 90
classcreate_c        : 88 94
classcreate_d        : 92 93
classdeclare         : 44
condicion            : 38 98
condicion_a          : 96
condicion_b          : 97
condicion_c          : 96
condicion_d          : 97
empty                : 4 36 65 68 80 91 95 99 106 113
estatuto             : 34 35
exp                  : 16 81 105
exp_a                : 63
expresion            : 12 48 62 66 73 76 100 104 107
expresion_a          : 50
fact                 : 26
fact_a               : 81
for                  : 41
for_a                : 69
for_b                : 69
for_c                : 73
for_d                : 74
for_e                : 71
function             : 46 88 92
function_a           : 108
function_b           : 108 112
llamada              : 39 86 103
llamada_a            : 75 79
llamada_b            : 76 77 78
llamadafuncionclase  : 45
m_exp                : 18 49 50 50
m_exp_a              : 18
m_exp_b              : 17 18
programa             : 0
programa_a           : 1 3
programa_b           : 2 3
return               : 47
term                 : 21 23
term_a               : 23
term_b               : 22 23
tipocompuesto        : 8
tiposimple           : 7 14 15 110 111 112
varcte               : 
vars                 : 5 43 89
vars_a               : 7 8 10
vars_b               : 9 13
vars_c               : 10
vars_vect_mat        : 6 90
vars_vect_mat_a      : 14 15 15
while                : 40
while_a              : 62
while_b              : 60

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SC programa_a bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SC programa_a bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SC programa_a bloque

    SC              shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SC . programa_a bloque
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (114) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

    OB              reduce using rule 114 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    programa_a                     shift and go to state 6
    programa_b                     shift and go to state 7
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 5

    (31) tipocompuesto -> ID .

    ID              reduce using rule 31 (tipocompuesto -> ID .)


state 6

    (1) programa -> PROGRAM ID SC programa_a . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 18

state 7

    (2) programa_a -> programa_b .
    (3) programa_a -> programa_b . programa_a
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (114) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! reduce/reduce conflict for OB resolved using rule 2 (programa_a -> programa_b .)
    OB              reduce using rule 2 (programa_a -> programa_b .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! OB              [ reduce using rule 114 (empty -> .) ]

    programa_b                     shift and go to state 7
    programa_a                     shift and go to state 20
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 8

    (4) programa_a -> empty .

    OB              reduce using rule 4 (programa_a -> empty .)


state 9

    (5) programa_b -> vars .

    INT             reduce using rule 5 (programa_b -> vars .)
    FLOAT           reduce using rule 5 (programa_b -> vars .)
    CHAR            reduce using rule 5 (programa_b -> vars .)
    DATAFRAME       reduce using rule 5 (programa_b -> vars .)
    ID              reduce using rule 5 (programa_b -> vars .)
    FILE            reduce using rule 5 (programa_b -> vars .)
    OB              reduce using rule 5 (programa_b -> vars .)


state 10

    (6) programa_b -> vars_vect_mat .

    INT             reduce using rule 6 (programa_b -> vars_vect_mat .)
    FLOAT           reduce using rule 6 (programa_b -> vars_vect_mat .)
    CHAR            reduce using rule 6 (programa_b -> vars_vect_mat .)
    DATAFRAME       reduce using rule 6 (programa_b -> vars_vect_mat .)
    ID              reduce using rule 6 (programa_b -> vars_vect_mat .)
    FILE            reduce using rule 6 (programa_b -> vars_vect_mat .)
    OB              reduce using rule 6 (programa_b -> vars_vect_mat .)


state 11

    (7) vars -> tiposimple . vars_a SC
    (14) vars_vect_mat -> tiposimple . ID vars_vect_mat_a SC
    (15) vars_vect_mat -> tiposimple . ID vars_vect_mat_a vars_vect_mat_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 22

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 12

    (8) vars -> tipocompuesto . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_a                         shift and go to state 25
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 13

    (27) tiposimple -> INT .

    ID              reduce using rule 27 (tiposimple -> INT .)


state 14

    (28) tiposimple -> FLOAT .

    ID              reduce using rule 28 (tiposimple -> FLOAT .)


state 15

    (29) tiposimple -> CHAR .

    ID              reduce using rule 29 (tiposimple -> CHAR .)


state 16

    (30) tipocompuesto -> DATAFRAME .

    ID              reduce using rule 30 (tipocompuesto -> DATAFRAME .)


state 17

    (32) tipocompuesto -> FILE .

    ID              reduce using rule 32 (tipocompuesto -> FILE .)


state 18

    (1) programa -> PROGRAM ID SC programa_a bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SC programa_a bloque .)


state 19

    (33) bloque -> OB . bloque_a CB
    (34) bloque_a -> . estatuto bloque_a
    (35) bloque_a -> . estatuto
    (36) bloque_a -> . empty
    (37) estatuto -> . asignacion
    (38) estatuto -> . condicion
    (39) estatuto -> . llamada
    (40) estatuto -> . while
    (41) estatuto -> . for
    (42) estatuto -> . classcreate
    (43) estatuto -> . vars
    (44) estatuto -> . classdeclare
    (45) estatuto -> . llamadafuncionclase
    (46) estatuto -> . function
    (47) estatuto -> . return
    (114) empty -> .
    (104) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (96) condicion -> . condicion_c bloque condicion_a
    (75) llamada -> . ID OP llamada_a CP SC
    (60) while -> . while_b bloque
    (69) for -> . for_a for_b bloque
    (88) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (102) classdeclare -> . CLASS_ID ID SC
    (103) llamadafuncionclase -> . ID POINT llamada
    (108) function -> . function_a ID OP function_b CP bloque
    (48) return -> . RETURN expresion SC
    (100) condicion_c -> . IF OP expresion CP
    (62) while_b -> . while_a OP expresion CP
    (70) for_a -> . FOR
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE
    (109) function_a -> . VOID
    (110) function_a -> . tiposimple
    (61) while_a -> . WHILE

    CB              reduce using rule 114 (empty -> .)
    ID              shift and go to state 41
    CLASS           shift and go to state 45
    CLASS_ID        shift and go to state 46
    RETURN          shift and go to state 49
    IF              shift and go to state 50
    FOR             shift and go to state 52
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    VOID            shift and go to state 53
    WHILE           shift and go to state 54

    bloque_a                       shift and go to state 27
    estatuto                       shift and go to state 28
    empty                          shift and go to state 29
    asignacion                     shift and go to state 30
    condicion                      shift and go to state 31
    llamada                        shift and go to state 32
    while                          shift and go to state 33
    for                            shift and go to state 34
    classcreate                    shift and go to state 35
    vars                           shift and go to state 36
    classdeclare                   shift and go to state 37
    llamadafuncionclase            shift and go to state 38
    function                       shift and go to state 39
    return                         shift and go to state 40
    condicion_c                    shift and go to state 42
    while_b                        shift and go to state 43
    for_a                          shift and go to state 44
    tiposimple                     shift and go to state 47
    tipocompuesto                  shift and go to state 12
    function_a                     shift and go to state 48
    while_a                        shift and go to state 51

state 20

    (3) programa_a -> programa_b programa_a .

    OB              reduce using rule 3 (programa_a -> programa_b programa_a .)


state 21

    (7) vars -> tiposimple vars_a . SC

    SC              shift and go to state 55


state 22

    (14) vars_vect_mat -> tiposimple ID . vars_vect_mat_a SC
    (15) vars_vect_mat -> tiposimple ID . vars_vect_mat_a vars_vect_mat_a SC
    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion
    (16) vars_vect_mat_a -> . OSB exp CSB

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 57
    OSB             shift and go to state 58

    vars_vect_mat_a                shift and go to state 56

state 23

    (9) vars_a -> vars_b .
    (13) vars_c -> vars_b . COMMA

    SC              reduce using rule 9 (vars_a -> vars_b .)
    COMMA           shift and go to state 59


state 24

    (10) vars_a -> vars_c . vars_a
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

    ID              shift and go to state 26

    vars_c                         shift and go to state 24
    vars_a                         shift and go to state 60
    vars_b                         shift and go to state 23

state 25

    (8) vars -> tipocompuesto vars_a . SC

    SC              shift and go to state 61


state 26

    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 57


state 27

    (33) bloque -> OB bloque_a . CB

    CB              shift and go to state 62


state 28

    (34) bloque_a -> estatuto . bloque_a
    (35) bloque_a -> estatuto .
    (34) bloque_a -> . estatuto bloque_a
    (35) bloque_a -> . estatuto
    (36) bloque_a -> . empty
    (37) estatuto -> . asignacion
    (38) estatuto -> . condicion
    (39) estatuto -> . llamada
    (40) estatuto -> . while
    (41) estatuto -> . for
    (42) estatuto -> . classcreate
    (43) estatuto -> . vars
    (44) estatuto -> . classdeclare
    (45) estatuto -> . llamadafuncionclase
    (46) estatuto -> . function
    (47) estatuto -> . return
    (114) empty -> .
    (104) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (96) condicion -> . condicion_c bloque condicion_a
    (75) llamada -> . ID OP llamada_a CP SC
    (60) while -> . while_b bloque
    (69) for -> . for_a for_b bloque
    (88) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (102) classdeclare -> . CLASS_ID ID SC
    (103) llamadafuncionclase -> . ID POINT llamada
    (108) function -> . function_a ID OP function_b CP bloque
    (48) return -> . RETURN expresion SC
    (100) condicion_c -> . IF OP expresion CP
    (62) while_b -> . while_a OP expresion CP
    (70) for_a -> . FOR
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE
    (109) function_a -> . VOID
    (110) function_a -> . tiposimple
    (61) while_a -> . WHILE

  ! reduce/reduce conflict for CB resolved using rule 35 (bloque_a -> estatuto .)
    CB              reduce using rule 35 (bloque_a -> estatuto .)
    ID              shift and go to state 41
    CLASS           shift and go to state 45
    CLASS_ID        shift and go to state 46
    RETURN          shift and go to state 49
    IF              shift and go to state 50
    FOR             shift and go to state 52
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    VOID            shift and go to state 53
    WHILE           shift and go to state 54

  ! CB              [ reduce using rule 114 (empty -> .) ]

    estatuto                       shift and go to state 28
    bloque_a                       shift and go to state 63
    empty                          shift and go to state 29
    asignacion                     shift and go to state 30
    condicion                      shift and go to state 31
    llamada                        shift and go to state 32
    while                          shift and go to state 33
    for                            shift and go to state 34
    classcreate                    shift and go to state 35
    vars                           shift and go to state 36
    classdeclare                   shift and go to state 37
    llamadafuncionclase            shift and go to state 38
    function                       shift and go to state 39
    return                         shift and go to state 40
    condicion_c                    shift and go to state 42
    while_b                        shift and go to state 43
    for_a                          shift and go to state 44
    tiposimple                     shift and go to state 47
    tipocompuesto                  shift and go to state 12
    function_a                     shift and go to state 48
    while_a                        shift and go to state 51

state 29

    (36) bloque_a -> empty .

    CB              reduce using rule 36 (bloque_a -> empty .)


state 30

    (37) estatuto -> asignacion .

    ID              reduce using rule 37 (estatuto -> asignacion .)
    CLASS           reduce using rule 37 (estatuto -> asignacion .)
    CLASS_ID        reduce using rule 37 (estatuto -> asignacion .)
    RETURN          reduce using rule 37 (estatuto -> asignacion .)
    IF              reduce using rule 37 (estatuto -> asignacion .)
    FOR             reduce using rule 37 (estatuto -> asignacion .)
    INT             reduce using rule 37 (estatuto -> asignacion .)
    FLOAT           reduce using rule 37 (estatuto -> asignacion .)
    CHAR            reduce using rule 37 (estatuto -> asignacion .)
    DATAFRAME       reduce using rule 37 (estatuto -> asignacion .)
    FILE            reduce using rule 37 (estatuto -> asignacion .)
    VOID            reduce using rule 37 (estatuto -> asignacion .)
    WHILE           reduce using rule 37 (estatuto -> asignacion .)
    CB              reduce using rule 37 (estatuto -> asignacion .)


state 31

    (38) estatuto -> condicion .

    ID              reduce using rule 38 (estatuto -> condicion .)
    CLASS           reduce using rule 38 (estatuto -> condicion .)
    CLASS_ID        reduce using rule 38 (estatuto -> condicion .)
    RETURN          reduce using rule 38 (estatuto -> condicion .)
    IF              reduce using rule 38 (estatuto -> condicion .)
    FOR             reduce using rule 38 (estatuto -> condicion .)
    INT             reduce using rule 38 (estatuto -> condicion .)
    FLOAT           reduce using rule 38 (estatuto -> condicion .)
    CHAR            reduce using rule 38 (estatuto -> condicion .)
    DATAFRAME       reduce using rule 38 (estatuto -> condicion .)
    FILE            reduce using rule 38 (estatuto -> condicion .)
    VOID            reduce using rule 38 (estatuto -> condicion .)
    WHILE           reduce using rule 38 (estatuto -> condicion .)
    CB              reduce using rule 38 (estatuto -> condicion .)


state 32

    (39) estatuto -> llamada .

    ID              reduce using rule 39 (estatuto -> llamada .)
    CLASS           reduce using rule 39 (estatuto -> llamada .)
    CLASS_ID        reduce using rule 39 (estatuto -> llamada .)
    RETURN          reduce using rule 39 (estatuto -> llamada .)
    IF              reduce using rule 39 (estatuto -> llamada .)
    FOR             reduce using rule 39 (estatuto -> llamada .)
    INT             reduce using rule 39 (estatuto -> llamada .)
    FLOAT           reduce using rule 39 (estatuto -> llamada .)
    CHAR            reduce using rule 39 (estatuto -> llamada .)
    DATAFRAME       reduce using rule 39 (estatuto -> llamada .)
    FILE            reduce using rule 39 (estatuto -> llamada .)
    VOID            reduce using rule 39 (estatuto -> llamada .)
    WHILE           reduce using rule 39 (estatuto -> llamada .)
    CB              reduce using rule 39 (estatuto -> llamada .)


state 33

    (40) estatuto -> while .

    ID              reduce using rule 40 (estatuto -> while .)
    CLASS           reduce using rule 40 (estatuto -> while .)
    CLASS_ID        reduce using rule 40 (estatuto -> while .)
    RETURN          reduce using rule 40 (estatuto -> while .)
    IF              reduce using rule 40 (estatuto -> while .)
    FOR             reduce using rule 40 (estatuto -> while .)
    INT             reduce using rule 40 (estatuto -> while .)
    FLOAT           reduce using rule 40 (estatuto -> while .)
    CHAR            reduce using rule 40 (estatuto -> while .)
    DATAFRAME       reduce using rule 40 (estatuto -> while .)
    FILE            reduce using rule 40 (estatuto -> while .)
    VOID            reduce using rule 40 (estatuto -> while .)
    WHILE           reduce using rule 40 (estatuto -> while .)
    CB              reduce using rule 40 (estatuto -> while .)


state 34

    (41) estatuto -> for .

    ID              reduce using rule 41 (estatuto -> for .)
    CLASS           reduce using rule 41 (estatuto -> for .)
    CLASS_ID        reduce using rule 41 (estatuto -> for .)
    RETURN          reduce using rule 41 (estatuto -> for .)
    IF              reduce using rule 41 (estatuto -> for .)
    FOR             reduce using rule 41 (estatuto -> for .)
    INT             reduce using rule 41 (estatuto -> for .)
    FLOAT           reduce using rule 41 (estatuto -> for .)
    CHAR            reduce using rule 41 (estatuto -> for .)
    DATAFRAME       reduce using rule 41 (estatuto -> for .)
    FILE            reduce using rule 41 (estatuto -> for .)
    VOID            reduce using rule 41 (estatuto -> for .)
    WHILE           reduce using rule 41 (estatuto -> for .)
    CB              reduce using rule 41 (estatuto -> for .)


state 35

    (42) estatuto -> classcreate .

    ID              reduce using rule 42 (estatuto -> classcreate .)
    CLASS           reduce using rule 42 (estatuto -> classcreate .)
    CLASS_ID        reduce using rule 42 (estatuto -> classcreate .)
    RETURN          reduce using rule 42 (estatuto -> classcreate .)
    IF              reduce using rule 42 (estatuto -> classcreate .)
    FOR             reduce using rule 42 (estatuto -> classcreate .)
    INT             reduce using rule 42 (estatuto -> classcreate .)
    FLOAT           reduce using rule 42 (estatuto -> classcreate .)
    CHAR            reduce using rule 42 (estatuto -> classcreate .)
    DATAFRAME       reduce using rule 42 (estatuto -> classcreate .)
    FILE            reduce using rule 42 (estatuto -> classcreate .)
    VOID            reduce using rule 42 (estatuto -> classcreate .)
    WHILE           reduce using rule 42 (estatuto -> classcreate .)
    CB              reduce using rule 42 (estatuto -> classcreate .)


state 36

    (43) estatuto -> vars .

    ID              reduce using rule 43 (estatuto -> vars .)
    CLASS           reduce using rule 43 (estatuto -> vars .)
    CLASS_ID        reduce using rule 43 (estatuto -> vars .)
    RETURN          reduce using rule 43 (estatuto -> vars .)
    IF              reduce using rule 43 (estatuto -> vars .)
    FOR             reduce using rule 43 (estatuto -> vars .)
    INT             reduce using rule 43 (estatuto -> vars .)
    FLOAT           reduce using rule 43 (estatuto -> vars .)
    CHAR            reduce using rule 43 (estatuto -> vars .)
    DATAFRAME       reduce using rule 43 (estatuto -> vars .)
    FILE            reduce using rule 43 (estatuto -> vars .)
    VOID            reduce using rule 43 (estatuto -> vars .)
    WHILE           reduce using rule 43 (estatuto -> vars .)
    CB              reduce using rule 43 (estatuto -> vars .)


state 37

    (44) estatuto -> classdeclare .

    ID              reduce using rule 44 (estatuto -> classdeclare .)
    CLASS           reduce using rule 44 (estatuto -> classdeclare .)
    CLASS_ID        reduce using rule 44 (estatuto -> classdeclare .)
    RETURN          reduce using rule 44 (estatuto -> classdeclare .)
    IF              reduce using rule 44 (estatuto -> classdeclare .)
    FOR             reduce using rule 44 (estatuto -> classdeclare .)
    INT             reduce using rule 44 (estatuto -> classdeclare .)
    FLOAT           reduce using rule 44 (estatuto -> classdeclare .)
    CHAR            reduce using rule 44 (estatuto -> classdeclare .)
    DATAFRAME       reduce using rule 44 (estatuto -> classdeclare .)
    FILE            reduce using rule 44 (estatuto -> classdeclare .)
    VOID            reduce using rule 44 (estatuto -> classdeclare .)
    WHILE           reduce using rule 44 (estatuto -> classdeclare .)
    CB              reduce using rule 44 (estatuto -> classdeclare .)


state 38

    (45) estatuto -> llamadafuncionclase .

    ID              reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CLASS           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CLASS_ID        reduce using rule 45 (estatuto -> llamadafuncionclase .)
    RETURN          reduce using rule 45 (estatuto -> llamadafuncionclase .)
    IF              reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FOR             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    INT             reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FLOAT           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CHAR            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    DATAFRAME       reduce using rule 45 (estatuto -> llamadafuncionclase .)
    FILE            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    VOID            reduce using rule 45 (estatuto -> llamadafuncionclase .)
    WHILE           reduce using rule 45 (estatuto -> llamadafuncionclase .)
    CB              reduce using rule 45 (estatuto -> llamadafuncionclase .)


state 39

    (46) estatuto -> function .

    ID              reduce using rule 46 (estatuto -> function .)
    CLASS           reduce using rule 46 (estatuto -> function .)
    CLASS_ID        reduce using rule 46 (estatuto -> function .)
    RETURN          reduce using rule 46 (estatuto -> function .)
    IF              reduce using rule 46 (estatuto -> function .)
    FOR             reduce using rule 46 (estatuto -> function .)
    INT             reduce using rule 46 (estatuto -> function .)
    FLOAT           reduce using rule 46 (estatuto -> function .)
    CHAR            reduce using rule 46 (estatuto -> function .)
    DATAFRAME       reduce using rule 46 (estatuto -> function .)
    FILE            reduce using rule 46 (estatuto -> function .)
    VOID            reduce using rule 46 (estatuto -> function .)
    WHILE           reduce using rule 46 (estatuto -> function .)
    CB              reduce using rule 46 (estatuto -> function .)


state 40

    (47) estatuto -> return .

    ID              reduce using rule 47 (estatuto -> return .)
    CLASS           reduce using rule 47 (estatuto -> return .)
    CLASS_ID        reduce using rule 47 (estatuto -> return .)
    RETURN          reduce using rule 47 (estatuto -> return .)
    IF              reduce using rule 47 (estatuto -> return .)
    FOR             reduce using rule 47 (estatuto -> return .)
    INT             reduce using rule 47 (estatuto -> return .)
    FLOAT           reduce using rule 47 (estatuto -> return .)
    CHAR            reduce using rule 47 (estatuto -> return .)
    DATAFRAME       reduce using rule 47 (estatuto -> return .)
    FILE            reduce using rule 47 (estatuto -> return .)
    VOID            reduce using rule 47 (estatuto -> return .)
    WHILE           reduce using rule 47 (estatuto -> return .)
    CB              reduce using rule 47 (estatuto -> return .)


state 41

    (104) asignacion -> ID . asignacion_a asignacion_a EQ expresion SC
    (75) llamada -> ID . OP llamada_a CP SC
    (103) llamadafuncionclase -> ID . POINT llamada
    (31) tipocompuesto -> ID .
    (105) asignacion_a -> . OSB exp CSB
    (106) asignacion_a -> . empty
    (114) empty -> .

  ! shift/reduce conflict for OSB resolved as shift
    OP              shift and go to state 65
    POINT           shift and go to state 66
    ID              reduce using rule 31 (tipocompuesto -> ID .)
    OSB             shift and go to state 67
    EQ              reduce using rule 114 (empty -> .)

  ! OSB             [ reduce using rule 114 (empty -> .) ]

    asignacion_a                   shift and go to state 64
    empty                          shift and go to state 68

state 42

    (96) condicion -> condicion_c . bloque condicion_a
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 69

state 43

    (60) while -> while_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 70

state 44

    (69) for -> for_a . for_b bloque
    (71) for_b -> . for_e asignacionsencilla CP
    (74) for_e -> . for_d SC
    (73) for_d -> . for_c expresion
    (72) for_c -> . OP asignacionsencilla SC

    OP              shift and go to state 75

    for_b                          shift and go to state 71
    for_e                          shift and go to state 72
    for_d                          shift and go to state 73
    for_c                          shift and go to state 74

state 45

    (88) classcreate -> CLASS . CLASS_ID OB classcreate_a function classcreate_c CB

    CLASS_ID        shift and go to state 76


state 46

    (102) classdeclare -> CLASS_ID . ID SC

    ID              shift and go to state 77


state 47

    (7) vars -> tiposimple . vars_a SC
    (110) function_a -> tiposimple .
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_c vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion
    (13) vars_c -> . vars_b COMMA

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 26

  ! ID              [ reduce using rule 110 (function_a -> tiposimple .) ]

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23
    vars_c                         shift and go to state 24

state 48

    (108) function -> function_a . ID OP function_b CP bloque

    ID              shift and go to state 78


state 49

    (48) return -> RETURN . expresion SC
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    expresion                      shift and go to state 79
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 50

    (100) condicion_c -> IF . OP expresion CP

    OP              shift and go to state 92


state 51

    (62) while_b -> while_a . OP expresion CP

    OP              shift and go to state 93


state 52

    (70) for_a -> FOR .

    OP              reduce using rule 70 (for_a -> FOR .)


state 53

    (109) function_a -> VOID .

    ID              reduce using rule 109 (function_a -> VOID .)


state 54

    (61) while_a -> WHILE .

    OP              reduce using rule 61 (while_a -> WHILE .)


state 55

    (7) vars -> tiposimple vars_a SC .

    INT             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FLOAT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CHAR            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DATAFRAME       reduce using rule 7 (vars -> tiposimple vars_a SC .)
    ID              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FILE            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    OB              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS_ID        reduce using rule 7 (vars -> tiposimple vars_a SC .)
    RETURN          reduce using rule 7 (vars -> tiposimple vars_a SC .)
    IF              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FOR             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    VOID            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    WHILE           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CB              reduce using rule 7 (vars -> tiposimple vars_a SC .)


state 56

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a . SC
    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a . vars_vect_mat_a SC
    (16) vars_vect_mat_a -> . OSB exp CSB

    SC              shift and go to state 95
    OSB             shift and go to state 58

    vars_vect_mat_a                shift and go to state 94

state 57

    (12) vars_b -> ID EQ . expresion
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    expresion                      shift and go to state 96
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 58

    (16) vars_vect_mat_a -> OSB . exp CSB
    (63) exp -> . and_exp exp_a
    (66) and_exp -> . expresion and_exp_a
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    exp                            shift and go to state 97
    and_exp                        shift and go to state 98
    expresion                      shift and go to state 99
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 59

    (13) vars_c -> vars_b COMMA .

    ID              reduce using rule 13 (vars_c -> vars_b COMMA .)


state 60

    (10) vars_a -> vars_c vars_a .

    SC              reduce using rule 10 (vars_a -> vars_c vars_a .)


state 61

    (8) vars -> tipocompuesto vars_a SC .

    INT             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FLOAT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CHAR            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DATAFRAME       reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    ID              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FILE            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    OB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS_ID        reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    RETURN          reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    IF              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FOR             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    VOID            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    WHILE           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)


state 62

    (33) bloque -> OB bloque_a CB .

    $end            reduce using rule 33 (bloque -> OB bloque_a CB .)
    ELSE            reduce using rule 33 (bloque -> OB bloque_a CB .)
    ID              reduce using rule 33 (bloque -> OB bloque_a CB .)
    CLASS           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CLASS_ID        reduce using rule 33 (bloque -> OB bloque_a CB .)
    RETURN          reduce using rule 33 (bloque -> OB bloque_a CB .)
    IF              reduce using rule 33 (bloque -> OB bloque_a CB .)
    FOR             reduce using rule 33 (bloque -> OB bloque_a CB .)
    INT             reduce using rule 33 (bloque -> OB bloque_a CB .)
    FLOAT           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CHAR            reduce using rule 33 (bloque -> OB bloque_a CB .)
    DATAFRAME       reduce using rule 33 (bloque -> OB bloque_a CB .)
    FILE            reduce using rule 33 (bloque -> OB bloque_a CB .)
    VOID            reduce using rule 33 (bloque -> OB bloque_a CB .)
    WHILE           reduce using rule 33 (bloque -> OB bloque_a CB .)
    CB              reduce using rule 33 (bloque -> OB bloque_a CB .)
    OB              reduce using rule 33 (bloque -> OB bloque_a CB .)


state 63

    (34) bloque_a -> estatuto bloque_a .

    CB              reduce using rule 34 (bloque_a -> estatuto bloque_a .)


state 64

    (104) asignacion -> ID asignacion_a . asignacion_a EQ expresion SC
    (105) asignacion_a -> . OSB exp CSB
    (106) asignacion_a -> . empty
    (114) empty -> .

    OSB             shift and go to state 67
    EQ              reduce using rule 114 (empty -> .)

    asignacion_a                   shift and go to state 100
    empty                          shift and go to state 68

state 65

    (75) llamada -> ID OP . llamada_a CP SC
    (76) llamada_a -> . expresion llamada_b
    (77) llamada_a -> . CTE_STRING llamada_b
    (78) llamada_a -> . llamada_b
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (79) llamada_b -> . COMMA llamada_a
    (80) llamada_b -> . empty
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (114) empty -> .
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_STRING      shift and go to state 104
    COMMA           shift and go to state 105
    CP              reduce using rule 114 (empty -> .)
    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    llamada_a                      shift and go to state 101
    expresion                      shift and go to state 102
    llamada_b                      shift and go to state 103
    m_exp                          shift and go to state 80
    empty                          shift and go to state 106
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 66

    (103) llamadafuncionclase -> ID POINT . llamada
    (75) llamada -> . ID OP llamada_a CP SC

    ID              shift and go to state 107

    llamada                        shift and go to state 108

state 67

    (105) asignacion_a -> OSB . exp CSB
    (63) exp -> . and_exp exp_a
    (66) and_exp -> . expresion and_exp_a
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    exp                            shift and go to state 109
    and_exp                        shift and go to state 98
    expresion                      shift and go to state 99
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 68

    (106) asignacion_a -> empty .

    OSB             reduce using rule 106 (asignacion_a -> empty .)
    EQ              reduce using rule 106 (asignacion_a -> empty .)


state 69

    (96) condicion -> condicion_c bloque . condicion_a
    (97) condicion_a -> . condicion_d condicion_b bloque
    (101) condicion_d -> . ELSE

    ELSE            shift and go to state 112

    condicion_a                    shift and go to state 110
    condicion_d                    shift and go to state 111

state 70

    (60) while -> while_b bloque .

    ID              reduce using rule 60 (while -> while_b bloque .)
    CLASS           reduce using rule 60 (while -> while_b bloque .)
    CLASS_ID        reduce using rule 60 (while -> while_b bloque .)
    RETURN          reduce using rule 60 (while -> while_b bloque .)
    IF              reduce using rule 60 (while -> while_b bloque .)
    FOR             reduce using rule 60 (while -> while_b bloque .)
    INT             reduce using rule 60 (while -> while_b bloque .)
    FLOAT           reduce using rule 60 (while -> while_b bloque .)
    CHAR            reduce using rule 60 (while -> while_b bloque .)
    DATAFRAME       reduce using rule 60 (while -> while_b bloque .)
    FILE            reduce using rule 60 (while -> while_b bloque .)
    VOID            reduce using rule 60 (while -> while_b bloque .)
    WHILE           reduce using rule 60 (while -> while_b bloque .)
    CB              reduce using rule 60 (while -> while_b bloque .)


state 71

    (69) for -> for_a for_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 113

state 72

    (71) for_b -> for_e . asignacionsencilla CP
    (107) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 115

    asignacionsencilla             shift and go to state 114

state 73

    (74) for_e -> for_d . SC

    SC              shift and go to state 116


state 74

    (73) for_d -> for_c . expresion
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    expresion                      shift and go to state 117
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 75

    (72) for_c -> OP . asignacionsencilla SC
    (107) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 115

    asignacionsencilla             shift and go to state 118

state 76

    (88) classcreate -> CLASS CLASS_ID . OB classcreate_a function classcreate_c CB

    OB              shift and go to state 119


state 77

    (102) classdeclare -> CLASS_ID ID . SC

    SC              shift and go to state 120


state 78

    (108) function -> function_a ID . OP function_b CP bloque

    OP              shift and go to state 121


state 79

    (48) return -> RETURN expresion . SC

    SC              shift and go to state 122


state 80

    (49) expresion -> m_exp .
    (50) expresion -> m_exp . expresion_a m_exp
    (51) expresion_a -> . LT
    (52) expresion_a -> . GT
    (53) expresion_a -> . NE
    (54) expresion_a -> . EQEQ
    (55) expresion_a -> . LE
    (56) expresion_a -> . GE

    SC              reduce using rule 49 (expresion -> m_exp .)
    COMMA           reduce using rule 49 (expresion -> m_exp .)
    AND             reduce using rule 49 (expresion -> m_exp .)
    OR              reduce using rule 49 (expresion -> m_exp .)
    CSB             reduce using rule 49 (expresion -> m_exp .)
    CP              reduce using rule 49 (expresion -> m_exp .)
    LT              shift and go to state 124
    GT              shift and go to state 125
    NE              shift and go to state 126
    EQEQ            shift and go to state 127
    LE              shift and go to state 128
    GE              shift and go to state 129

    expresion_a                    shift and go to state 123

state 81

    (17) m_exp -> m_exp_b .
    (18) m_exp -> m_exp_b . m_exp_a m_exp
    (19) m_exp_a -> . ADD
    (20) m_exp_a -> . SUB

    LT              reduce using rule 17 (m_exp -> m_exp_b .)
    GT              reduce using rule 17 (m_exp -> m_exp_b .)
    NE              reduce using rule 17 (m_exp -> m_exp_b .)
    EQEQ            reduce using rule 17 (m_exp -> m_exp_b .)
    LE              reduce using rule 17 (m_exp -> m_exp_b .)
    GE              reduce using rule 17 (m_exp -> m_exp_b .)
    SC              reduce using rule 17 (m_exp -> m_exp_b .)
    COMMA           reduce using rule 17 (m_exp -> m_exp_b .)
    AND             reduce using rule 17 (m_exp -> m_exp_b .)
    OR              reduce using rule 17 (m_exp -> m_exp_b .)
    CSB             reduce using rule 17 (m_exp -> m_exp_b .)
    CP              reduce using rule 17 (m_exp -> m_exp_b .)
    ADD             shift and go to state 131
    SUB             shift and go to state 132

    m_exp_a                        shift and go to state 130

state 82

    (21) m_exp_b -> term .

    ADD             reduce using rule 21 (m_exp_b -> term .)
    SUB             reduce using rule 21 (m_exp_b -> term .)
    LT              reduce using rule 21 (m_exp_b -> term .)
    GT              reduce using rule 21 (m_exp_b -> term .)
    NE              reduce using rule 21 (m_exp_b -> term .)
    EQEQ            reduce using rule 21 (m_exp_b -> term .)
    LE              reduce using rule 21 (m_exp_b -> term .)
    GE              reduce using rule 21 (m_exp_b -> term .)
    SC              reduce using rule 21 (m_exp_b -> term .)
    COMMA           reduce using rule 21 (m_exp_b -> term .)
    AND             reduce using rule 21 (m_exp_b -> term .)
    OR              reduce using rule 21 (m_exp_b -> term .)
    CSB             reduce using rule 21 (m_exp_b -> term .)
    CP              reduce using rule 21 (m_exp_b -> term .)


state 83

    (22) term -> term_b .
    (23) term -> term_b . term_a term
    (24) term_a -> . MULT
    (25) term_a -> . DIV

    ADD             reduce using rule 22 (term -> term_b .)
    SUB             reduce using rule 22 (term -> term_b .)
    LT              reduce using rule 22 (term -> term_b .)
    GT              reduce using rule 22 (term -> term_b .)
    NE              reduce using rule 22 (term -> term_b .)
    EQEQ            reduce using rule 22 (term -> term_b .)
    LE              reduce using rule 22 (term -> term_b .)
    GE              reduce using rule 22 (term -> term_b .)
    SC              reduce using rule 22 (term -> term_b .)
    COMMA           reduce using rule 22 (term -> term_b .)
    AND             reduce using rule 22 (term -> term_b .)
    OR              reduce using rule 22 (term -> term_b .)
    CSB             reduce using rule 22 (term -> term_b .)
    CP              reduce using rule 22 (term -> term_b .)
    MULT            shift and go to state 134
    DIV             shift and go to state 135

    term_a                         shift and go to state 133

state 84

    (26) term_b -> fact .

    MULT            reduce using rule 26 (term_b -> fact .)
    DIV             reduce using rule 26 (term_b -> fact .)
    ADD             reduce using rule 26 (term_b -> fact .)
    SUB             reduce using rule 26 (term_b -> fact .)
    LT              reduce using rule 26 (term_b -> fact .)
    GT              reduce using rule 26 (term_b -> fact .)
    NE              reduce using rule 26 (term_b -> fact .)
    EQEQ            reduce using rule 26 (term_b -> fact .)
    LE              reduce using rule 26 (term_b -> fact .)
    GE              reduce using rule 26 (term_b -> fact .)
    SC              reduce using rule 26 (term_b -> fact .)
    COMMA           reduce using rule 26 (term_b -> fact .)
    AND             reduce using rule 26 (term_b -> fact .)
    OR              reduce using rule 26 (term_b -> fact .)
    CSB             reduce using rule 26 (term_b -> fact .)
    CP              reduce using rule 26 (term_b -> fact .)


state 85

    (81) fact -> fact_a . exp CP
    (63) exp -> . and_exp exp_a
    (66) and_exp -> . expresion and_exp_a
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    fact_a                         shift and go to state 85
    exp                            shift and go to state 136
    and_exp                        shift and go to state 98
    expresion                      shift and go to state 99
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    llamada                        shift and go to state 90

state 86

    (82) fact -> CTE_I .

    MULT            reduce using rule 82 (fact -> CTE_I .)
    DIV             reduce using rule 82 (fact -> CTE_I .)
    ADD             reduce using rule 82 (fact -> CTE_I .)
    SUB             reduce using rule 82 (fact -> CTE_I .)
    LT              reduce using rule 82 (fact -> CTE_I .)
    GT              reduce using rule 82 (fact -> CTE_I .)
    NE              reduce using rule 82 (fact -> CTE_I .)
    EQEQ            reduce using rule 82 (fact -> CTE_I .)
    LE              reduce using rule 82 (fact -> CTE_I .)
    GE              reduce using rule 82 (fact -> CTE_I .)
    SC              reduce using rule 82 (fact -> CTE_I .)
    COMMA           reduce using rule 82 (fact -> CTE_I .)
    AND             reduce using rule 82 (fact -> CTE_I .)
    OR              reduce using rule 82 (fact -> CTE_I .)
    CSB             reduce using rule 82 (fact -> CTE_I .)
    CP              reduce using rule 82 (fact -> CTE_I .)


state 87

    (83) fact -> CTE_F .

    MULT            reduce using rule 83 (fact -> CTE_F .)
    DIV             reduce using rule 83 (fact -> CTE_F .)
    ADD             reduce using rule 83 (fact -> CTE_F .)
    SUB             reduce using rule 83 (fact -> CTE_F .)
    LT              reduce using rule 83 (fact -> CTE_F .)
    GT              reduce using rule 83 (fact -> CTE_F .)
    NE              reduce using rule 83 (fact -> CTE_F .)
    EQEQ            reduce using rule 83 (fact -> CTE_F .)
    LE              reduce using rule 83 (fact -> CTE_F .)
    GE              reduce using rule 83 (fact -> CTE_F .)
    SC              reduce using rule 83 (fact -> CTE_F .)
    COMMA           reduce using rule 83 (fact -> CTE_F .)
    AND             reduce using rule 83 (fact -> CTE_F .)
    OR              reduce using rule 83 (fact -> CTE_F .)
    CSB             reduce using rule 83 (fact -> CTE_F .)
    CP              reduce using rule 83 (fact -> CTE_F .)


state 88

    (84) fact -> CTE_CHAR .

    MULT            reduce using rule 84 (fact -> CTE_CHAR .)
    DIV             reduce using rule 84 (fact -> CTE_CHAR .)
    ADD             reduce using rule 84 (fact -> CTE_CHAR .)
    SUB             reduce using rule 84 (fact -> CTE_CHAR .)
    LT              reduce using rule 84 (fact -> CTE_CHAR .)
    GT              reduce using rule 84 (fact -> CTE_CHAR .)
    NE              reduce using rule 84 (fact -> CTE_CHAR .)
    EQEQ            reduce using rule 84 (fact -> CTE_CHAR .)
    LE              reduce using rule 84 (fact -> CTE_CHAR .)
    GE              reduce using rule 84 (fact -> CTE_CHAR .)
    SC              reduce using rule 84 (fact -> CTE_CHAR .)
    COMMA           reduce using rule 84 (fact -> CTE_CHAR .)
    AND             reduce using rule 84 (fact -> CTE_CHAR .)
    OR              reduce using rule 84 (fact -> CTE_CHAR .)
    CSB             reduce using rule 84 (fact -> CTE_CHAR .)
    CP              reduce using rule 84 (fact -> CTE_CHAR .)


state 89

    (85) fact -> ID .
    (75) llamada -> ID . OP llamada_a CP SC

    MULT            reduce using rule 85 (fact -> ID .)
    DIV             reduce using rule 85 (fact -> ID .)
    ADD             reduce using rule 85 (fact -> ID .)
    SUB             reduce using rule 85 (fact -> ID .)
    LT              reduce using rule 85 (fact -> ID .)
    GT              reduce using rule 85 (fact -> ID .)
    NE              reduce using rule 85 (fact -> ID .)
    EQEQ            reduce using rule 85 (fact -> ID .)
    LE              reduce using rule 85 (fact -> ID .)
    GE              reduce using rule 85 (fact -> ID .)
    SC              reduce using rule 85 (fact -> ID .)
    COMMA           reduce using rule 85 (fact -> ID .)
    AND             reduce using rule 85 (fact -> ID .)
    OR              reduce using rule 85 (fact -> ID .)
    CSB             reduce using rule 85 (fact -> ID .)
    CP              reduce using rule 85 (fact -> ID .)
    OP              shift and go to state 65


state 90

    (86) fact -> llamada .

    MULT            reduce using rule 86 (fact -> llamada .)
    DIV             reduce using rule 86 (fact -> llamada .)
    ADD             reduce using rule 86 (fact -> llamada .)
    SUB             reduce using rule 86 (fact -> llamada .)
    LT              reduce using rule 86 (fact -> llamada .)
    GT              reduce using rule 86 (fact -> llamada .)
    NE              reduce using rule 86 (fact -> llamada .)
    EQEQ            reduce using rule 86 (fact -> llamada .)
    LE              reduce using rule 86 (fact -> llamada .)
    GE              reduce using rule 86 (fact -> llamada .)
    SC              reduce using rule 86 (fact -> llamada .)
    COMMA           reduce using rule 86 (fact -> llamada .)
    AND             reduce using rule 86 (fact -> llamada .)
    OR              reduce using rule 86 (fact -> llamada .)
    CSB             reduce using rule 86 (fact -> llamada .)
    CP              reduce using rule 86 (fact -> llamada .)


state 91

    (87) fact_a -> OP .

    CTE_I           reduce using rule 87 (fact_a -> OP .)
    CTE_F           reduce using rule 87 (fact_a -> OP .)
    CTE_CHAR        reduce using rule 87 (fact_a -> OP .)
    ID              reduce using rule 87 (fact_a -> OP .)
    OP              reduce using rule 87 (fact_a -> OP .)


state 92

    (100) condicion_c -> IF OP . expresion CP
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    expresion                      shift and go to state 137
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 93

    (62) while_b -> while_a OP . expresion CP
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    expresion                      shift and go to state 138
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 94

    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a . SC

    SC              shift and go to state 139


state 95

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .

    INT             reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FLOAT           reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    CHAR            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    ID              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FILE            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    OB              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    VOID            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)


state 96

    (12) vars_b -> ID EQ expresion .

    COMMA           reduce using rule 12 (vars_b -> ID EQ expresion .)
    SC              reduce using rule 12 (vars_b -> ID EQ expresion .)


state 97

    (16) vars_vect_mat_a -> OSB exp . CSB

    CSB             shift and go to state 140


state 98

    (63) exp -> and_exp . exp_a
    (64) exp_a -> . OR
    (65) exp_a -> . empty
    (114) empty -> .

    OR              shift and go to state 142
    CSB             reduce using rule 114 (empty -> .)
    CP              reduce using rule 114 (empty -> .)

    exp_a                          shift and go to state 141
    empty                          shift and go to state 143

state 99

    (66) and_exp -> expresion . and_exp_a
    (67) and_exp_a -> . AND
    (68) and_exp_a -> . empty
    (114) empty -> .

    AND             shift and go to state 145
    OR              reduce using rule 114 (empty -> .)
    CSB             reduce using rule 114 (empty -> .)
    CP              reduce using rule 114 (empty -> .)

    and_exp_a                      shift and go to state 144
    empty                          shift and go to state 146

state 100

    (104) asignacion -> ID asignacion_a asignacion_a . EQ expresion SC

    EQ              shift and go to state 147


state 101

    (75) llamada -> ID OP llamada_a . CP SC

    CP              shift and go to state 148


state 102

    (76) llamada_a -> expresion . llamada_b
    (79) llamada_b -> . COMMA llamada_a
    (80) llamada_b -> . empty
    (114) empty -> .

    COMMA           shift and go to state 105
    CP              reduce using rule 114 (empty -> .)

    llamada_b                      shift and go to state 149
    empty                          shift and go to state 106

state 103

    (78) llamada_a -> llamada_b .

    CP              reduce using rule 78 (llamada_a -> llamada_b .)


state 104

    (77) llamada_a -> CTE_STRING . llamada_b
    (79) llamada_b -> . COMMA llamada_a
    (80) llamada_b -> . empty
    (114) empty -> .

    COMMA           shift and go to state 105
    CP              reduce using rule 114 (empty -> .)

    llamada_b                      shift and go to state 150
    empty                          shift and go to state 106

state 105

    (79) llamada_b -> COMMA . llamada_a
    (76) llamada_a -> . expresion llamada_b
    (77) llamada_a -> . CTE_STRING llamada_b
    (78) llamada_a -> . llamada_b
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (79) llamada_b -> . COMMA llamada_a
    (80) llamada_b -> . empty
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (114) empty -> .
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_STRING      shift and go to state 104
    COMMA           shift and go to state 105
    CP              reduce using rule 114 (empty -> .)
    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    llamada_a                      shift and go to state 151
    expresion                      shift and go to state 102
    llamada_b                      shift and go to state 103
    m_exp                          shift and go to state 80
    empty                          shift and go to state 106
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 106

    (80) llamada_b -> empty .

    CP              reduce using rule 80 (llamada_b -> empty .)


state 107

    (75) llamada -> ID . OP llamada_a CP SC

    OP              shift and go to state 65


state 108

    (103) llamadafuncionclase -> ID POINT llamada .

    ID              reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    CLASS           reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    CLASS_ID        reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    RETURN          reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    IF              reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    FOR             reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    INT             reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    FLOAT           reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    CHAR            reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    DATAFRAME       reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    FILE            reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    VOID            reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    WHILE           reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)
    CB              reduce using rule 103 (llamadafuncionclase -> ID POINT llamada .)


state 109

    (105) asignacion_a -> OSB exp . CSB

    CSB             shift and go to state 152


state 110

    (96) condicion -> condicion_c bloque condicion_a .

    ID              reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    CLASS           reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    CLASS_ID        reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    RETURN          reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    IF              reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    FOR             reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    INT             reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    FLOAT           reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    CHAR            reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    DATAFRAME       reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    FILE            reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    VOID            reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    WHILE           reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    CB              reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)
    OB              reduce using rule 96 (condicion -> condicion_c bloque condicion_a .)


state 111

    (97) condicion_a -> condicion_d . condicion_b bloque
    (98) condicion_b -> . condicion
    (99) condicion_b -> . empty
    (96) condicion -> . condicion_c bloque condicion_a
    (114) empty -> .
    (100) condicion_c -> . IF OP expresion CP

    OB              reduce using rule 114 (empty -> .)
    IF              shift and go to state 50

    condicion_b                    shift and go to state 153
    condicion                      shift and go to state 154
    empty                          shift and go to state 155
    condicion_c                    shift and go to state 42

state 112

    (101) condicion_d -> ELSE .

    IF              reduce using rule 101 (condicion_d -> ELSE .)
    OB              reduce using rule 101 (condicion_d -> ELSE .)


state 113

    (69) for -> for_a for_b bloque .

    ID              reduce using rule 69 (for -> for_a for_b bloque .)
    CLASS           reduce using rule 69 (for -> for_a for_b bloque .)
    CLASS_ID        reduce using rule 69 (for -> for_a for_b bloque .)
    RETURN          reduce using rule 69 (for -> for_a for_b bloque .)
    IF              reduce using rule 69 (for -> for_a for_b bloque .)
    FOR             reduce using rule 69 (for -> for_a for_b bloque .)
    INT             reduce using rule 69 (for -> for_a for_b bloque .)
    FLOAT           reduce using rule 69 (for -> for_a for_b bloque .)
    CHAR            reduce using rule 69 (for -> for_a for_b bloque .)
    DATAFRAME       reduce using rule 69 (for -> for_a for_b bloque .)
    FILE            reduce using rule 69 (for -> for_a for_b bloque .)
    VOID            reduce using rule 69 (for -> for_a for_b bloque .)
    WHILE           reduce using rule 69 (for -> for_a for_b bloque .)
    CB              reduce using rule 69 (for -> for_a for_b bloque .)


state 114

    (71) for_b -> for_e asignacionsencilla . CP

    CP              shift and go to state 156


state 115

    (107) asignacionsencilla -> ID . EQ expresion

    EQ              shift and go to state 157


state 116

    (74) for_e -> for_d SC .

    ID              reduce using rule 74 (for_e -> for_d SC .)


state 117

    (73) for_d -> for_c expresion .

    SC              reduce using rule 73 (for_d -> for_c expresion .)


state 118

    (72) for_c -> OP asignacionsencilla . SC

    SC              shift and go to state 158


state 119

    (88) classcreate -> CLASS CLASS_ID OB . classcreate_a function classcreate_c CB
    (89) classcreate_a -> . vars classcreate_a
    (90) classcreate_a -> . vars_vect_mat classcreate_a
    (91) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (114) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 114 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 114 (empty -> .) ]
  ! FLOAT           [ reduce using rule 114 (empty -> .) ]
  ! CHAR            [ reduce using rule 114 (empty -> .) ]

    classcreate_a                  shift and go to state 159
    vars                           shift and go to state 160
    vars_vect_mat                  shift and go to state 161
    empty                          shift and go to state 162
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 120

    (102) classdeclare -> CLASS_ID ID SC .

    ID              reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    CLASS           reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    CLASS_ID        reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    RETURN          reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    IF              reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    FOR             reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    INT             reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    FLOAT           reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    CHAR            reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    DATAFRAME       reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    FILE            reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    VOID            reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    WHILE           reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)
    CB              reduce using rule 102 (classdeclare -> CLASS_ID ID SC .)


state 121

    (108) function -> function_a ID OP . function_b CP bloque
    (111) function_b -> . tiposimple ID
    (112) function_b -> . tiposimple ID COMMA function_b
    (113) function_b -> . empty
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (114) empty -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    CP              reduce using rule 114 (empty -> .)

    function_b                     shift and go to state 163
    tiposimple                     shift and go to state 164
    empty                          shift and go to state 165

state 122

    (48) return -> RETURN expresion SC .

    ID              reduce using rule 48 (return -> RETURN expresion SC .)
    CLASS           reduce using rule 48 (return -> RETURN expresion SC .)
    CLASS_ID        reduce using rule 48 (return -> RETURN expresion SC .)
    RETURN          reduce using rule 48 (return -> RETURN expresion SC .)
    IF              reduce using rule 48 (return -> RETURN expresion SC .)
    FOR             reduce using rule 48 (return -> RETURN expresion SC .)
    INT             reduce using rule 48 (return -> RETURN expresion SC .)
    FLOAT           reduce using rule 48 (return -> RETURN expresion SC .)
    CHAR            reduce using rule 48 (return -> RETURN expresion SC .)
    DATAFRAME       reduce using rule 48 (return -> RETURN expresion SC .)
    FILE            reduce using rule 48 (return -> RETURN expresion SC .)
    VOID            reduce using rule 48 (return -> RETURN expresion SC .)
    WHILE           reduce using rule 48 (return -> RETURN expresion SC .)
    CB              reduce using rule 48 (return -> RETURN expresion SC .)


state 123

    (50) expresion -> m_exp expresion_a . m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    m_exp                          shift and go to state 166
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 124

    (51) expresion_a -> LT .

    CTE_I           reduce using rule 51 (expresion_a -> LT .)
    CTE_F           reduce using rule 51 (expresion_a -> LT .)
    CTE_CHAR        reduce using rule 51 (expresion_a -> LT .)
    ID              reduce using rule 51 (expresion_a -> LT .)
    OP              reduce using rule 51 (expresion_a -> LT .)


state 125

    (52) expresion_a -> GT .

    CTE_I           reduce using rule 52 (expresion_a -> GT .)
    CTE_F           reduce using rule 52 (expresion_a -> GT .)
    CTE_CHAR        reduce using rule 52 (expresion_a -> GT .)
    ID              reduce using rule 52 (expresion_a -> GT .)
    OP              reduce using rule 52 (expresion_a -> GT .)


state 126

    (53) expresion_a -> NE .

    CTE_I           reduce using rule 53 (expresion_a -> NE .)
    CTE_F           reduce using rule 53 (expresion_a -> NE .)
    CTE_CHAR        reduce using rule 53 (expresion_a -> NE .)
    ID              reduce using rule 53 (expresion_a -> NE .)
    OP              reduce using rule 53 (expresion_a -> NE .)


state 127

    (54) expresion_a -> EQEQ .

    CTE_I           reduce using rule 54 (expresion_a -> EQEQ .)
    CTE_F           reduce using rule 54 (expresion_a -> EQEQ .)
    CTE_CHAR        reduce using rule 54 (expresion_a -> EQEQ .)
    ID              reduce using rule 54 (expresion_a -> EQEQ .)
    OP              reduce using rule 54 (expresion_a -> EQEQ .)


state 128

    (55) expresion_a -> LE .

    CTE_I           reduce using rule 55 (expresion_a -> LE .)
    CTE_F           reduce using rule 55 (expresion_a -> LE .)
    CTE_CHAR        reduce using rule 55 (expresion_a -> LE .)
    ID              reduce using rule 55 (expresion_a -> LE .)
    OP              reduce using rule 55 (expresion_a -> LE .)


state 129

    (56) expresion_a -> GE .

    CTE_I           reduce using rule 56 (expresion_a -> GE .)
    CTE_F           reduce using rule 56 (expresion_a -> GE .)
    CTE_CHAR        reduce using rule 56 (expresion_a -> GE .)
    ID              reduce using rule 56 (expresion_a -> GE .)
    OP              reduce using rule 56 (expresion_a -> GE .)


state 130

    (18) m_exp -> m_exp_b m_exp_a . m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    m_exp_b                        shift and go to state 81
    m_exp                          shift and go to state 167
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 131

    (19) m_exp_a -> ADD .

    CTE_I           reduce using rule 19 (m_exp_a -> ADD .)
    CTE_F           reduce using rule 19 (m_exp_a -> ADD .)
    CTE_CHAR        reduce using rule 19 (m_exp_a -> ADD .)
    ID              reduce using rule 19 (m_exp_a -> ADD .)
    OP              reduce using rule 19 (m_exp_a -> ADD .)


state 132

    (20) m_exp_a -> SUB .

    CTE_I           reduce using rule 20 (m_exp_a -> SUB .)
    CTE_F           reduce using rule 20 (m_exp_a -> SUB .)
    CTE_CHAR        reduce using rule 20 (m_exp_a -> SUB .)
    ID              reduce using rule 20 (m_exp_a -> SUB .)
    OP              reduce using rule 20 (m_exp_a -> SUB .)


state 133

    (23) term -> term_b term_a . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    term_b                         shift and go to state 83
    term                           shift and go to state 168
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 134

    (24) term_a -> MULT .

    CTE_I           reduce using rule 24 (term_a -> MULT .)
    CTE_F           reduce using rule 24 (term_a -> MULT .)
    CTE_CHAR        reduce using rule 24 (term_a -> MULT .)
    ID              reduce using rule 24 (term_a -> MULT .)
    OP              reduce using rule 24 (term_a -> MULT .)


state 135

    (25) term_a -> DIV .

    CTE_I           reduce using rule 25 (term_a -> DIV .)
    CTE_F           reduce using rule 25 (term_a -> DIV .)
    CTE_CHAR        reduce using rule 25 (term_a -> DIV .)
    ID              reduce using rule 25 (term_a -> DIV .)
    OP              reduce using rule 25 (term_a -> DIV .)


state 136

    (81) fact -> fact_a exp . CP

    CP              shift and go to state 169


state 137

    (100) condicion_c -> IF OP expresion . CP

    CP              shift and go to state 170


state 138

    (62) while_b -> while_a OP expresion . CP

    CP              shift and go to state 171


state 139

    (15) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .

    INT             reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FLOAT           reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    CHAR            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    ID              reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FILE            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    OB              reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    VOID            reduce using rule 15 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)


state 140

    (16) vars_vect_mat_a -> OSB exp CSB .

    SC              reduce using rule 16 (vars_vect_mat_a -> OSB exp CSB .)
    OSB             reduce using rule 16 (vars_vect_mat_a -> OSB exp CSB .)


state 141

    (63) exp -> and_exp exp_a .

    CSB             reduce using rule 63 (exp -> and_exp exp_a .)
    CP              reduce using rule 63 (exp -> and_exp exp_a .)


state 142

    (64) exp_a -> OR .

    CSB             reduce using rule 64 (exp_a -> OR .)
    CP              reduce using rule 64 (exp_a -> OR .)


state 143

    (65) exp_a -> empty .

    CSB             reduce using rule 65 (exp_a -> empty .)
    CP              reduce using rule 65 (exp_a -> empty .)


state 144

    (66) and_exp -> expresion and_exp_a .

    OR              reduce using rule 66 (and_exp -> expresion and_exp_a .)
    CSB             reduce using rule 66 (and_exp -> expresion and_exp_a .)
    CP              reduce using rule 66 (and_exp -> expresion and_exp_a .)


state 145

    (67) and_exp_a -> AND .

    OR              reduce using rule 67 (and_exp_a -> AND .)
    CSB             reduce using rule 67 (and_exp_a -> AND .)
    CP              reduce using rule 67 (and_exp_a -> AND .)


state 146

    (68) and_exp_a -> empty .

    OR              reduce using rule 68 (and_exp_a -> empty .)
    CSB             reduce using rule 68 (and_exp_a -> empty .)
    CP              reduce using rule 68 (and_exp_a -> empty .)


state 147

    (104) asignacion -> ID asignacion_a asignacion_a EQ . expresion SC
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    expresion                      shift and go to state 172
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 148

    (75) llamada -> ID OP llamada_a CP . SC

    SC              shift and go to state 173


state 149

    (76) llamada_a -> expresion llamada_b .

    CP              reduce using rule 76 (llamada_a -> expresion llamada_b .)


state 150

    (77) llamada_a -> CTE_STRING llamada_b .

    CP              reduce using rule 77 (llamada_a -> CTE_STRING llamada_b .)


state 151

    (79) llamada_b -> COMMA llamada_a .

    CP              reduce using rule 79 (llamada_b -> COMMA llamada_a .)


state 152

    (105) asignacion_a -> OSB exp CSB .

    OSB             reduce using rule 105 (asignacion_a -> OSB exp CSB .)
    EQ              reduce using rule 105 (asignacion_a -> OSB exp CSB .)


state 153

    (97) condicion_a -> condicion_d condicion_b . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 174

state 154

    (98) condicion_b -> condicion .

    OB              reduce using rule 98 (condicion_b -> condicion .)


state 155

    (99) condicion_b -> empty .

    OB              reduce using rule 99 (condicion_b -> empty .)


state 156

    (71) for_b -> for_e asignacionsencilla CP .

    OB              reduce using rule 71 (for_b -> for_e asignacionsencilla CP .)


state 157

    (107) asignacionsencilla -> ID EQ . expresion
    (49) expresion -> . m_exp
    (50) expresion -> . m_exp expresion_a m_exp
    (17) m_exp -> . m_exp_b
    (18) m_exp -> . m_exp_b m_exp_a m_exp
    (21) m_exp_b -> . term
    (22) term -> . term_b
    (23) term -> . term_b term_a term
    (26) term_b -> . fact
    (81) fact -> . fact_a exp CP
    (82) fact -> . CTE_I
    (83) fact -> . CTE_F
    (84) fact -> . CTE_CHAR
    (85) fact -> . ID
    (86) fact -> . llamada
    (87) fact_a -> . OP
    (75) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_CHAR        shift and go to state 88
    ID              shift and go to state 89
    OP              shift and go to state 91

    expresion                      shift and go to state 175
    m_exp                          shift and go to state 80
    m_exp_b                        shift and go to state 81
    term                           shift and go to state 82
    term_b                         shift and go to state 83
    fact                           shift and go to state 84
    fact_a                         shift and go to state 85
    llamada                        shift and go to state 90

state 158

    (72) for_c -> OP asignacionsencilla SC .

    CTE_I           reduce using rule 72 (for_c -> OP asignacionsencilla SC .)
    CTE_F           reduce using rule 72 (for_c -> OP asignacionsencilla SC .)
    CTE_CHAR        reduce using rule 72 (for_c -> OP asignacionsencilla SC .)
    ID              reduce using rule 72 (for_c -> OP asignacionsencilla SC .)
    OP              reduce using rule 72 (for_c -> OP asignacionsencilla SC .)


state 159

    (88) classcreate -> CLASS CLASS_ID OB classcreate_a . function classcreate_c CB
    (108) function -> . function_a ID OP function_b CP bloque
    (109) function_a -> . VOID
    (110) function_a -> . tiposimple
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    VOID            shift and go to state 53
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 176
    function_a                     shift and go to state 48
    tiposimple                     shift and go to state 177

state 160

    (89) classcreate_a -> vars . classcreate_a
    (89) classcreate_a -> . vars classcreate_a
    (90) classcreate_a -> . vars_vect_mat classcreate_a
    (91) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (114) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 114 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 114 (empty -> .) ]
  ! FLOAT           [ reduce using rule 114 (empty -> .) ]
  ! CHAR            [ reduce using rule 114 (empty -> .) ]

    vars                           shift and go to state 160
    classcreate_a                  shift and go to state 178
    vars_vect_mat                  shift and go to state 161
    empty                          shift and go to state 162
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 161

    (90) classcreate_a -> vars_vect_mat . classcreate_a
    (89) classcreate_a -> . vars classcreate_a
    (90) classcreate_a -> . vars_vect_mat classcreate_a
    (91) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (15) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (114) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (30) tipocompuesto -> . DATAFRAME
    (31) tipocompuesto -> . ID
    (32) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 114 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 114 (empty -> .) ]
  ! FLOAT           [ reduce using rule 114 (empty -> .) ]
  ! CHAR            [ reduce using rule 114 (empty -> .) ]

    vars_vect_mat                  shift and go to state 161
    classcreate_a                  shift and go to state 179
    vars                           shift and go to state 160
    empty                          shift and go to state 162
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 162

    (91) classcreate_a -> empty .

    VOID            reduce using rule 91 (classcreate_a -> empty .)
    INT             reduce using rule 91 (classcreate_a -> empty .)
    FLOAT           reduce using rule 91 (classcreate_a -> empty .)
    CHAR            reduce using rule 91 (classcreate_a -> empty .)


state 163

    (108) function -> function_a ID OP function_b . CP bloque

    CP              shift and go to state 180


state 164

    (111) function_b -> tiposimple . ID
    (112) function_b -> tiposimple . ID COMMA function_b

    ID              shift and go to state 181


state 165

    (113) function_b -> empty .

    CP              reduce using rule 113 (function_b -> empty .)


state 166

    (50) expresion -> m_exp expresion_a m_exp .

    SC              reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    COMMA           reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    AND             reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    OR              reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    CSB             reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)
    CP              reduce using rule 50 (expresion -> m_exp expresion_a m_exp .)


state 167

    (18) m_exp -> m_exp_b m_exp_a m_exp .

    LT              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    GT              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    NE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    EQEQ            reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    LE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    GE              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    SC              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    COMMA           reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    AND             reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    OR              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    CSB             reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)
    CP              reduce using rule 18 (m_exp -> m_exp_b m_exp_a m_exp .)


state 168

    (23) term -> term_b term_a term .

    ADD             reduce using rule 23 (term -> term_b term_a term .)
    SUB             reduce using rule 23 (term -> term_b term_a term .)
    LT              reduce using rule 23 (term -> term_b term_a term .)
    GT              reduce using rule 23 (term -> term_b term_a term .)
    NE              reduce using rule 23 (term -> term_b term_a term .)
    EQEQ            reduce using rule 23 (term -> term_b term_a term .)
    LE              reduce using rule 23 (term -> term_b term_a term .)
    GE              reduce using rule 23 (term -> term_b term_a term .)
    SC              reduce using rule 23 (term -> term_b term_a term .)
    COMMA           reduce using rule 23 (term -> term_b term_a term .)
    AND             reduce using rule 23 (term -> term_b term_a term .)
    OR              reduce using rule 23 (term -> term_b term_a term .)
    CSB             reduce using rule 23 (term -> term_b term_a term .)
    CP              reduce using rule 23 (term -> term_b term_a term .)


state 169

    (81) fact -> fact_a exp CP .

    MULT            reduce using rule 81 (fact -> fact_a exp CP .)
    DIV             reduce using rule 81 (fact -> fact_a exp CP .)
    ADD             reduce using rule 81 (fact -> fact_a exp CP .)
    SUB             reduce using rule 81 (fact -> fact_a exp CP .)
    LT              reduce using rule 81 (fact -> fact_a exp CP .)
    GT              reduce using rule 81 (fact -> fact_a exp CP .)
    NE              reduce using rule 81 (fact -> fact_a exp CP .)
    EQEQ            reduce using rule 81 (fact -> fact_a exp CP .)
    LE              reduce using rule 81 (fact -> fact_a exp CP .)
    GE              reduce using rule 81 (fact -> fact_a exp CP .)
    SC              reduce using rule 81 (fact -> fact_a exp CP .)
    COMMA           reduce using rule 81 (fact -> fact_a exp CP .)
    AND             reduce using rule 81 (fact -> fact_a exp CP .)
    OR              reduce using rule 81 (fact -> fact_a exp CP .)
    CSB             reduce using rule 81 (fact -> fact_a exp CP .)
    CP              reduce using rule 81 (fact -> fact_a exp CP .)


state 170

    (100) condicion_c -> IF OP expresion CP .

    OB              reduce using rule 100 (condicion_c -> IF OP expresion CP .)


state 171

    (62) while_b -> while_a OP expresion CP .

    OB              reduce using rule 62 (while_b -> while_a OP expresion CP .)


state 172

    (104) asignacion -> ID asignacion_a asignacion_a EQ expresion . SC

    SC              shift and go to state 182


state 173

    (75) llamada -> ID OP llamada_a CP SC .

    ID              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    CLASS           reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    CLASS_ID        reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    RETURN          reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    IF              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    FOR             reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    INT             reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    FLOAT           reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    CHAR            reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    DATAFRAME       reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    FILE            reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    VOID            reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    WHILE           reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    CB              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    MULT            reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    DIV             reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    ADD             reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    SUB             reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    LT              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    GT              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    NE              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    EQEQ            reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    LE              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    GE              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    SC              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    COMMA           reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    AND             reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    OR              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    CSB             reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)
    CP              reduce using rule 75 (llamada -> ID OP llamada_a CP SC .)


state 174

    (97) condicion_a -> condicion_d condicion_b bloque .

    ID              reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS           reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    CLASS_ID        reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    RETURN          reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    IF              reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    FOR             reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    INT             reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    FLOAT           reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    CHAR            reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    DATAFRAME       reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    FILE            reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    VOID            reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    WHILE           reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    CB              reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)
    OB              reduce using rule 97 (condicion_a -> condicion_d condicion_b bloque .)


state 175

    (107) asignacionsencilla -> ID EQ expresion .

    CP              reduce using rule 107 (asignacionsencilla -> ID EQ expresion .)
    SC              reduce using rule 107 (asignacionsencilla -> ID EQ expresion .)


state 176

    (88) classcreate -> CLASS CLASS_ID OB classcreate_a function . classcreate_c CB
    (92) classcreate_c -> . function classcreate_d
    (93) classcreate_c -> . classcreate_d
    (108) function -> . function_a ID OP function_b CP bloque
    (94) classcreate_d -> . classcreate_c
    (95) classcreate_d -> . empty
    (109) function_a -> . VOID
    (110) function_a -> . tiposimple
    (114) empty -> .
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    VOID            shift and go to state 53
    CB              reduce using rule 114 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 183
    classcreate_c                  shift and go to state 184
    classcreate_d                  shift and go to state 185
    function_a                     shift and go to state 48
    empty                          shift and go to state 186
    tiposimple                     shift and go to state 177

state 177

    (110) function_a -> tiposimple .

    ID              reduce using rule 110 (function_a -> tiposimple .)


state 178

    (89) classcreate_a -> vars classcreate_a .

    VOID            reduce using rule 89 (classcreate_a -> vars classcreate_a .)
    INT             reduce using rule 89 (classcreate_a -> vars classcreate_a .)
    FLOAT           reduce using rule 89 (classcreate_a -> vars classcreate_a .)
    CHAR            reduce using rule 89 (classcreate_a -> vars classcreate_a .)


state 179

    (90) classcreate_a -> vars_vect_mat classcreate_a .

    VOID            reduce using rule 90 (classcreate_a -> vars_vect_mat classcreate_a .)
    INT             reduce using rule 90 (classcreate_a -> vars_vect_mat classcreate_a .)
    FLOAT           reduce using rule 90 (classcreate_a -> vars_vect_mat classcreate_a .)
    CHAR            reduce using rule 90 (classcreate_a -> vars_vect_mat classcreate_a .)


state 180

    (108) function -> function_a ID OP function_b CP . bloque
    (33) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 187

state 181

    (111) function_b -> tiposimple ID .
    (112) function_b -> tiposimple ID . COMMA function_b

    CP              reduce using rule 111 (function_b -> tiposimple ID .)
    COMMA           shift and go to state 188


state 182

    (104) asignacion -> ID asignacion_a asignacion_a EQ expresion SC .

    ID              reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS           reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS_ID        reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    RETURN          reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    IF              reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FOR             reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    INT             reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FLOAT           reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CHAR            reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DATAFRAME       reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FILE            reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    VOID            reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    WHILE           reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CB              reduce using rule 104 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)


state 183

    (92) classcreate_c -> function . classcreate_d
    (94) classcreate_d -> . classcreate_c
    (95) classcreate_d -> . empty
    (92) classcreate_c -> . function classcreate_d
    (93) classcreate_c -> . classcreate_d
    (114) empty -> .
    (108) function -> . function_a ID OP function_b CP bloque
    (109) function_a -> . VOID
    (110) function_a -> . tiposimple
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR

    CB              reduce using rule 114 (empty -> .)
    VOID            shift and go to state 53
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 183
    classcreate_d                  shift and go to state 189
    classcreate_c                  shift and go to state 190
    empty                          shift and go to state 186
    function_a                     shift and go to state 48
    tiposimple                     shift and go to state 177

state 184

    (88) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c . CB
    (94) classcreate_d -> classcreate_c .

  ! shift/reduce conflict for CB resolved as shift
    CB              shift and go to state 191

  ! CB              [ reduce using rule 94 (classcreate_d -> classcreate_c .) ]


state 185

    (93) classcreate_c -> classcreate_d .

    CB              reduce using rule 93 (classcreate_c -> classcreate_d .)


state 186

    (95) classcreate_d -> empty .

    CB              reduce using rule 95 (classcreate_d -> empty .)


state 187

    (108) function -> function_a ID OP function_b CP bloque .

    ID              reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    CLASS           reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    CLASS_ID        reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    RETURN          reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    IF              reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    FOR             reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    INT             reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    FLOAT           reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    CHAR            reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    DATAFRAME       reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    FILE            reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    VOID            reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    WHILE           reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)
    CB              reduce using rule 108 (function -> function_a ID OP function_b CP bloque .)


state 188

    (112) function_b -> tiposimple ID COMMA . function_b
    (111) function_b -> . tiposimple ID
    (112) function_b -> . tiposimple ID COMMA function_b
    (113) function_b -> . empty
    (27) tiposimple -> . INT
    (28) tiposimple -> . FLOAT
    (29) tiposimple -> . CHAR
    (114) empty -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    CP              reduce using rule 114 (empty -> .)

    tiposimple                     shift and go to state 164
    function_b                     shift and go to state 192
    empty                          shift and go to state 165

state 189

    (92) classcreate_c -> function classcreate_d .
    (93) classcreate_c -> classcreate_d .

  ! reduce/reduce conflict for CB resolved using rule 92 (classcreate_c -> function classcreate_d .)
    CB              reduce using rule 92 (classcreate_c -> function classcreate_d .)

  ! CB              [ reduce using rule 93 (classcreate_c -> classcreate_d .) ]


state 190

    (94) classcreate_d -> classcreate_c .

    CB              reduce using rule 94 (classcreate_d -> classcreate_c .)


state 191

    (88) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .

    ID              reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS           reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS_ID        reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    RETURN          reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    IF              reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FOR             reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INT             reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FLOAT           reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CHAR            reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DATAFRAME       reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FILE            reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    VOID            reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    WHILE           reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CB              reduce using rule 88 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)


state 192

    (112) function_b -> tiposimple ID COMMA function_b .

    CP              reduce using rule 112 (function_b -> tiposimple ID COMMA function_b .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OSB in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 47 resolved as shift
WARNING: shift/reduce conflict for INT in state 119 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 119 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 119 resolved as shift
WARNING: shift/reduce conflict for INT in state 160 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 160 resolved as shift
WARNING: shift/reduce conflict for INT in state 161 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 161 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 161 resolved as shift
WARNING: shift/reduce conflict for CB in state 184 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa_a -> programa_b)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 28 resolved using rule (bloque_a -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 189 resolved using rule (classcreate_c -> function classcreate_d)
WARNING: rejected rule (classcreate_c -> classcreate_d) in state 189
