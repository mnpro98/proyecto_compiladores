Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPT
    COL
    DIGIT
    DIGITS
    LETTER

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SC programa_a bloque
Rule 2     programa_a -> programa_b
Rule 3     programa_a -> programa_b programa_a
Rule 4     programa_a -> empty
Rule 5     programa_b -> vars
Rule 6     programa_b -> vars_vect_mat
Rule 7     vars -> tiposimple vars_a SC
Rule 8     vars -> tipocompuesto vars_a SC
Rule 9     vars_a -> vars_b
Rule 10    vars_a -> vars_b COMMA vars_a
Rule 11    vars_b -> ID
Rule 12    vars_b -> ID EQ expresion
Rule 13    vars_vect_mat -> tiposimple ID vars_vect_mat_a SC
Rule 14    vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
Rule 15    vars_vect_mat_a -> OSB exp CSB
Rule 16    m_exp -> m_exp_b
Rule 17    m_exp -> m_exp_b m_exp_a m_exp
Rule 18    m_exp_a -> ADD
Rule 19    m_exp_a -> SUB
Rule 20    m_exp_b -> term
Rule 21    term -> term_b
Rule 22    term -> term_b term_a term
Rule 23    term_a -> MULT
Rule 24    term_a -> DIV
Rule 25    term_b -> fact
Rule 26    tiposimple -> INT
Rule 27    tiposimple -> FLOAT
Rule 28    tiposimple -> CHAR
Rule 29    tipocompuesto -> DATAFRAME
Rule 30    tipocompuesto -> ID
Rule 31    tipocompuesto -> FILE
Rule 32    bloque -> OB bloque_a CB
Rule 33    bloque_a -> estatuto bloque_a
Rule 34    bloque_a -> estatuto
Rule 35    bloque_a -> empty
Rule 36    estatuto -> asignacion
Rule 37    estatuto -> condicion
Rule 38    estatuto -> llamada
Rule 39    estatuto -> while
Rule 40    estatuto -> for
Rule 41    estatuto -> classcreate
Rule 42    estatuto -> vars
Rule 43    estatuto -> classdeclare
Rule 44    estatuto -> llamadafuncionclase
Rule 45    estatuto -> function
Rule 46    expresion -> m_exp
Rule 47    expresion -> m_exp expresion_a m_exp
Rule 48    expresion_a -> LT
Rule 49    expresion_a -> GT
Rule 50    expresion_a -> NE
Rule 51    expresion_a -> EQEQ
Rule 52    expresion_a -> LE
Rule 53    expresion_a -> GE
Rule 54    varcte -> ID
Rule 55    varcte -> CTE_I
Rule 56    varcte -> CTE_F
Rule 57    while -> while_b bloque
Rule 58    while_a -> WHILE
Rule 59    while_b -> while_a OP expresion CP
Rule 60    exp -> and_exp exp_a
Rule 61    exp_a -> OR
Rule 62    exp_a -> empty
Rule 63    and_exp -> expresion and_exp_a
Rule 64    and_exp_a -> AND
Rule 65    and_exp_a -> empty
Rule 66    for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
Rule 67    llamada -> ID OP llamada_a CP SC
Rule 68    llamada_a -> expresion llamada_b
Rule 69    llamada_a -> CTE_STRING llamada_b
Rule 70    llamada_a -> llamada_b
Rule 71    llamada_b -> COMMA llamada_a
Rule 72    llamada_b -> empty
Rule 73    fact -> fact_a exp CP
Rule 74    fact -> CTE_I
Rule 75    fact -> CTE_F
Rule 76    fact -> CTE_CHAR
Rule 77    fact -> ID
Rule 78    fact -> llamada
Rule 79    fact_a -> OP
Rule 80    classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB
Rule 81    classcreate_a -> vars classcreate_a
Rule 82    classcreate_a -> vars_vect_mat classcreate_a
Rule 83    classcreate_a -> empty
Rule 84    classcreate_c -> function classcreate_d
Rule 85    classcreate_c -> classcreate_d
Rule 86    classcreate_d -> classcreate_c
Rule 87    classcreate_d -> empty
Rule 88    condicion -> IF OP expresion CP bloque condicion_a
Rule 89    condicion_a -> ELSE condicion_b bloque
Rule 90    condicion_b -> condicion
Rule 91    condicion_b -> empty
Rule 92    classdeclare -> CLASS_ID ID SC
Rule 93    llamadafuncionclase -> ID POINT llamada
Rule 94    asignacion -> ID asignacion_a asignacion_a EQ expresion SC
Rule 95    asignacion_a -> OSB exp CSB
Rule 96    asignacion_a -> empty
Rule 97    asignacionsencilla -> ID EQ expresion
Rule 98    function -> function_a ID OP function_b CP bloque
Rule 99    function_a -> VOID
Rule 100   function_a -> tiposimple
Rule 101   function_b -> tiposimple ID
Rule 102   function_b -> tiposimple ID COMMA function_b
Rule 103   function_b -> empty
Rule 104   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 18
AND                  : 64
CAPT                 : 
CB                   : 32 80
CHAR                 : 28
CLASS                : 80
CLASS_ID             : 80 92
COL                  : 
COMMA                : 10 71 102
CP                   : 59 66 67 73 88 98
CSB                  : 15 95
CTE_CHAR             : 76
CTE_F                : 56 75
CTE_I                : 55 74
CTE_STRING           : 69
DATAFRAME            : 29
DIGIT                : 
DIGITS               : 
DIV                  : 24
ELSE                 : 89
EQ                   : 12 94 97
EQEQ                 : 51
FILE                 : 31
FLOAT                : 27
FOR                  : 66
GE                   : 53
GT                   : 49
ID                   : 1 11 12 13 14 30 54 67 77 92 93 94 97 98 101 102
IF                   : 88
INT                  : 26
LE                   : 52
LETTER               : 
LT                   : 48
MULT                 : 23
NE                   : 50
OB                   : 32 80
OP                   : 59 66 67 79 88 98
OR                   : 61
OSB                  : 15 95
POINT                : 93
PROGRAM              : 1
SC                   : 1 7 8 13 14 66 66 67 92 94
SUB                  : 19
VOID                 : 99
WHILE                : 58
error                : 

Nonterminals, with rules where they appear

and_exp              : 60
and_exp_a            : 63
asignacion           : 36
asignacion_a         : 94 94
asignacionsencilla   : 66 66
bloque               : 1 57 66 88 89 98
bloque_a             : 32 33
classcreate          : 41
classcreate_a        : 80 81 82
classcreate_c        : 80 86
classcreate_d        : 84 85
classdeclare         : 43
condicion            : 37 90
condicion_a          : 88
condicion_b          : 89
empty                : 4 35 62 65 72 83 87 91 96 103
estatuto             : 33 34
exp                  : 15 73 95
exp_a                : 60
expresion            : 12 59 63 66 68 88 94 97
expresion_a          : 47
fact                 : 25
fact_a               : 73
for                  : 40
function             : 45 80 84
function_a           : 98
function_b           : 98 102
llamada              : 38 78 93
llamada_a            : 67 71
llamada_b            : 68 69 70
llamadafuncionclase  : 44
m_exp                : 17 46 47 47
m_exp_a              : 17
m_exp_b              : 16 17
programa             : 0
programa_a           : 1 3
programa_b           : 2 3
term                 : 20 22
term_a               : 22
term_b               : 21 22
tipocompuesto        : 8
tiposimple           : 7 13 14 100 101 102
varcte               : 
vars                 : 5 42 81
vars_a               : 7 8 10
vars_b               : 9 10
vars_vect_mat        : 6 82
vars_vect_mat_a      : 13 14 14
while                : 39
while_a              : 59
while_b              : 57

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SC programa_a bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SC programa_a bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SC programa_a bloque

    SC              shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SC . programa_a bloque
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (104) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (29) tipocompuesto -> . DATAFRAME
    (30) tipocompuesto -> . ID
    (31) tipocompuesto -> . FILE

    OB              reduce using rule 104 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

    programa_a                     shift and go to state 6
    programa_b                     shift and go to state 7
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 5

    (30) tipocompuesto -> ID .

    ID              reduce using rule 30 (tipocompuesto -> ID .)


state 6

    (1) programa -> PROGRAM ID SC programa_a . bloque
    (32) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 18

state 7

    (2) programa_a -> programa_b .
    (3) programa_a -> programa_b . programa_a
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_a -> . empty
    (5) programa_b -> . vars
    (6) programa_b -> . vars_vect_mat
    (104) empty -> .
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (29) tipocompuesto -> . DATAFRAME
    (30) tipocompuesto -> . ID
    (31) tipocompuesto -> . FILE

  ! reduce/reduce conflict for OB resolved using rule 2 (programa_a -> programa_b .)
    OB              reduce using rule 2 (programa_a -> programa_b .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! OB              [ reduce using rule 104 (empty -> .) ]

    programa_b                     shift and go to state 7
    programa_a                     shift and go to state 20
    empty                          shift and go to state 8
    vars                           shift and go to state 9
    vars_vect_mat                  shift and go to state 10
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 8

    (4) programa_a -> empty .

    OB              reduce using rule 4 (programa_a -> empty .)


state 9

    (5) programa_b -> vars .

    INT             reduce using rule 5 (programa_b -> vars .)
    FLOAT           reduce using rule 5 (programa_b -> vars .)
    CHAR            reduce using rule 5 (programa_b -> vars .)
    DATAFRAME       reduce using rule 5 (programa_b -> vars .)
    ID              reduce using rule 5 (programa_b -> vars .)
    FILE            reduce using rule 5 (programa_b -> vars .)
    OB              reduce using rule 5 (programa_b -> vars .)


state 10

    (6) programa_b -> vars_vect_mat .

    INT             reduce using rule 6 (programa_b -> vars_vect_mat .)
    FLOAT           reduce using rule 6 (programa_b -> vars_vect_mat .)
    CHAR            reduce using rule 6 (programa_b -> vars_vect_mat .)
    DATAFRAME       reduce using rule 6 (programa_b -> vars_vect_mat .)
    ID              reduce using rule 6 (programa_b -> vars_vect_mat .)
    FILE            reduce using rule 6 (programa_b -> vars_vect_mat .)
    OB              reduce using rule 6 (programa_b -> vars_vect_mat .)


state 11

    (7) vars -> tiposimple . vars_a SC
    (13) vars_vect_mat -> tiposimple . ID vars_vect_mat_a SC
    (14) vars_vect_mat -> tiposimple . ID vars_vect_mat_a vars_vect_mat_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_b COMMA vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion

    ID              shift and go to state 22

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23

state 12

    (8) vars -> tipocompuesto . vars_a SC
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_b COMMA vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion

    ID              shift and go to state 25

    vars_a                         shift and go to state 24
    vars_b                         shift and go to state 23

state 13

    (26) tiposimple -> INT .

    ID              reduce using rule 26 (tiposimple -> INT .)


state 14

    (27) tiposimple -> FLOAT .

    ID              reduce using rule 27 (tiposimple -> FLOAT .)


state 15

    (28) tiposimple -> CHAR .

    ID              reduce using rule 28 (tiposimple -> CHAR .)


state 16

    (29) tipocompuesto -> DATAFRAME .

    ID              reduce using rule 29 (tipocompuesto -> DATAFRAME .)


state 17

    (31) tipocompuesto -> FILE .

    ID              reduce using rule 31 (tipocompuesto -> FILE .)


state 18

    (1) programa -> PROGRAM ID SC programa_a bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SC programa_a bloque .)


state 19

    (32) bloque -> OB . bloque_a CB
    (33) bloque_a -> . estatuto bloque_a
    (34) bloque_a -> . estatuto
    (35) bloque_a -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . condicion
    (38) estatuto -> . llamada
    (39) estatuto -> . while
    (40) estatuto -> . for
    (41) estatuto -> . classcreate
    (42) estatuto -> . vars
    (43) estatuto -> . classdeclare
    (44) estatuto -> . llamadafuncionclase
    (45) estatuto -> . function
    (104) empty -> .
    (94) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (88) condicion -> . IF OP expresion CP bloque condicion_a
    (67) llamada -> . ID OP llamada_a CP SC
    (57) while -> . while_b bloque
    (66) for -> . FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (80) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (92) classdeclare -> . CLASS_ID ID SC
    (93) llamadafuncionclase -> . ID POINT llamada
    (98) function -> . function_a ID OP function_b CP bloque
    (59) while_b -> . while_a OP expresion CP
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (29) tipocompuesto -> . DATAFRAME
    (30) tipocompuesto -> . ID
    (31) tipocompuesto -> . FILE
    (99) function_a -> . VOID
    (100) function_a -> . tiposimple
    (58) while_a -> . WHILE

    CB              reduce using rule 104 (empty -> .)
    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 42
    CLASS           shift and go to state 43
    CLASS_ID        shift and go to state 44
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    VOID            shift and go to state 48
    WHILE           shift and go to state 49

    bloque_a                       shift and go to state 26
    estatuto                       shift and go to state 27
    empty                          shift and go to state 28
    asignacion                     shift and go to state 29
    condicion                      shift and go to state 30
    llamada                        shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    classcreate                    shift and go to state 34
    vars                           shift and go to state 35
    classdeclare                   shift and go to state 36
    llamadafuncionclase            shift and go to state 37
    function                       shift and go to state 38
    while_b                        shift and go to state 41
    tiposimple                     shift and go to state 45
    tipocompuesto                  shift and go to state 12
    function_a                     shift and go to state 46
    while_a                        shift and go to state 47

state 20

    (3) programa_a -> programa_b programa_a .

    OB              reduce using rule 3 (programa_a -> programa_b programa_a .)


state 21

    (7) vars -> tiposimple vars_a . SC

    SC              shift and go to state 50


state 22

    (13) vars_vect_mat -> tiposimple ID . vars_vect_mat_a SC
    (14) vars_vect_mat -> tiposimple ID . vars_vect_mat_a vars_vect_mat_a SC
    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion
    (15) vars_vect_mat_a -> . OSB exp CSB

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 52
    OSB             shift and go to state 53

    vars_vect_mat_a                shift and go to state 51

state 23

    (9) vars_a -> vars_b .
    (10) vars_a -> vars_b . COMMA vars_a

    SC              reduce using rule 9 (vars_a -> vars_b .)
    COMMA           shift and go to state 54


state 24

    (8) vars -> tipocompuesto vars_a . SC

    SC              shift and go to state 55


state 25

    (11) vars_b -> ID .
    (12) vars_b -> ID . EQ expresion

    COMMA           reduce using rule 11 (vars_b -> ID .)
    SC              reduce using rule 11 (vars_b -> ID .)
    EQ              shift and go to state 52


state 26

    (32) bloque -> OB bloque_a . CB

    CB              shift and go to state 56


state 27

    (33) bloque_a -> estatuto . bloque_a
    (34) bloque_a -> estatuto .
    (33) bloque_a -> . estatuto bloque_a
    (34) bloque_a -> . estatuto
    (35) bloque_a -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . condicion
    (38) estatuto -> . llamada
    (39) estatuto -> . while
    (40) estatuto -> . for
    (41) estatuto -> . classcreate
    (42) estatuto -> . vars
    (43) estatuto -> . classdeclare
    (44) estatuto -> . llamadafuncionclase
    (45) estatuto -> . function
    (104) empty -> .
    (94) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (88) condicion -> . IF OP expresion CP bloque condicion_a
    (67) llamada -> . ID OP llamada_a CP SC
    (57) while -> . while_b bloque
    (66) for -> . FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (80) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (92) classdeclare -> . CLASS_ID ID SC
    (93) llamadafuncionclase -> . ID POINT llamada
    (98) function -> . function_a ID OP function_b CP bloque
    (59) while_b -> . while_a OP expresion CP
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (29) tipocompuesto -> . DATAFRAME
    (30) tipocompuesto -> . ID
    (31) tipocompuesto -> . FILE
    (99) function_a -> . VOID
    (100) function_a -> . tiposimple
    (58) while_a -> . WHILE

  ! reduce/reduce conflict for CB resolved using rule 34 (bloque_a -> estatuto .)
    CB              reduce using rule 34 (bloque_a -> estatuto .)
    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 42
    CLASS           shift and go to state 43
    CLASS_ID        shift and go to state 44
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    FILE            shift and go to state 17
    VOID            shift and go to state 48
    WHILE           shift and go to state 49

  ! CB              [ reduce using rule 104 (empty -> .) ]

    estatuto                       shift and go to state 27
    bloque_a                       shift and go to state 57
    empty                          shift and go to state 28
    asignacion                     shift and go to state 29
    condicion                      shift and go to state 30
    llamada                        shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    classcreate                    shift and go to state 34
    vars                           shift and go to state 35
    classdeclare                   shift and go to state 36
    llamadafuncionclase            shift and go to state 37
    function                       shift and go to state 38
    while_b                        shift and go to state 41
    tiposimple                     shift and go to state 45
    tipocompuesto                  shift and go to state 12
    function_a                     shift and go to state 46
    while_a                        shift and go to state 47

state 28

    (35) bloque_a -> empty .

    CB              reduce using rule 35 (bloque_a -> empty .)


state 29

    (36) estatuto -> asignacion .

    ID              reduce using rule 36 (estatuto -> asignacion .)
    IF              reduce using rule 36 (estatuto -> asignacion .)
    FOR             reduce using rule 36 (estatuto -> asignacion .)
    CLASS           reduce using rule 36 (estatuto -> asignacion .)
    CLASS_ID        reduce using rule 36 (estatuto -> asignacion .)
    INT             reduce using rule 36 (estatuto -> asignacion .)
    FLOAT           reduce using rule 36 (estatuto -> asignacion .)
    CHAR            reduce using rule 36 (estatuto -> asignacion .)
    DATAFRAME       reduce using rule 36 (estatuto -> asignacion .)
    FILE            reduce using rule 36 (estatuto -> asignacion .)
    VOID            reduce using rule 36 (estatuto -> asignacion .)
    WHILE           reduce using rule 36 (estatuto -> asignacion .)
    CB              reduce using rule 36 (estatuto -> asignacion .)


state 30

    (37) estatuto -> condicion .

    ID              reduce using rule 37 (estatuto -> condicion .)
    IF              reduce using rule 37 (estatuto -> condicion .)
    FOR             reduce using rule 37 (estatuto -> condicion .)
    CLASS           reduce using rule 37 (estatuto -> condicion .)
    CLASS_ID        reduce using rule 37 (estatuto -> condicion .)
    INT             reduce using rule 37 (estatuto -> condicion .)
    FLOAT           reduce using rule 37 (estatuto -> condicion .)
    CHAR            reduce using rule 37 (estatuto -> condicion .)
    DATAFRAME       reduce using rule 37 (estatuto -> condicion .)
    FILE            reduce using rule 37 (estatuto -> condicion .)
    VOID            reduce using rule 37 (estatuto -> condicion .)
    WHILE           reduce using rule 37 (estatuto -> condicion .)
    CB              reduce using rule 37 (estatuto -> condicion .)


state 31

    (38) estatuto -> llamada .

    ID              reduce using rule 38 (estatuto -> llamada .)
    IF              reduce using rule 38 (estatuto -> llamada .)
    FOR             reduce using rule 38 (estatuto -> llamada .)
    CLASS           reduce using rule 38 (estatuto -> llamada .)
    CLASS_ID        reduce using rule 38 (estatuto -> llamada .)
    INT             reduce using rule 38 (estatuto -> llamada .)
    FLOAT           reduce using rule 38 (estatuto -> llamada .)
    CHAR            reduce using rule 38 (estatuto -> llamada .)
    DATAFRAME       reduce using rule 38 (estatuto -> llamada .)
    FILE            reduce using rule 38 (estatuto -> llamada .)
    VOID            reduce using rule 38 (estatuto -> llamada .)
    WHILE           reduce using rule 38 (estatuto -> llamada .)
    CB              reduce using rule 38 (estatuto -> llamada .)


state 32

    (39) estatuto -> while .

    ID              reduce using rule 39 (estatuto -> while .)
    IF              reduce using rule 39 (estatuto -> while .)
    FOR             reduce using rule 39 (estatuto -> while .)
    CLASS           reduce using rule 39 (estatuto -> while .)
    CLASS_ID        reduce using rule 39 (estatuto -> while .)
    INT             reduce using rule 39 (estatuto -> while .)
    FLOAT           reduce using rule 39 (estatuto -> while .)
    CHAR            reduce using rule 39 (estatuto -> while .)
    DATAFRAME       reduce using rule 39 (estatuto -> while .)
    FILE            reduce using rule 39 (estatuto -> while .)
    VOID            reduce using rule 39 (estatuto -> while .)
    WHILE           reduce using rule 39 (estatuto -> while .)
    CB              reduce using rule 39 (estatuto -> while .)


state 33

    (40) estatuto -> for .

    ID              reduce using rule 40 (estatuto -> for .)
    IF              reduce using rule 40 (estatuto -> for .)
    FOR             reduce using rule 40 (estatuto -> for .)
    CLASS           reduce using rule 40 (estatuto -> for .)
    CLASS_ID        reduce using rule 40 (estatuto -> for .)
    INT             reduce using rule 40 (estatuto -> for .)
    FLOAT           reduce using rule 40 (estatuto -> for .)
    CHAR            reduce using rule 40 (estatuto -> for .)
    DATAFRAME       reduce using rule 40 (estatuto -> for .)
    FILE            reduce using rule 40 (estatuto -> for .)
    VOID            reduce using rule 40 (estatuto -> for .)
    WHILE           reduce using rule 40 (estatuto -> for .)
    CB              reduce using rule 40 (estatuto -> for .)


state 34

    (41) estatuto -> classcreate .

    ID              reduce using rule 41 (estatuto -> classcreate .)
    IF              reduce using rule 41 (estatuto -> classcreate .)
    FOR             reduce using rule 41 (estatuto -> classcreate .)
    CLASS           reduce using rule 41 (estatuto -> classcreate .)
    CLASS_ID        reduce using rule 41 (estatuto -> classcreate .)
    INT             reduce using rule 41 (estatuto -> classcreate .)
    FLOAT           reduce using rule 41 (estatuto -> classcreate .)
    CHAR            reduce using rule 41 (estatuto -> classcreate .)
    DATAFRAME       reduce using rule 41 (estatuto -> classcreate .)
    FILE            reduce using rule 41 (estatuto -> classcreate .)
    VOID            reduce using rule 41 (estatuto -> classcreate .)
    WHILE           reduce using rule 41 (estatuto -> classcreate .)
    CB              reduce using rule 41 (estatuto -> classcreate .)


state 35

    (42) estatuto -> vars .

    ID              reduce using rule 42 (estatuto -> vars .)
    IF              reduce using rule 42 (estatuto -> vars .)
    FOR             reduce using rule 42 (estatuto -> vars .)
    CLASS           reduce using rule 42 (estatuto -> vars .)
    CLASS_ID        reduce using rule 42 (estatuto -> vars .)
    INT             reduce using rule 42 (estatuto -> vars .)
    FLOAT           reduce using rule 42 (estatuto -> vars .)
    CHAR            reduce using rule 42 (estatuto -> vars .)
    DATAFRAME       reduce using rule 42 (estatuto -> vars .)
    FILE            reduce using rule 42 (estatuto -> vars .)
    VOID            reduce using rule 42 (estatuto -> vars .)
    WHILE           reduce using rule 42 (estatuto -> vars .)
    CB              reduce using rule 42 (estatuto -> vars .)


state 36

    (43) estatuto -> classdeclare .

    ID              reduce using rule 43 (estatuto -> classdeclare .)
    IF              reduce using rule 43 (estatuto -> classdeclare .)
    FOR             reduce using rule 43 (estatuto -> classdeclare .)
    CLASS           reduce using rule 43 (estatuto -> classdeclare .)
    CLASS_ID        reduce using rule 43 (estatuto -> classdeclare .)
    INT             reduce using rule 43 (estatuto -> classdeclare .)
    FLOAT           reduce using rule 43 (estatuto -> classdeclare .)
    CHAR            reduce using rule 43 (estatuto -> classdeclare .)
    DATAFRAME       reduce using rule 43 (estatuto -> classdeclare .)
    FILE            reduce using rule 43 (estatuto -> classdeclare .)
    VOID            reduce using rule 43 (estatuto -> classdeclare .)
    WHILE           reduce using rule 43 (estatuto -> classdeclare .)
    CB              reduce using rule 43 (estatuto -> classdeclare .)


state 37

    (44) estatuto -> llamadafuncionclase .

    ID              reduce using rule 44 (estatuto -> llamadafuncionclase .)
    IF              reduce using rule 44 (estatuto -> llamadafuncionclase .)
    FOR             reduce using rule 44 (estatuto -> llamadafuncionclase .)
    CLASS           reduce using rule 44 (estatuto -> llamadafuncionclase .)
    CLASS_ID        reduce using rule 44 (estatuto -> llamadafuncionclase .)
    INT             reduce using rule 44 (estatuto -> llamadafuncionclase .)
    FLOAT           reduce using rule 44 (estatuto -> llamadafuncionclase .)
    CHAR            reduce using rule 44 (estatuto -> llamadafuncionclase .)
    DATAFRAME       reduce using rule 44 (estatuto -> llamadafuncionclase .)
    FILE            reduce using rule 44 (estatuto -> llamadafuncionclase .)
    VOID            reduce using rule 44 (estatuto -> llamadafuncionclase .)
    WHILE           reduce using rule 44 (estatuto -> llamadafuncionclase .)
    CB              reduce using rule 44 (estatuto -> llamadafuncionclase .)


state 38

    (45) estatuto -> function .

    ID              reduce using rule 45 (estatuto -> function .)
    IF              reduce using rule 45 (estatuto -> function .)
    FOR             reduce using rule 45 (estatuto -> function .)
    CLASS           reduce using rule 45 (estatuto -> function .)
    CLASS_ID        reduce using rule 45 (estatuto -> function .)
    INT             reduce using rule 45 (estatuto -> function .)
    FLOAT           reduce using rule 45 (estatuto -> function .)
    CHAR            reduce using rule 45 (estatuto -> function .)
    DATAFRAME       reduce using rule 45 (estatuto -> function .)
    FILE            reduce using rule 45 (estatuto -> function .)
    VOID            reduce using rule 45 (estatuto -> function .)
    WHILE           reduce using rule 45 (estatuto -> function .)
    CB              reduce using rule 45 (estatuto -> function .)


state 39

    (94) asignacion -> ID . asignacion_a asignacion_a EQ expresion SC
    (67) llamada -> ID . OP llamada_a CP SC
    (93) llamadafuncionclase -> ID . POINT llamada
    (30) tipocompuesto -> ID .
    (95) asignacion_a -> . OSB exp CSB
    (96) asignacion_a -> . empty
    (104) empty -> .

  ! shift/reduce conflict for OSB resolved as shift
    OP              shift and go to state 59
    POINT           shift and go to state 60
    ID              reduce using rule 30 (tipocompuesto -> ID .)
    OSB             shift and go to state 61
    EQ              reduce using rule 104 (empty -> .)

  ! OSB             [ reduce using rule 104 (empty -> .) ]

    asignacion_a                   shift and go to state 58
    empty                          shift and go to state 62

state 40

    (88) condicion -> IF . OP expresion CP bloque condicion_a

    OP              shift and go to state 63


state 41

    (57) while -> while_b . bloque
    (32) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 64

state 42

    (66) for -> FOR . OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque

    OP              shift and go to state 65


state 43

    (80) classcreate -> CLASS . CLASS_ID OB classcreate_a function classcreate_c CB

    CLASS_ID        shift and go to state 66


state 44

    (92) classdeclare -> CLASS_ID . ID SC

    ID              shift and go to state 67


state 45

    (7) vars -> tiposimple . vars_a SC
    (100) function_a -> tiposimple .
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_b COMMA vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 25

  ! ID              [ reduce using rule 100 (function_a -> tiposimple .) ]

    vars_a                         shift and go to state 21
    vars_b                         shift and go to state 23

state 46

    (98) function -> function_a . ID OP function_b CP bloque

    ID              shift and go to state 68


state 47

    (59) while_b -> while_a . OP expresion CP

    OP              shift and go to state 69


state 48

    (99) function_a -> VOID .

    ID              reduce using rule 99 (function_a -> VOID .)


state 49

    (58) while_a -> WHILE .

    OP              reduce using rule 58 (while_a -> WHILE .)


state 50

    (7) vars -> tiposimple vars_a SC .

    INT             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FLOAT           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CHAR            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    DATAFRAME       reduce using rule 7 (vars -> tiposimple vars_a SC .)
    ID              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FILE            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    OB              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    IF              reduce using rule 7 (vars -> tiposimple vars_a SC .)
    FOR             reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CLASS_ID        reduce using rule 7 (vars -> tiposimple vars_a SC .)
    VOID            reduce using rule 7 (vars -> tiposimple vars_a SC .)
    WHILE           reduce using rule 7 (vars -> tiposimple vars_a SC .)
    CB              reduce using rule 7 (vars -> tiposimple vars_a SC .)


state 51

    (13) vars_vect_mat -> tiposimple ID vars_vect_mat_a . SC
    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a . vars_vect_mat_a SC
    (15) vars_vect_mat_a -> . OSB exp CSB

    SC              shift and go to state 71
    OSB             shift and go to state 53

    vars_vect_mat_a                shift and go to state 70

state 52

    (12) vars_b -> ID EQ . expresion
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    expresion                      shift and go to state 73
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 53

    (15) vars_vect_mat_a -> OSB . exp CSB
    (60) exp -> . and_exp exp_a
    (63) and_exp -> . expresion and_exp_a
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    exp                            shift and go to state 85
    and_exp                        shift and go to state 86
    expresion                      shift and go to state 87
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 54

    (10) vars_a -> vars_b COMMA . vars_a
    (9) vars_a -> . vars_b
    (10) vars_a -> . vars_b COMMA vars_a
    (11) vars_b -> . ID
    (12) vars_b -> . ID EQ expresion

    ID              shift and go to state 25

    vars_b                         shift and go to state 23
    vars_a                         shift and go to state 88

state 55

    (8) vars -> tipocompuesto vars_a SC .

    INT             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FLOAT           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CHAR            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    DATAFRAME       reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    ID              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FILE            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    OB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    IF              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    FOR             reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CLASS_ID        reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    VOID            reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    WHILE           reduce using rule 8 (vars -> tipocompuesto vars_a SC .)
    CB              reduce using rule 8 (vars -> tipocompuesto vars_a SC .)


state 56

    (32) bloque -> OB bloque_a CB .

    $end            reduce using rule 32 (bloque -> OB bloque_a CB .)
    ID              reduce using rule 32 (bloque -> OB bloque_a CB .)
    IF              reduce using rule 32 (bloque -> OB bloque_a CB .)
    FOR             reduce using rule 32 (bloque -> OB bloque_a CB .)
    CLASS           reduce using rule 32 (bloque -> OB bloque_a CB .)
    CLASS_ID        reduce using rule 32 (bloque -> OB bloque_a CB .)
    INT             reduce using rule 32 (bloque -> OB bloque_a CB .)
    FLOAT           reduce using rule 32 (bloque -> OB bloque_a CB .)
    CHAR            reduce using rule 32 (bloque -> OB bloque_a CB .)
    DATAFRAME       reduce using rule 32 (bloque -> OB bloque_a CB .)
    FILE            reduce using rule 32 (bloque -> OB bloque_a CB .)
    VOID            reduce using rule 32 (bloque -> OB bloque_a CB .)
    WHILE           reduce using rule 32 (bloque -> OB bloque_a CB .)
    CB              reduce using rule 32 (bloque -> OB bloque_a CB .)
    ELSE            reduce using rule 32 (bloque -> OB bloque_a CB .)
    OB              reduce using rule 32 (bloque -> OB bloque_a CB .)


state 57

    (33) bloque_a -> estatuto bloque_a .

    CB              reduce using rule 33 (bloque_a -> estatuto bloque_a .)


state 58

    (94) asignacion -> ID asignacion_a . asignacion_a EQ expresion SC
    (95) asignacion_a -> . OSB exp CSB
    (96) asignacion_a -> . empty
    (104) empty -> .

    OSB             shift and go to state 61
    EQ              reduce using rule 104 (empty -> .)

    asignacion_a                   shift and go to state 89
    empty                          shift and go to state 62

state 59

    (67) llamada -> ID OP . llamada_a CP SC
    (68) llamada_a -> . expresion llamada_b
    (69) llamada_a -> . CTE_STRING llamada_b
    (70) llamada_a -> . llamada_b
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (71) llamada_b -> . COMMA llamada_a
    (72) llamada_b -> . empty
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (104) empty -> .
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_STRING      shift and go to state 93
    COMMA           shift and go to state 94
    CP              reduce using rule 104 (empty -> .)
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    llamada_a                      shift and go to state 90
    expresion                      shift and go to state 91
    llamada_b                      shift and go to state 92
    m_exp                          shift and go to state 74
    empty                          shift and go to state 95
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 60

    (93) llamadafuncionclase -> ID POINT . llamada
    (67) llamada -> . ID OP llamada_a CP SC

    ID              shift and go to state 96

    llamada                        shift and go to state 97

state 61

    (95) asignacion_a -> OSB . exp CSB
    (60) exp -> . and_exp exp_a
    (63) and_exp -> . expresion and_exp_a
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    exp                            shift and go to state 98
    and_exp                        shift and go to state 86
    expresion                      shift and go to state 87
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 62

    (96) asignacion_a -> empty .

    OSB             reduce using rule 96 (asignacion_a -> empty .)
    EQ              reduce using rule 96 (asignacion_a -> empty .)


state 63

    (88) condicion -> IF OP . expresion CP bloque condicion_a
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    expresion                      shift and go to state 99
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 64

    (57) while -> while_b bloque .

    ID              reduce using rule 57 (while -> while_b bloque .)
    IF              reduce using rule 57 (while -> while_b bloque .)
    FOR             reduce using rule 57 (while -> while_b bloque .)
    CLASS           reduce using rule 57 (while -> while_b bloque .)
    CLASS_ID        reduce using rule 57 (while -> while_b bloque .)
    INT             reduce using rule 57 (while -> while_b bloque .)
    FLOAT           reduce using rule 57 (while -> while_b bloque .)
    CHAR            reduce using rule 57 (while -> while_b bloque .)
    DATAFRAME       reduce using rule 57 (while -> while_b bloque .)
    FILE            reduce using rule 57 (while -> while_b bloque .)
    VOID            reduce using rule 57 (while -> while_b bloque .)
    WHILE           reduce using rule 57 (while -> while_b bloque .)
    CB              reduce using rule 57 (while -> while_b bloque .)


state 65

    (66) for -> FOR OP . asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (97) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 101

    asignacionsencilla             shift and go to state 100

state 66

    (80) classcreate -> CLASS CLASS_ID . OB classcreate_a function classcreate_c CB

    OB              shift and go to state 102


state 67

    (92) classdeclare -> CLASS_ID ID . SC

    SC              shift and go to state 103


state 68

    (98) function -> function_a ID . OP function_b CP bloque

    OP              shift and go to state 104


state 69

    (59) while_b -> while_a OP . expresion CP
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    expresion                      shift and go to state 105
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 70

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a . SC

    SC              shift and go to state 106


state 71

    (13) vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .

    INT             reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FLOAT           reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    CHAR            reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    ID              reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FILE            reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    OB              reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    VOID            reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)


state 72

    (77) fact -> ID .
    (67) llamada -> ID . OP llamada_a CP SC

    MULT            reduce using rule 77 (fact -> ID .)
    DIV             reduce using rule 77 (fact -> ID .)
    ADD             reduce using rule 77 (fact -> ID .)
    SUB             reduce using rule 77 (fact -> ID .)
    LT              reduce using rule 77 (fact -> ID .)
    GT              reduce using rule 77 (fact -> ID .)
    NE              reduce using rule 77 (fact -> ID .)
    EQEQ            reduce using rule 77 (fact -> ID .)
    LE              reduce using rule 77 (fact -> ID .)
    GE              reduce using rule 77 (fact -> ID .)
    COMMA           reduce using rule 77 (fact -> ID .)
    SC              reduce using rule 77 (fact -> ID .)
    AND             reduce using rule 77 (fact -> ID .)
    OR              reduce using rule 77 (fact -> ID .)
    CSB             reduce using rule 77 (fact -> ID .)
    CP              reduce using rule 77 (fact -> ID .)
    OP              shift and go to state 59


state 73

    (12) vars_b -> ID EQ expresion .

    COMMA           reduce using rule 12 (vars_b -> ID EQ expresion .)
    SC              reduce using rule 12 (vars_b -> ID EQ expresion .)


state 74

    (46) expresion -> m_exp .
    (47) expresion -> m_exp . expresion_a m_exp
    (48) expresion_a -> . LT
    (49) expresion_a -> . GT
    (50) expresion_a -> . NE
    (51) expresion_a -> . EQEQ
    (52) expresion_a -> . LE
    (53) expresion_a -> . GE

    COMMA           reduce using rule 46 (expresion -> m_exp .)
    SC              reduce using rule 46 (expresion -> m_exp .)
    AND             reduce using rule 46 (expresion -> m_exp .)
    OR              reduce using rule 46 (expresion -> m_exp .)
    CSB             reduce using rule 46 (expresion -> m_exp .)
    CP              reduce using rule 46 (expresion -> m_exp .)
    LT              shift and go to state 108
    GT              shift and go to state 109
    NE              shift and go to state 110
    EQEQ            shift and go to state 111
    LE              shift and go to state 112
    GE              shift and go to state 113

    expresion_a                    shift and go to state 107

state 75

    (16) m_exp -> m_exp_b .
    (17) m_exp -> m_exp_b . m_exp_a m_exp
    (18) m_exp_a -> . ADD
    (19) m_exp_a -> . SUB

    LT              reduce using rule 16 (m_exp -> m_exp_b .)
    GT              reduce using rule 16 (m_exp -> m_exp_b .)
    NE              reduce using rule 16 (m_exp -> m_exp_b .)
    EQEQ            reduce using rule 16 (m_exp -> m_exp_b .)
    LE              reduce using rule 16 (m_exp -> m_exp_b .)
    GE              reduce using rule 16 (m_exp -> m_exp_b .)
    COMMA           reduce using rule 16 (m_exp -> m_exp_b .)
    SC              reduce using rule 16 (m_exp -> m_exp_b .)
    AND             reduce using rule 16 (m_exp -> m_exp_b .)
    OR              reduce using rule 16 (m_exp -> m_exp_b .)
    CSB             reduce using rule 16 (m_exp -> m_exp_b .)
    CP              reduce using rule 16 (m_exp -> m_exp_b .)
    ADD             shift and go to state 115
    SUB             shift and go to state 116

    m_exp_a                        shift and go to state 114

state 76

    (20) m_exp_b -> term .

    ADD             reduce using rule 20 (m_exp_b -> term .)
    SUB             reduce using rule 20 (m_exp_b -> term .)
    LT              reduce using rule 20 (m_exp_b -> term .)
    GT              reduce using rule 20 (m_exp_b -> term .)
    NE              reduce using rule 20 (m_exp_b -> term .)
    EQEQ            reduce using rule 20 (m_exp_b -> term .)
    LE              reduce using rule 20 (m_exp_b -> term .)
    GE              reduce using rule 20 (m_exp_b -> term .)
    COMMA           reduce using rule 20 (m_exp_b -> term .)
    SC              reduce using rule 20 (m_exp_b -> term .)
    AND             reduce using rule 20 (m_exp_b -> term .)
    OR              reduce using rule 20 (m_exp_b -> term .)
    CSB             reduce using rule 20 (m_exp_b -> term .)
    CP              reduce using rule 20 (m_exp_b -> term .)


state 77

    (21) term -> term_b .
    (22) term -> term_b . term_a term
    (23) term_a -> . MULT
    (24) term_a -> . DIV

    ADD             reduce using rule 21 (term -> term_b .)
    SUB             reduce using rule 21 (term -> term_b .)
    LT              reduce using rule 21 (term -> term_b .)
    GT              reduce using rule 21 (term -> term_b .)
    NE              reduce using rule 21 (term -> term_b .)
    EQEQ            reduce using rule 21 (term -> term_b .)
    LE              reduce using rule 21 (term -> term_b .)
    GE              reduce using rule 21 (term -> term_b .)
    COMMA           reduce using rule 21 (term -> term_b .)
    SC              reduce using rule 21 (term -> term_b .)
    AND             reduce using rule 21 (term -> term_b .)
    OR              reduce using rule 21 (term -> term_b .)
    CSB             reduce using rule 21 (term -> term_b .)
    CP              reduce using rule 21 (term -> term_b .)
    MULT            shift and go to state 118
    DIV             shift and go to state 119

    term_a                         shift and go to state 117

state 78

    (25) term_b -> fact .

    MULT            reduce using rule 25 (term_b -> fact .)
    DIV             reduce using rule 25 (term_b -> fact .)
    ADD             reduce using rule 25 (term_b -> fact .)
    SUB             reduce using rule 25 (term_b -> fact .)
    LT              reduce using rule 25 (term_b -> fact .)
    GT              reduce using rule 25 (term_b -> fact .)
    NE              reduce using rule 25 (term_b -> fact .)
    EQEQ            reduce using rule 25 (term_b -> fact .)
    LE              reduce using rule 25 (term_b -> fact .)
    GE              reduce using rule 25 (term_b -> fact .)
    COMMA           reduce using rule 25 (term_b -> fact .)
    SC              reduce using rule 25 (term_b -> fact .)
    AND             reduce using rule 25 (term_b -> fact .)
    OR              reduce using rule 25 (term_b -> fact .)
    CSB             reduce using rule 25 (term_b -> fact .)
    CP              reduce using rule 25 (term_b -> fact .)


state 79

    (73) fact -> fact_a . exp CP
    (60) exp -> . and_exp exp_a
    (63) and_exp -> . expresion and_exp_a
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    fact_a                         shift and go to state 79
    exp                            shift and go to state 120
    and_exp                        shift and go to state 86
    expresion                      shift and go to state 87
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    llamada                        shift and go to state 83

state 80

    (74) fact -> CTE_I .

    MULT            reduce using rule 74 (fact -> CTE_I .)
    DIV             reduce using rule 74 (fact -> CTE_I .)
    ADD             reduce using rule 74 (fact -> CTE_I .)
    SUB             reduce using rule 74 (fact -> CTE_I .)
    LT              reduce using rule 74 (fact -> CTE_I .)
    GT              reduce using rule 74 (fact -> CTE_I .)
    NE              reduce using rule 74 (fact -> CTE_I .)
    EQEQ            reduce using rule 74 (fact -> CTE_I .)
    LE              reduce using rule 74 (fact -> CTE_I .)
    GE              reduce using rule 74 (fact -> CTE_I .)
    COMMA           reduce using rule 74 (fact -> CTE_I .)
    SC              reduce using rule 74 (fact -> CTE_I .)
    AND             reduce using rule 74 (fact -> CTE_I .)
    OR              reduce using rule 74 (fact -> CTE_I .)
    CSB             reduce using rule 74 (fact -> CTE_I .)
    CP              reduce using rule 74 (fact -> CTE_I .)


state 81

    (75) fact -> CTE_F .

    MULT            reduce using rule 75 (fact -> CTE_F .)
    DIV             reduce using rule 75 (fact -> CTE_F .)
    ADD             reduce using rule 75 (fact -> CTE_F .)
    SUB             reduce using rule 75 (fact -> CTE_F .)
    LT              reduce using rule 75 (fact -> CTE_F .)
    GT              reduce using rule 75 (fact -> CTE_F .)
    NE              reduce using rule 75 (fact -> CTE_F .)
    EQEQ            reduce using rule 75 (fact -> CTE_F .)
    LE              reduce using rule 75 (fact -> CTE_F .)
    GE              reduce using rule 75 (fact -> CTE_F .)
    COMMA           reduce using rule 75 (fact -> CTE_F .)
    SC              reduce using rule 75 (fact -> CTE_F .)
    AND             reduce using rule 75 (fact -> CTE_F .)
    OR              reduce using rule 75 (fact -> CTE_F .)
    CSB             reduce using rule 75 (fact -> CTE_F .)
    CP              reduce using rule 75 (fact -> CTE_F .)


state 82

    (76) fact -> CTE_CHAR .

    MULT            reduce using rule 76 (fact -> CTE_CHAR .)
    DIV             reduce using rule 76 (fact -> CTE_CHAR .)
    ADD             reduce using rule 76 (fact -> CTE_CHAR .)
    SUB             reduce using rule 76 (fact -> CTE_CHAR .)
    LT              reduce using rule 76 (fact -> CTE_CHAR .)
    GT              reduce using rule 76 (fact -> CTE_CHAR .)
    NE              reduce using rule 76 (fact -> CTE_CHAR .)
    EQEQ            reduce using rule 76 (fact -> CTE_CHAR .)
    LE              reduce using rule 76 (fact -> CTE_CHAR .)
    GE              reduce using rule 76 (fact -> CTE_CHAR .)
    COMMA           reduce using rule 76 (fact -> CTE_CHAR .)
    SC              reduce using rule 76 (fact -> CTE_CHAR .)
    AND             reduce using rule 76 (fact -> CTE_CHAR .)
    OR              reduce using rule 76 (fact -> CTE_CHAR .)
    CSB             reduce using rule 76 (fact -> CTE_CHAR .)
    CP              reduce using rule 76 (fact -> CTE_CHAR .)


state 83

    (78) fact -> llamada .

    MULT            reduce using rule 78 (fact -> llamada .)
    DIV             reduce using rule 78 (fact -> llamada .)
    ADD             reduce using rule 78 (fact -> llamada .)
    SUB             reduce using rule 78 (fact -> llamada .)
    LT              reduce using rule 78 (fact -> llamada .)
    GT              reduce using rule 78 (fact -> llamada .)
    NE              reduce using rule 78 (fact -> llamada .)
    EQEQ            reduce using rule 78 (fact -> llamada .)
    LE              reduce using rule 78 (fact -> llamada .)
    GE              reduce using rule 78 (fact -> llamada .)
    COMMA           reduce using rule 78 (fact -> llamada .)
    SC              reduce using rule 78 (fact -> llamada .)
    AND             reduce using rule 78 (fact -> llamada .)
    OR              reduce using rule 78 (fact -> llamada .)
    CSB             reduce using rule 78 (fact -> llamada .)
    CP              reduce using rule 78 (fact -> llamada .)


state 84

    (79) fact_a -> OP .

    CTE_I           reduce using rule 79 (fact_a -> OP .)
    CTE_F           reduce using rule 79 (fact_a -> OP .)
    CTE_CHAR        reduce using rule 79 (fact_a -> OP .)
    ID              reduce using rule 79 (fact_a -> OP .)
    OP              reduce using rule 79 (fact_a -> OP .)


state 85

    (15) vars_vect_mat_a -> OSB exp . CSB

    CSB             shift and go to state 121


state 86

    (60) exp -> and_exp . exp_a
    (61) exp_a -> . OR
    (62) exp_a -> . empty
    (104) empty -> .

    OR              shift and go to state 123
    CSB             reduce using rule 104 (empty -> .)
    CP              reduce using rule 104 (empty -> .)

    exp_a                          shift and go to state 122
    empty                          shift and go to state 124

state 87

    (63) and_exp -> expresion . and_exp_a
    (64) and_exp_a -> . AND
    (65) and_exp_a -> . empty
    (104) empty -> .

    AND             shift and go to state 126
    OR              reduce using rule 104 (empty -> .)
    CSB             reduce using rule 104 (empty -> .)
    CP              reduce using rule 104 (empty -> .)

    and_exp_a                      shift and go to state 125
    empty                          shift and go to state 127

state 88

    (10) vars_a -> vars_b COMMA vars_a .

    SC              reduce using rule 10 (vars_a -> vars_b COMMA vars_a .)


state 89

    (94) asignacion -> ID asignacion_a asignacion_a . EQ expresion SC

    EQ              shift and go to state 128


state 90

    (67) llamada -> ID OP llamada_a . CP SC

    CP              shift and go to state 129


state 91

    (68) llamada_a -> expresion . llamada_b
    (71) llamada_b -> . COMMA llamada_a
    (72) llamada_b -> . empty
    (104) empty -> .

    COMMA           shift and go to state 94
    CP              reduce using rule 104 (empty -> .)

    llamada_b                      shift and go to state 130
    empty                          shift and go to state 95

state 92

    (70) llamada_a -> llamada_b .

    CP              reduce using rule 70 (llamada_a -> llamada_b .)


state 93

    (69) llamada_a -> CTE_STRING . llamada_b
    (71) llamada_b -> . COMMA llamada_a
    (72) llamada_b -> . empty
    (104) empty -> .

    COMMA           shift and go to state 94
    CP              reduce using rule 104 (empty -> .)

    llamada_b                      shift and go to state 131
    empty                          shift and go to state 95

state 94

    (71) llamada_b -> COMMA . llamada_a
    (68) llamada_a -> . expresion llamada_b
    (69) llamada_a -> . CTE_STRING llamada_b
    (70) llamada_a -> . llamada_b
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (71) llamada_b -> . COMMA llamada_a
    (72) llamada_b -> . empty
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (104) empty -> .
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_STRING      shift and go to state 93
    COMMA           shift and go to state 94
    CP              reduce using rule 104 (empty -> .)
    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    llamada_a                      shift and go to state 132
    expresion                      shift and go to state 91
    llamada_b                      shift and go to state 92
    m_exp                          shift and go to state 74
    empty                          shift and go to state 95
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 95

    (72) llamada_b -> empty .

    CP              reduce using rule 72 (llamada_b -> empty .)


state 96

    (67) llamada -> ID . OP llamada_a CP SC

    OP              shift and go to state 59


state 97

    (93) llamadafuncionclase -> ID POINT llamada .

    ID              reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    IF              reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    FOR             reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    CLASS           reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    CLASS_ID        reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    INT             reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    FLOAT           reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    CHAR            reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    DATAFRAME       reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    FILE            reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    VOID            reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    WHILE           reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)
    CB              reduce using rule 93 (llamadafuncionclase -> ID POINT llamada .)


state 98

    (95) asignacion_a -> OSB exp . CSB

    CSB             shift and go to state 133


state 99

    (88) condicion -> IF OP expresion . CP bloque condicion_a

    CP              shift and go to state 134


state 100

    (66) for -> FOR OP asignacionsencilla . SC expresion SC asignacionsencilla CP bloque

    SC              shift and go to state 135


state 101

    (97) asignacionsencilla -> ID . EQ expresion

    EQ              shift and go to state 136


state 102

    (80) classcreate -> CLASS CLASS_ID OB . classcreate_a function classcreate_c CB
    (81) classcreate_a -> . vars classcreate_a
    (82) classcreate_a -> . vars_vect_mat classcreate_a
    (83) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (104) empty -> .
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (29) tipocompuesto -> . DATAFRAME
    (30) tipocompuesto -> . ID
    (31) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 104 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 104 (empty -> .) ]
  ! FLOAT           [ reduce using rule 104 (empty -> .) ]
  ! CHAR            [ reduce using rule 104 (empty -> .) ]

    classcreate_a                  shift and go to state 137
    vars                           shift and go to state 138
    vars_vect_mat                  shift and go to state 139
    empty                          shift and go to state 140
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 103

    (92) classdeclare -> CLASS_ID ID SC .

    ID              reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    IF              reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    FOR             reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    CLASS           reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    CLASS_ID        reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    INT             reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    FLOAT           reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    CHAR            reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    DATAFRAME       reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    FILE            reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    VOID            reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    WHILE           reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)
    CB              reduce using rule 92 (classdeclare -> CLASS_ID ID SC .)


state 104

    (98) function -> function_a ID OP . function_b CP bloque
    (101) function_b -> . tiposimple ID
    (102) function_b -> . tiposimple ID COMMA function_b
    (103) function_b -> . empty
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (104) empty -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    CP              reduce using rule 104 (empty -> .)

    function_b                     shift and go to state 141
    tiposimple                     shift and go to state 142
    empty                          shift and go to state 143

state 105

    (59) while_b -> while_a OP expresion . CP

    CP              shift and go to state 144


state 106

    (14) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .

    INT             reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FLOAT           reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    CHAR            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    ID              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FILE            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    OB              reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    VOID            reduce using rule 14 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)


state 107

    (47) expresion -> m_exp expresion_a . m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    m_exp                          shift and go to state 145
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 108

    (48) expresion_a -> LT .

    CTE_I           reduce using rule 48 (expresion_a -> LT .)
    CTE_F           reduce using rule 48 (expresion_a -> LT .)
    CTE_CHAR        reduce using rule 48 (expresion_a -> LT .)
    ID              reduce using rule 48 (expresion_a -> LT .)
    OP              reduce using rule 48 (expresion_a -> LT .)


state 109

    (49) expresion_a -> GT .

    CTE_I           reduce using rule 49 (expresion_a -> GT .)
    CTE_F           reduce using rule 49 (expresion_a -> GT .)
    CTE_CHAR        reduce using rule 49 (expresion_a -> GT .)
    ID              reduce using rule 49 (expresion_a -> GT .)
    OP              reduce using rule 49 (expresion_a -> GT .)


state 110

    (50) expresion_a -> NE .

    CTE_I           reduce using rule 50 (expresion_a -> NE .)
    CTE_F           reduce using rule 50 (expresion_a -> NE .)
    CTE_CHAR        reduce using rule 50 (expresion_a -> NE .)
    ID              reduce using rule 50 (expresion_a -> NE .)
    OP              reduce using rule 50 (expresion_a -> NE .)


state 111

    (51) expresion_a -> EQEQ .

    CTE_I           reduce using rule 51 (expresion_a -> EQEQ .)
    CTE_F           reduce using rule 51 (expresion_a -> EQEQ .)
    CTE_CHAR        reduce using rule 51 (expresion_a -> EQEQ .)
    ID              reduce using rule 51 (expresion_a -> EQEQ .)
    OP              reduce using rule 51 (expresion_a -> EQEQ .)


state 112

    (52) expresion_a -> LE .

    CTE_I           reduce using rule 52 (expresion_a -> LE .)
    CTE_F           reduce using rule 52 (expresion_a -> LE .)
    CTE_CHAR        reduce using rule 52 (expresion_a -> LE .)
    ID              reduce using rule 52 (expresion_a -> LE .)
    OP              reduce using rule 52 (expresion_a -> LE .)


state 113

    (53) expresion_a -> GE .

    CTE_I           reduce using rule 53 (expresion_a -> GE .)
    CTE_F           reduce using rule 53 (expresion_a -> GE .)
    CTE_CHAR        reduce using rule 53 (expresion_a -> GE .)
    ID              reduce using rule 53 (expresion_a -> GE .)
    OP              reduce using rule 53 (expresion_a -> GE .)


state 114

    (17) m_exp -> m_exp_b m_exp_a . m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    m_exp_b                        shift and go to state 75
    m_exp                          shift and go to state 146
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 115

    (18) m_exp_a -> ADD .

    CTE_I           reduce using rule 18 (m_exp_a -> ADD .)
    CTE_F           reduce using rule 18 (m_exp_a -> ADD .)
    CTE_CHAR        reduce using rule 18 (m_exp_a -> ADD .)
    ID              reduce using rule 18 (m_exp_a -> ADD .)
    OP              reduce using rule 18 (m_exp_a -> ADD .)


state 116

    (19) m_exp_a -> SUB .

    CTE_I           reduce using rule 19 (m_exp_a -> SUB .)
    CTE_F           reduce using rule 19 (m_exp_a -> SUB .)
    CTE_CHAR        reduce using rule 19 (m_exp_a -> SUB .)
    ID              reduce using rule 19 (m_exp_a -> SUB .)
    OP              reduce using rule 19 (m_exp_a -> SUB .)


state 117

    (22) term -> term_b term_a . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    term_b                         shift and go to state 77
    term                           shift and go to state 147
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 118

    (23) term_a -> MULT .

    CTE_I           reduce using rule 23 (term_a -> MULT .)
    CTE_F           reduce using rule 23 (term_a -> MULT .)
    CTE_CHAR        reduce using rule 23 (term_a -> MULT .)
    ID              reduce using rule 23 (term_a -> MULT .)
    OP              reduce using rule 23 (term_a -> MULT .)


state 119

    (24) term_a -> DIV .

    CTE_I           reduce using rule 24 (term_a -> DIV .)
    CTE_F           reduce using rule 24 (term_a -> DIV .)
    CTE_CHAR        reduce using rule 24 (term_a -> DIV .)
    ID              reduce using rule 24 (term_a -> DIV .)
    OP              reduce using rule 24 (term_a -> DIV .)


state 120

    (73) fact -> fact_a exp . CP

    CP              shift and go to state 148


state 121

    (15) vars_vect_mat_a -> OSB exp CSB .

    SC              reduce using rule 15 (vars_vect_mat_a -> OSB exp CSB .)
    OSB             reduce using rule 15 (vars_vect_mat_a -> OSB exp CSB .)


state 122

    (60) exp -> and_exp exp_a .

    CSB             reduce using rule 60 (exp -> and_exp exp_a .)
    CP              reduce using rule 60 (exp -> and_exp exp_a .)


state 123

    (61) exp_a -> OR .

    CSB             reduce using rule 61 (exp_a -> OR .)
    CP              reduce using rule 61 (exp_a -> OR .)


state 124

    (62) exp_a -> empty .

    CSB             reduce using rule 62 (exp_a -> empty .)
    CP              reduce using rule 62 (exp_a -> empty .)


state 125

    (63) and_exp -> expresion and_exp_a .

    OR              reduce using rule 63 (and_exp -> expresion and_exp_a .)
    CSB             reduce using rule 63 (and_exp -> expresion and_exp_a .)
    CP              reduce using rule 63 (and_exp -> expresion and_exp_a .)


state 126

    (64) and_exp_a -> AND .

    OR              reduce using rule 64 (and_exp_a -> AND .)
    CSB             reduce using rule 64 (and_exp_a -> AND .)
    CP              reduce using rule 64 (and_exp_a -> AND .)


state 127

    (65) and_exp_a -> empty .

    OR              reduce using rule 65 (and_exp_a -> empty .)
    CSB             reduce using rule 65 (and_exp_a -> empty .)
    CP              reduce using rule 65 (and_exp_a -> empty .)


state 128

    (94) asignacion -> ID asignacion_a asignacion_a EQ . expresion SC
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    expresion                      shift and go to state 149
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 129

    (67) llamada -> ID OP llamada_a CP . SC

    SC              shift and go to state 150


state 130

    (68) llamada_a -> expresion llamada_b .

    CP              reduce using rule 68 (llamada_a -> expresion llamada_b .)


state 131

    (69) llamada_a -> CTE_STRING llamada_b .

    CP              reduce using rule 69 (llamada_a -> CTE_STRING llamada_b .)


state 132

    (71) llamada_b -> COMMA llamada_a .

    CP              reduce using rule 71 (llamada_b -> COMMA llamada_a .)


state 133

    (95) asignacion_a -> OSB exp CSB .

    OSB             reduce using rule 95 (asignacion_a -> OSB exp CSB .)
    EQ              reduce using rule 95 (asignacion_a -> OSB exp CSB .)


state 134

    (88) condicion -> IF OP expresion CP . bloque condicion_a
    (32) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 151

state 135

    (66) for -> FOR OP asignacionsencilla SC . expresion SC asignacionsencilla CP bloque
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    expresion                      shift and go to state 152
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 136

    (97) asignacionsencilla -> ID EQ . expresion
    (46) expresion -> . m_exp
    (47) expresion -> . m_exp expresion_a m_exp
    (16) m_exp -> . m_exp_b
    (17) m_exp -> . m_exp_b m_exp_a m_exp
    (20) m_exp_b -> . term
    (21) term -> . term_b
    (22) term -> . term_b term_a term
    (25) term_b -> . fact
    (73) fact -> . fact_a exp CP
    (74) fact -> . CTE_I
    (75) fact -> . CTE_F
    (76) fact -> . CTE_CHAR
    (77) fact -> . ID
    (78) fact -> . llamada
    (79) fact_a -> . OP
    (67) llamada -> . ID OP llamada_a CP SC

    CTE_I           shift and go to state 80
    CTE_F           shift and go to state 81
    CTE_CHAR        shift and go to state 82
    ID              shift and go to state 72
    OP              shift and go to state 84

    expresion                      shift and go to state 153
    m_exp                          shift and go to state 74
    m_exp_b                        shift and go to state 75
    term                           shift and go to state 76
    term_b                         shift and go to state 77
    fact                           shift and go to state 78
    fact_a                         shift and go to state 79
    llamada                        shift and go to state 83

state 137

    (80) classcreate -> CLASS CLASS_ID OB classcreate_a . function classcreate_c CB
    (98) function -> . function_a ID OP function_b CP bloque
    (99) function_a -> . VOID
    (100) function_a -> . tiposimple
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR

    VOID            shift and go to state 48
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 154
    function_a                     shift and go to state 46
    tiposimple                     shift and go to state 155

state 138

    (81) classcreate_a -> vars . classcreate_a
    (81) classcreate_a -> . vars classcreate_a
    (82) classcreate_a -> . vars_vect_mat classcreate_a
    (83) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (104) empty -> .
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (29) tipocompuesto -> . DATAFRAME
    (30) tipocompuesto -> . ID
    (31) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 104 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 104 (empty -> .) ]
  ! FLOAT           [ reduce using rule 104 (empty -> .) ]
  ! CHAR            [ reduce using rule 104 (empty -> .) ]

    vars                           shift and go to state 138
    classcreate_a                  shift and go to state 156
    vars_vect_mat                  shift and go to state 139
    empty                          shift and go to state 140
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 139

    (82) classcreate_a -> vars_vect_mat . classcreate_a
    (81) classcreate_a -> . vars classcreate_a
    (82) classcreate_a -> . vars_vect_mat classcreate_a
    (83) classcreate_a -> . empty
    (7) vars -> . tiposimple vars_a SC
    (8) vars -> . tipocompuesto vars_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (14) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (104) empty -> .
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (29) tipocompuesto -> . DATAFRAME
    (30) tipocompuesto -> . ID
    (31) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 104 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    DATAFRAME       shift and go to state 16
    ID              shift and go to state 5
    FILE            shift and go to state 17

  ! INT             [ reduce using rule 104 (empty -> .) ]
  ! FLOAT           [ reduce using rule 104 (empty -> .) ]
  ! CHAR            [ reduce using rule 104 (empty -> .) ]

    vars_vect_mat                  shift and go to state 139
    classcreate_a                  shift and go to state 157
    vars                           shift and go to state 138
    empty                          shift and go to state 140
    tiposimple                     shift and go to state 11
    tipocompuesto                  shift and go to state 12

state 140

    (83) classcreate_a -> empty .

    VOID            reduce using rule 83 (classcreate_a -> empty .)
    INT             reduce using rule 83 (classcreate_a -> empty .)
    FLOAT           reduce using rule 83 (classcreate_a -> empty .)
    CHAR            reduce using rule 83 (classcreate_a -> empty .)


state 141

    (98) function -> function_a ID OP function_b . CP bloque

    CP              shift and go to state 158


state 142

    (101) function_b -> tiposimple . ID
    (102) function_b -> tiposimple . ID COMMA function_b

    ID              shift and go to state 159


state 143

    (103) function_b -> empty .

    CP              reduce using rule 103 (function_b -> empty .)


state 144

    (59) while_b -> while_a OP expresion CP .

    OB              reduce using rule 59 (while_b -> while_a OP expresion CP .)


state 145

    (47) expresion -> m_exp expresion_a m_exp .

    COMMA           reduce using rule 47 (expresion -> m_exp expresion_a m_exp .)
    SC              reduce using rule 47 (expresion -> m_exp expresion_a m_exp .)
    AND             reduce using rule 47 (expresion -> m_exp expresion_a m_exp .)
    OR              reduce using rule 47 (expresion -> m_exp expresion_a m_exp .)
    CSB             reduce using rule 47 (expresion -> m_exp expresion_a m_exp .)
    CP              reduce using rule 47 (expresion -> m_exp expresion_a m_exp .)


state 146

    (17) m_exp -> m_exp_b m_exp_a m_exp .

    LT              reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    GT              reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    NE              reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    EQEQ            reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    LE              reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    GE              reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    COMMA           reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    SC              reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    AND             reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    OR              reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    CSB             reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)
    CP              reduce using rule 17 (m_exp -> m_exp_b m_exp_a m_exp .)


state 147

    (22) term -> term_b term_a term .

    ADD             reduce using rule 22 (term -> term_b term_a term .)
    SUB             reduce using rule 22 (term -> term_b term_a term .)
    LT              reduce using rule 22 (term -> term_b term_a term .)
    GT              reduce using rule 22 (term -> term_b term_a term .)
    NE              reduce using rule 22 (term -> term_b term_a term .)
    EQEQ            reduce using rule 22 (term -> term_b term_a term .)
    LE              reduce using rule 22 (term -> term_b term_a term .)
    GE              reduce using rule 22 (term -> term_b term_a term .)
    COMMA           reduce using rule 22 (term -> term_b term_a term .)
    SC              reduce using rule 22 (term -> term_b term_a term .)
    AND             reduce using rule 22 (term -> term_b term_a term .)
    OR              reduce using rule 22 (term -> term_b term_a term .)
    CSB             reduce using rule 22 (term -> term_b term_a term .)
    CP              reduce using rule 22 (term -> term_b term_a term .)


state 148

    (73) fact -> fact_a exp CP .

    MULT            reduce using rule 73 (fact -> fact_a exp CP .)
    DIV             reduce using rule 73 (fact -> fact_a exp CP .)
    ADD             reduce using rule 73 (fact -> fact_a exp CP .)
    SUB             reduce using rule 73 (fact -> fact_a exp CP .)
    LT              reduce using rule 73 (fact -> fact_a exp CP .)
    GT              reduce using rule 73 (fact -> fact_a exp CP .)
    NE              reduce using rule 73 (fact -> fact_a exp CP .)
    EQEQ            reduce using rule 73 (fact -> fact_a exp CP .)
    LE              reduce using rule 73 (fact -> fact_a exp CP .)
    GE              reduce using rule 73 (fact -> fact_a exp CP .)
    COMMA           reduce using rule 73 (fact -> fact_a exp CP .)
    SC              reduce using rule 73 (fact -> fact_a exp CP .)
    AND             reduce using rule 73 (fact -> fact_a exp CP .)
    OR              reduce using rule 73 (fact -> fact_a exp CP .)
    CSB             reduce using rule 73 (fact -> fact_a exp CP .)
    CP              reduce using rule 73 (fact -> fact_a exp CP .)


state 149

    (94) asignacion -> ID asignacion_a asignacion_a EQ expresion . SC

    SC              shift and go to state 160


state 150

    (67) llamada -> ID OP llamada_a CP SC .

    ID              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    IF              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    FOR             reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    CLASS           reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    CLASS_ID        reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    INT             reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    FLOAT           reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    CHAR            reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    DATAFRAME       reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    FILE            reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    VOID            reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    WHILE           reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    CB              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    MULT            reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    DIV             reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    ADD             reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    SUB             reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    LT              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    GT              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    NE              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    EQEQ            reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    LE              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    GE              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    COMMA           reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    SC              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    AND             reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    OR              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    CSB             reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)
    CP              reduce using rule 67 (llamada -> ID OP llamada_a CP SC .)


state 151

    (88) condicion -> IF OP expresion CP bloque . condicion_a
    (89) condicion_a -> . ELSE condicion_b bloque

    ELSE            shift and go to state 162

    condicion_a                    shift and go to state 161

state 152

    (66) for -> FOR OP asignacionsencilla SC expresion . SC asignacionsencilla CP bloque

    SC              shift and go to state 163


state 153

    (97) asignacionsencilla -> ID EQ expresion .

    SC              reduce using rule 97 (asignacionsencilla -> ID EQ expresion .)
    CP              reduce using rule 97 (asignacionsencilla -> ID EQ expresion .)


state 154

    (80) classcreate -> CLASS CLASS_ID OB classcreate_a function . classcreate_c CB
    (84) classcreate_c -> . function classcreate_d
    (85) classcreate_c -> . classcreate_d
    (98) function -> . function_a ID OP function_b CP bloque
    (86) classcreate_d -> . classcreate_c
    (87) classcreate_d -> . empty
    (99) function_a -> . VOID
    (100) function_a -> . tiposimple
    (104) empty -> .
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR

    VOID            shift and go to state 48
    CB              reduce using rule 104 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 164
    classcreate_c                  shift and go to state 165
    classcreate_d                  shift and go to state 166
    function_a                     shift and go to state 46
    empty                          shift and go to state 167
    tiposimple                     shift and go to state 155

state 155

    (100) function_a -> tiposimple .

    ID              reduce using rule 100 (function_a -> tiposimple .)


state 156

    (81) classcreate_a -> vars classcreate_a .

    VOID            reduce using rule 81 (classcreate_a -> vars classcreate_a .)
    INT             reduce using rule 81 (classcreate_a -> vars classcreate_a .)
    FLOAT           reduce using rule 81 (classcreate_a -> vars classcreate_a .)
    CHAR            reduce using rule 81 (classcreate_a -> vars classcreate_a .)


state 157

    (82) classcreate_a -> vars_vect_mat classcreate_a .

    VOID            reduce using rule 82 (classcreate_a -> vars_vect_mat classcreate_a .)
    INT             reduce using rule 82 (classcreate_a -> vars_vect_mat classcreate_a .)
    FLOAT           reduce using rule 82 (classcreate_a -> vars_vect_mat classcreate_a .)
    CHAR            reduce using rule 82 (classcreate_a -> vars_vect_mat classcreate_a .)


state 158

    (98) function -> function_a ID OP function_b CP . bloque
    (32) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 168

state 159

    (101) function_b -> tiposimple ID .
    (102) function_b -> tiposimple ID . COMMA function_b

    CP              reduce using rule 101 (function_b -> tiposimple ID .)
    COMMA           shift and go to state 169


state 160

    (94) asignacion -> ID asignacion_a asignacion_a EQ expresion SC .

    ID              reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    IF              reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FOR             reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS           reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS_ID        reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    INT             reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FLOAT           reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CHAR            reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DATAFRAME       reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FILE            reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    VOID            reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    WHILE           reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CB              reduce using rule 94 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)


state 161

    (88) condicion -> IF OP expresion CP bloque condicion_a .

    ID              reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    IF              reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    FOR             reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    CLASS           reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    CLASS_ID        reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    INT             reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    FLOAT           reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    CHAR            reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    DATAFRAME       reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    FILE            reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    VOID            reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    WHILE           reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    CB              reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)
    OB              reduce using rule 88 (condicion -> IF OP expresion CP bloque condicion_a .)


state 162

    (89) condicion_a -> ELSE . condicion_b bloque
    (90) condicion_b -> . condicion
    (91) condicion_b -> . empty
    (88) condicion -> . IF OP expresion CP bloque condicion_a
    (104) empty -> .

    IF              shift and go to state 40
    OB              reduce using rule 104 (empty -> .)

    condicion_b                    shift and go to state 170
    condicion                      shift and go to state 171
    empty                          shift and go to state 172

state 163

    (66) for -> FOR OP asignacionsencilla SC expresion SC . asignacionsencilla CP bloque
    (97) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 101

    asignacionsencilla             shift and go to state 173

state 164

    (84) classcreate_c -> function . classcreate_d
    (86) classcreate_d -> . classcreate_c
    (87) classcreate_d -> . empty
    (84) classcreate_c -> . function classcreate_d
    (85) classcreate_c -> . classcreate_d
    (104) empty -> .
    (98) function -> . function_a ID OP function_b CP bloque
    (99) function_a -> . VOID
    (100) function_a -> . tiposimple
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR

    CB              reduce using rule 104 (empty -> .)
    VOID            shift and go to state 48
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 164
    classcreate_d                  shift and go to state 174
    classcreate_c                  shift and go to state 175
    empty                          shift and go to state 167
    function_a                     shift and go to state 46
    tiposimple                     shift and go to state 155

state 165

    (80) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c . CB
    (86) classcreate_d -> classcreate_c .

  ! shift/reduce conflict for CB resolved as shift
    CB              shift and go to state 176

  ! CB              [ reduce using rule 86 (classcreate_d -> classcreate_c .) ]


state 166

    (85) classcreate_c -> classcreate_d .

    CB              reduce using rule 85 (classcreate_c -> classcreate_d .)


state 167

    (87) classcreate_d -> empty .

    CB              reduce using rule 87 (classcreate_d -> empty .)


state 168

    (98) function -> function_a ID OP function_b CP bloque .

    ID              reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    IF              reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    FOR             reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    CLASS           reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    CLASS_ID        reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    INT             reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    FLOAT           reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    CHAR            reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    DATAFRAME       reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    FILE            reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    VOID            reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    WHILE           reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)
    CB              reduce using rule 98 (function -> function_a ID OP function_b CP bloque .)


state 169

    (102) function_b -> tiposimple ID COMMA . function_b
    (101) function_b -> . tiposimple ID
    (102) function_b -> . tiposimple ID COMMA function_b
    (103) function_b -> . empty
    (26) tiposimple -> . INT
    (27) tiposimple -> . FLOAT
    (28) tiposimple -> . CHAR
    (104) empty -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    CP              reduce using rule 104 (empty -> .)

    tiposimple                     shift and go to state 142
    function_b                     shift and go to state 177
    empty                          shift and go to state 143

state 170

    (89) condicion_a -> ELSE condicion_b . bloque
    (32) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 178

state 171

    (90) condicion_b -> condicion .

    OB              reduce using rule 90 (condicion_b -> condicion .)


state 172

    (91) condicion_b -> empty .

    OB              reduce using rule 91 (condicion_b -> empty .)


state 173

    (66) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla . CP bloque

    CP              shift and go to state 179


state 174

    (84) classcreate_c -> function classcreate_d .
    (85) classcreate_c -> classcreate_d .

  ! reduce/reduce conflict for CB resolved using rule 84 (classcreate_c -> function classcreate_d .)
    CB              reduce using rule 84 (classcreate_c -> function classcreate_d .)

  ! CB              [ reduce using rule 85 (classcreate_c -> classcreate_d .) ]


state 175

    (86) classcreate_d -> classcreate_c .

    CB              reduce using rule 86 (classcreate_d -> classcreate_c .)


state 176

    (80) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .

    ID              reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    IF              reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FOR             reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS           reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS_ID        reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INT             reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FLOAT           reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CHAR            reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DATAFRAME       reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FILE            reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    VOID            reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    WHILE           reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CB              reduce using rule 80 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)


state 177

    (102) function_b -> tiposimple ID COMMA function_b .

    CP              reduce using rule 102 (function_b -> tiposimple ID COMMA function_b .)


state 178

    (89) condicion_a -> ELSE condicion_b bloque .

    ID              reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    IF              reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    FOR             reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    CLASS           reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    CLASS_ID        reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    INT             reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    FLOAT           reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    CHAR            reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    DATAFRAME       reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    FILE            reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    VOID            reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    WHILE           reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    CB              reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)
    OB              reduce using rule 89 (condicion_a -> ELSE condicion_b bloque .)


state 179

    (66) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP . bloque
    (32) bloque -> . OB bloque_a CB

    OB              shift and go to state 19

    bloque                         shift and go to state 180

state 180

    (66) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .

    ID              reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    IF              reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FOR             reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CLASS           reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CLASS_ID        reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    INT             reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FLOAT           reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CHAR            reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    DATAFRAME       reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FILE            reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    VOID            reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    WHILE           reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CB              reduce using rule 66 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OSB in state 39 resolved as shift
WARNING: shift/reduce conflict for ID in state 45 resolved as shift
WARNING: shift/reduce conflict for INT in state 102 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 102 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 102 resolved as shift
WARNING: shift/reduce conflict for INT in state 138 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 138 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 138 resolved as shift
WARNING: shift/reduce conflict for INT in state 139 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 139 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 139 resolved as shift
WARNING: shift/reduce conflict for CB in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa_a -> programa_b)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 27 resolved using rule (bloque_a -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 174 resolved using rule (classcreate_c -> function classcreate_d)
WARNING: rejected rule (classcreate_c -> classcreate_d) in state 174
