Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPT
    COL
    DIGIT
    DIGITS
    LETTER

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SC programa_a bloque
Rule 2     programa_a -> programa_b
Rule 3     programa_a -> programa_b programa_a
Rule 4     programa_b -> vars
Rule 5     programa_b -> vars_vect_mat
Rule 6     vars -> tiposimple vars_a SC
Rule 7     vars -> tipocompuesto vars_a SC
Rule 8     vars_a -> vars_b
Rule 9     vars_a -> vars_b COMMA vars_a
Rule 10    vars_b -> ID
Rule 11    vars_b -> ID EQ varcte
Rule 12    vars_vect_mat -> tiposimple ID vars_vect_mat_a SC
Rule 13    vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
Rule 14    vars_vect_mat_a -> OSB exp CSB
Rule 15    m_exp -> term
Rule 16    m_exp -> term m_exp_a m_exp
Rule 17    m_exp_a -> ADD
Rule 18    m_exp_a -> SUB
Rule 19    term -> fact
Rule 20    term -> fact term_a term
Rule 21    term_a -> MULT
Rule 22    term_a -> DIV
Rule 23    tiposimple -> INT
Rule 24    tiposimple -> FLOAT
Rule 25    tiposimple -> CHAR
Rule 26    tipocompuesto -> DATAFRAME
Rule 27    tipocompuesto -> ID
Rule 28    tipocompuesto -> FILE
Rule 29    bloque -> OB bloque_a CB
Rule 30    bloque_a -> estatuto bloque_a
Rule 31    bloque_a -> estatuto
Rule 32    bloque_a -> empty
Rule 33    estatuto -> asignacion
Rule 34    estatuto -> condicion
Rule 35    estatuto -> llamada
Rule 36    estatuto -> while
Rule 37    estatuto -> for
Rule 38    estatuto -> classcreate
Rule 39    estatuto -> vars
Rule 40    estatuto -> classdeclare
Rule 41    estatuto -> llamadafuncionclase
Rule 42    estatuto -> function
Rule 43    expresion -> m_exp
Rule 44    expresion -> m_exp expresion_a m_exp
Rule 45    expresion_a -> LT
Rule 46    expresion_a -> GT
Rule 47    expresion_a -> NE
Rule 48    expresion_a -> EQEQ
Rule 49    expresion_a -> LE
Rule 50    expresion_a -> GE
Rule 51    varcte -> ID
Rule 52    varcte -> CTE_I
Rule 53    varcte -> CTE_F
Rule 54    while -> WHILE OB expresion CB bloque
Rule 55    exp -> and_exp exp_a
Rule 56    exp_a -> OR
Rule 57    exp_a -> empty
Rule 58    and_exp -> expresion and_exp_a
Rule 59    and_exp_a -> AND
Rule 60    and_exp_a -> empty
Rule 61    for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
Rule 62    llamada -> ID OP llamada_a CP SC
Rule 63    llamada_a -> expresion llamada_b
Rule 64    llamada_a -> CTE_STRING llamada_b
Rule 65    llamada_a -> llamada_b
Rule 66    llamada_b -> COMMA llamada_a
Rule 67    llamada_b -> empty
Rule 68    fact -> OP exp CP
Rule 69    fact -> CTE_I
Rule 70    fact -> CTE_F
Rule 71    fact -> CTE_CHAR
Rule 72    fact -> ID
Rule 73    fact -> llamada
Rule 74    classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB
Rule 75    classcreate_a -> vars classcreate_a
Rule 76    classcreate_a -> vars_vect_mat classcreate_a
Rule 77    classcreate_a -> empty
Rule 78    classcreate_c -> function classcreate_d
Rule 79    classcreate_c -> classcreate_d
Rule 80    classcreate_d -> classcreate_c
Rule 81    classcreate_d -> empty
Rule 82    condicion -> IF OP expresion CP bloque condicion_a
Rule 83    condicion_a -> ELSE condicion_b bloque
Rule 84    condicion_b -> condicion
Rule 85    condicion_b -> empty
Rule 86    classdeclare -> CLASS_ID ID SC
Rule 87    llamadafuncionclase -> ID POINT llamada
Rule 88    asignacion -> ID asignacion_a asignacion_a EQ expresion SC
Rule 89    asignacion_a -> OSB exp CSB
Rule 90    asignacion_a -> empty
Rule 91    asignacionsencilla -> ID EQ expresion
Rule 92    function -> function_a ID OP function_b CP bloque
Rule 93    function_a -> VOID
Rule 94    function_a -> tiposimple
Rule 95    function_b -> tiposimple ID
Rule 96    function_b -> tiposimple ID COMMA function_b
Rule 97    function_b -> empty
Rule 98    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 17
AND                  : 59
CAPT                 : 
CB                   : 29 54 74
CHAR                 : 25
CLASS                : 74
CLASS_ID             : 74 86
COL                  : 
COMMA                : 9 66 96
CP                   : 61 62 68 82 92
CSB                  : 14 89
CTE_CHAR             : 71
CTE_F                : 53 70
CTE_I                : 52 69
CTE_STRING           : 64
DATAFRAME            : 26
DIGIT                : 
DIGITS               : 
DIV                  : 22
ELSE                 : 83
EQ                   : 11 88 91
EQEQ                 : 48
FILE                 : 28
FLOAT                : 24
FOR                  : 61
GE                   : 50
GT                   : 46
ID                   : 1 10 11 12 13 27 51 62 72 86 87 88 91 92 95 96
IF                   : 82
INT                  : 23
LE                   : 49
LETTER               : 
LT                   : 45
MULT                 : 21
NE                   : 47
OB                   : 29 54 74
OP                   : 61 62 68 82 92
OR                   : 56
OSB                  : 14 89
POINT                : 87
PROGRAM              : 1
SC                   : 1 6 7 12 13 61 61 62 86 88
SUB                  : 18
VOID                 : 93
WHILE                : 54
error                : 

Nonterminals, with rules where they appear

and_exp              : 55
and_exp_a            : 58
asignacion           : 33
asignacion_a         : 88 88
asignacionsencilla   : 61 61
bloque               : 1 54 61 82 83 92
bloque_a             : 29 30
classcreate          : 38
classcreate_a        : 74 75 76
classcreate_c        : 74 80
classcreate_d        : 78 79
classdeclare         : 40
condicion            : 34 84
condicion_a          : 82
condicion_b          : 83
empty                : 32 57 60 67 77 81 85 90 97
estatuto             : 30 31
exp                  : 14 68 89
exp_a                : 55
expresion            : 54 58 61 63 82 88 91
expresion_a          : 44
fact                 : 19 20
for                  : 37
function             : 42 74 78
function_a           : 92
function_b           : 92 96
llamada              : 35 73 87
llamada_a            : 62 66
llamada_b            : 63 64 65
llamadafuncionclase  : 41
m_exp                : 16 43 44 44
m_exp_a              : 16
programa             : 0
programa_a           : 1 3
programa_b           : 2 3
term                 : 15 16 20
term_a               : 20
tipocompuesto        : 7
tiposimple           : 6 12 13 94 95 96
varcte               : 11
vars                 : 4 39 75
vars_a               : 6 7 9
vars_b               : 8 9
vars_vect_mat        : 5 76
vars_vect_mat_a      : 12 13 13
while                : 36

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SC programa_a bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SC programa_a bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SC programa_a bloque

    SC              shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SC . programa_a bloque
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_b -> . vars
    (5) programa_b -> . vars_vect_mat
    (6) vars -> . tiposimple vars_a SC
    (7) vars -> . tipocompuesto vars_a SC
    (12) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (26) tipocompuesto -> . DATAFRAME
    (27) tipocompuesto -> . ID
    (28) tipocompuesto -> . FILE

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    DATAFRAME       shift and go to state 15
    ID              shift and go to state 5
    FILE            shift and go to state 16

    programa_a                     shift and go to state 6
    programa_b                     shift and go to state 7
    vars                           shift and go to state 8
    vars_vect_mat                  shift and go to state 9
    tiposimple                     shift and go to state 10
    tipocompuesto                  shift and go to state 11

state 5

    (27) tipocompuesto -> ID .

    ID              reduce using rule 27 (tipocompuesto -> ID .)


state 6

    (1) programa -> PROGRAM ID SC programa_a . bloque
    (29) bloque -> . OB bloque_a CB

    OB              shift and go to state 18

    bloque                         shift and go to state 17

state 7

    (2) programa_a -> programa_b .
    (3) programa_a -> programa_b . programa_a
    (2) programa_a -> . programa_b
    (3) programa_a -> . programa_b programa_a
    (4) programa_b -> . vars
    (5) programa_b -> . vars_vect_mat
    (6) vars -> . tiposimple vars_a SC
    (7) vars -> . tipocompuesto vars_a SC
    (12) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (26) tipocompuesto -> . DATAFRAME
    (27) tipocompuesto -> . ID
    (28) tipocompuesto -> . FILE

    OB              reduce using rule 2 (programa_a -> programa_b .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    DATAFRAME       shift and go to state 15
    ID              shift and go to state 5
    FILE            shift and go to state 16

    programa_b                     shift and go to state 7
    programa_a                     shift and go to state 19
    vars                           shift and go to state 8
    vars_vect_mat                  shift and go to state 9
    tiposimple                     shift and go to state 10
    tipocompuesto                  shift and go to state 11

state 8

    (4) programa_b -> vars .

    INT             reduce using rule 4 (programa_b -> vars .)
    FLOAT           reduce using rule 4 (programa_b -> vars .)
    CHAR            reduce using rule 4 (programa_b -> vars .)
    DATAFRAME       reduce using rule 4 (programa_b -> vars .)
    ID              reduce using rule 4 (programa_b -> vars .)
    FILE            reduce using rule 4 (programa_b -> vars .)
    OB              reduce using rule 4 (programa_b -> vars .)


state 9

    (5) programa_b -> vars_vect_mat .

    INT             reduce using rule 5 (programa_b -> vars_vect_mat .)
    FLOAT           reduce using rule 5 (programa_b -> vars_vect_mat .)
    CHAR            reduce using rule 5 (programa_b -> vars_vect_mat .)
    DATAFRAME       reduce using rule 5 (programa_b -> vars_vect_mat .)
    ID              reduce using rule 5 (programa_b -> vars_vect_mat .)
    FILE            reduce using rule 5 (programa_b -> vars_vect_mat .)
    OB              reduce using rule 5 (programa_b -> vars_vect_mat .)


state 10

    (6) vars -> tiposimple . vars_a SC
    (12) vars_vect_mat -> tiposimple . ID vars_vect_mat_a SC
    (13) vars_vect_mat -> tiposimple . ID vars_vect_mat_a vars_vect_mat_a SC
    (8) vars_a -> . vars_b
    (9) vars_a -> . vars_b COMMA vars_a
    (10) vars_b -> . ID
    (11) vars_b -> . ID EQ varcte

    ID              shift and go to state 21

    vars_a                         shift and go to state 20
    vars_b                         shift and go to state 22

state 11

    (7) vars -> tipocompuesto . vars_a SC
    (8) vars_a -> . vars_b
    (9) vars_a -> . vars_b COMMA vars_a
    (10) vars_b -> . ID
    (11) vars_b -> . ID EQ varcte

    ID              shift and go to state 24

    vars_a                         shift and go to state 23
    vars_b                         shift and go to state 22

state 12

    (23) tiposimple -> INT .

    ID              reduce using rule 23 (tiposimple -> INT .)


state 13

    (24) tiposimple -> FLOAT .

    ID              reduce using rule 24 (tiposimple -> FLOAT .)


state 14

    (25) tiposimple -> CHAR .

    ID              reduce using rule 25 (tiposimple -> CHAR .)


state 15

    (26) tipocompuesto -> DATAFRAME .

    ID              reduce using rule 26 (tipocompuesto -> DATAFRAME .)


state 16

    (28) tipocompuesto -> FILE .

    ID              reduce using rule 28 (tipocompuesto -> FILE .)


state 17

    (1) programa -> PROGRAM ID SC programa_a bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SC programa_a bloque .)


state 18

    (29) bloque -> OB . bloque_a CB
    (30) bloque_a -> . estatuto bloque_a
    (31) bloque_a -> . estatuto
    (32) bloque_a -> . empty
    (33) estatuto -> . asignacion
    (34) estatuto -> . condicion
    (35) estatuto -> . llamada
    (36) estatuto -> . while
    (37) estatuto -> . for
    (38) estatuto -> . classcreate
    (39) estatuto -> . vars
    (40) estatuto -> . classdeclare
    (41) estatuto -> . llamadafuncionclase
    (42) estatuto -> . function
    (98) empty -> .
    (88) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (82) condicion -> . IF OP expresion CP bloque condicion_a
    (62) llamada -> . ID OP llamada_a CP SC
    (54) while -> . WHILE OB expresion CB bloque
    (61) for -> . FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (74) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (6) vars -> . tiposimple vars_a SC
    (7) vars -> . tipocompuesto vars_a SC
    (86) classdeclare -> . CLASS_ID ID SC
    (87) llamadafuncionclase -> . ID POINT llamada
    (92) function -> . function_a ID OP function_b CP bloque
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (26) tipocompuesto -> . DATAFRAME
    (27) tipocompuesto -> . ID
    (28) tipocompuesto -> . FILE
    (93) function_a -> . VOID
    (94) function_a -> . tiposimple

    CB              reduce using rule 98 (empty -> .)
    ID              shift and go to state 38
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    CLASS           shift and go to state 42
    CLASS_ID        shift and go to state 43
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    DATAFRAME       shift and go to state 15
    FILE            shift and go to state 16
    VOID            shift and go to state 46

    bloque_a                       shift and go to state 25
    estatuto                       shift and go to state 26
    empty                          shift and go to state 27
    asignacion                     shift and go to state 28
    condicion                      shift and go to state 29
    llamada                        shift and go to state 30
    while                          shift and go to state 31
    for                            shift and go to state 32
    classcreate                    shift and go to state 33
    vars                           shift and go to state 34
    classdeclare                   shift and go to state 35
    llamadafuncionclase            shift and go to state 36
    function                       shift and go to state 37
    tiposimple                     shift and go to state 44
    tipocompuesto                  shift and go to state 11
    function_a                     shift and go to state 45

state 19

    (3) programa_a -> programa_b programa_a .

    OB              reduce using rule 3 (programa_a -> programa_b programa_a .)


state 20

    (6) vars -> tiposimple vars_a . SC

    SC              shift and go to state 47


state 21

    (12) vars_vect_mat -> tiposimple ID . vars_vect_mat_a SC
    (13) vars_vect_mat -> tiposimple ID . vars_vect_mat_a vars_vect_mat_a SC
    (10) vars_b -> ID .
    (11) vars_b -> ID . EQ varcte
    (14) vars_vect_mat_a -> . OSB exp CSB

    COMMA           reduce using rule 10 (vars_b -> ID .)
    SC              reduce using rule 10 (vars_b -> ID .)
    EQ              shift and go to state 49
    OSB             shift and go to state 50

    vars_vect_mat_a                shift and go to state 48

state 22

    (8) vars_a -> vars_b .
    (9) vars_a -> vars_b . COMMA vars_a

    SC              reduce using rule 8 (vars_a -> vars_b .)
    COMMA           shift and go to state 51


state 23

    (7) vars -> tipocompuesto vars_a . SC

    SC              shift and go to state 52


state 24

    (10) vars_b -> ID .
    (11) vars_b -> ID . EQ varcte

    COMMA           reduce using rule 10 (vars_b -> ID .)
    SC              reduce using rule 10 (vars_b -> ID .)
    EQ              shift and go to state 49


state 25

    (29) bloque -> OB bloque_a . CB

    CB              shift and go to state 53


state 26

    (30) bloque_a -> estatuto . bloque_a
    (31) bloque_a -> estatuto .
    (30) bloque_a -> . estatuto bloque_a
    (31) bloque_a -> . estatuto
    (32) bloque_a -> . empty
    (33) estatuto -> . asignacion
    (34) estatuto -> . condicion
    (35) estatuto -> . llamada
    (36) estatuto -> . while
    (37) estatuto -> . for
    (38) estatuto -> . classcreate
    (39) estatuto -> . vars
    (40) estatuto -> . classdeclare
    (41) estatuto -> . llamadafuncionclase
    (42) estatuto -> . function
    (98) empty -> .
    (88) asignacion -> . ID asignacion_a asignacion_a EQ expresion SC
    (82) condicion -> . IF OP expresion CP bloque condicion_a
    (62) llamada -> . ID OP llamada_a CP SC
    (54) while -> . WHILE OB expresion CB bloque
    (61) for -> . FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (74) classcreate -> . CLASS CLASS_ID OB classcreate_a function classcreate_c CB
    (6) vars -> . tiposimple vars_a SC
    (7) vars -> . tipocompuesto vars_a SC
    (86) classdeclare -> . CLASS_ID ID SC
    (87) llamadafuncionclase -> . ID POINT llamada
    (92) function -> . function_a ID OP function_b CP bloque
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (26) tipocompuesto -> . DATAFRAME
    (27) tipocompuesto -> . ID
    (28) tipocompuesto -> . FILE
    (93) function_a -> . VOID
    (94) function_a -> . tiposimple

  ! reduce/reduce conflict for CB resolved using rule 31 (bloque_a -> estatuto .)
    CB              reduce using rule 31 (bloque_a -> estatuto .)
    ID              shift and go to state 38
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    CLASS           shift and go to state 42
    CLASS_ID        shift and go to state 43
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    DATAFRAME       shift and go to state 15
    FILE            shift and go to state 16
    VOID            shift and go to state 46

  ! CB              [ reduce using rule 98 (empty -> .) ]

    estatuto                       shift and go to state 26
    bloque_a                       shift and go to state 54
    empty                          shift and go to state 27
    asignacion                     shift and go to state 28
    condicion                      shift and go to state 29
    llamada                        shift and go to state 30
    while                          shift and go to state 31
    for                            shift and go to state 32
    classcreate                    shift and go to state 33
    vars                           shift and go to state 34
    classdeclare                   shift and go to state 35
    llamadafuncionclase            shift and go to state 36
    function                       shift and go to state 37
    tiposimple                     shift and go to state 44
    tipocompuesto                  shift and go to state 11
    function_a                     shift and go to state 45

state 27

    (32) bloque_a -> empty .

    CB              reduce using rule 32 (bloque_a -> empty .)


state 28

    (33) estatuto -> asignacion .

    ID              reduce using rule 33 (estatuto -> asignacion .)
    IF              reduce using rule 33 (estatuto -> asignacion .)
    WHILE           reduce using rule 33 (estatuto -> asignacion .)
    FOR             reduce using rule 33 (estatuto -> asignacion .)
    CLASS           reduce using rule 33 (estatuto -> asignacion .)
    CLASS_ID        reduce using rule 33 (estatuto -> asignacion .)
    INT             reduce using rule 33 (estatuto -> asignacion .)
    FLOAT           reduce using rule 33 (estatuto -> asignacion .)
    CHAR            reduce using rule 33 (estatuto -> asignacion .)
    DATAFRAME       reduce using rule 33 (estatuto -> asignacion .)
    FILE            reduce using rule 33 (estatuto -> asignacion .)
    VOID            reduce using rule 33 (estatuto -> asignacion .)
    CB              reduce using rule 33 (estatuto -> asignacion .)


state 29

    (34) estatuto -> condicion .

    ID              reduce using rule 34 (estatuto -> condicion .)
    IF              reduce using rule 34 (estatuto -> condicion .)
    WHILE           reduce using rule 34 (estatuto -> condicion .)
    FOR             reduce using rule 34 (estatuto -> condicion .)
    CLASS           reduce using rule 34 (estatuto -> condicion .)
    CLASS_ID        reduce using rule 34 (estatuto -> condicion .)
    INT             reduce using rule 34 (estatuto -> condicion .)
    FLOAT           reduce using rule 34 (estatuto -> condicion .)
    CHAR            reduce using rule 34 (estatuto -> condicion .)
    DATAFRAME       reduce using rule 34 (estatuto -> condicion .)
    FILE            reduce using rule 34 (estatuto -> condicion .)
    VOID            reduce using rule 34 (estatuto -> condicion .)
    CB              reduce using rule 34 (estatuto -> condicion .)


state 30

    (35) estatuto -> llamada .

    ID              reduce using rule 35 (estatuto -> llamada .)
    IF              reduce using rule 35 (estatuto -> llamada .)
    WHILE           reduce using rule 35 (estatuto -> llamada .)
    FOR             reduce using rule 35 (estatuto -> llamada .)
    CLASS           reduce using rule 35 (estatuto -> llamada .)
    CLASS_ID        reduce using rule 35 (estatuto -> llamada .)
    INT             reduce using rule 35 (estatuto -> llamada .)
    FLOAT           reduce using rule 35 (estatuto -> llamada .)
    CHAR            reduce using rule 35 (estatuto -> llamada .)
    DATAFRAME       reduce using rule 35 (estatuto -> llamada .)
    FILE            reduce using rule 35 (estatuto -> llamada .)
    VOID            reduce using rule 35 (estatuto -> llamada .)
    CB              reduce using rule 35 (estatuto -> llamada .)


state 31

    (36) estatuto -> while .

    ID              reduce using rule 36 (estatuto -> while .)
    IF              reduce using rule 36 (estatuto -> while .)
    WHILE           reduce using rule 36 (estatuto -> while .)
    FOR             reduce using rule 36 (estatuto -> while .)
    CLASS           reduce using rule 36 (estatuto -> while .)
    CLASS_ID        reduce using rule 36 (estatuto -> while .)
    INT             reduce using rule 36 (estatuto -> while .)
    FLOAT           reduce using rule 36 (estatuto -> while .)
    CHAR            reduce using rule 36 (estatuto -> while .)
    DATAFRAME       reduce using rule 36 (estatuto -> while .)
    FILE            reduce using rule 36 (estatuto -> while .)
    VOID            reduce using rule 36 (estatuto -> while .)
    CB              reduce using rule 36 (estatuto -> while .)


state 32

    (37) estatuto -> for .

    ID              reduce using rule 37 (estatuto -> for .)
    IF              reduce using rule 37 (estatuto -> for .)
    WHILE           reduce using rule 37 (estatuto -> for .)
    FOR             reduce using rule 37 (estatuto -> for .)
    CLASS           reduce using rule 37 (estatuto -> for .)
    CLASS_ID        reduce using rule 37 (estatuto -> for .)
    INT             reduce using rule 37 (estatuto -> for .)
    FLOAT           reduce using rule 37 (estatuto -> for .)
    CHAR            reduce using rule 37 (estatuto -> for .)
    DATAFRAME       reduce using rule 37 (estatuto -> for .)
    FILE            reduce using rule 37 (estatuto -> for .)
    VOID            reduce using rule 37 (estatuto -> for .)
    CB              reduce using rule 37 (estatuto -> for .)


state 33

    (38) estatuto -> classcreate .

    ID              reduce using rule 38 (estatuto -> classcreate .)
    IF              reduce using rule 38 (estatuto -> classcreate .)
    WHILE           reduce using rule 38 (estatuto -> classcreate .)
    FOR             reduce using rule 38 (estatuto -> classcreate .)
    CLASS           reduce using rule 38 (estatuto -> classcreate .)
    CLASS_ID        reduce using rule 38 (estatuto -> classcreate .)
    INT             reduce using rule 38 (estatuto -> classcreate .)
    FLOAT           reduce using rule 38 (estatuto -> classcreate .)
    CHAR            reduce using rule 38 (estatuto -> classcreate .)
    DATAFRAME       reduce using rule 38 (estatuto -> classcreate .)
    FILE            reduce using rule 38 (estatuto -> classcreate .)
    VOID            reduce using rule 38 (estatuto -> classcreate .)
    CB              reduce using rule 38 (estatuto -> classcreate .)


state 34

    (39) estatuto -> vars .

    ID              reduce using rule 39 (estatuto -> vars .)
    IF              reduce using rule 39 (estatuto -> vars .)
    WHILE           reduce using rule 39 (estatuto -> vars .)
    FOR             reduce using rule 39 (estatuto -> vars .)
    CLASS           reduce using rule 39 (estatuto -> vars .)
    CLASS_ID        reduce using rule 39 (estatuto -> vars .)
    INT             reduce using rule 39 (estatuto -> vars .)
    FLOAT           reduce using rule 39 (estatuto -> vars .)
    CHAR            reduce using rule 39 (estatuto -> vars .)
    DATAFRAME       reduce using rule 39 (estatuto -> vars .)
    FILE            reduce using rule 39 (estatuto -> vars .)
    VOID            reduce using rule 39 (estatuto -> vars .)
    CB              reduce using rule 39 (estatuto -> vars .)


state 35

    (40) estatuto -> classdeclare .

    ID              reduce using rule 40 (estatuto -> classdeclare .)
    IF              reduce using rule 40 (estatuto -> classdeclare .)
    WHILE           reduce using rule 40 (estatuto -> classdeclare .)
    FOR             reduce using rule 40 (estatuto -> classdeclare .)
    CLASS           reduce using rule 40 (estatuto -> classdeclare .)
    CLASS_ID        reduce using rule 40 (estatuto -> classdeclare .)
    INT             reduce using rule 40 (estatuto -> classdeclare .)
    FLOAT           reduce using rule 40 (estatuto -> classdeclare .)
    CHAR            reduce using rule 40 (estatuto -> classdeclare .)
    DATAFRAME       reduce using rule 40 (estatuto -> classdeclare .)
    FILE            reduce using rule 40 (estatuto -> classdeclare .)
    VOID            reduce using rule 40 (estatuto -> classdeclare .)
    CB              reduce using rule 40 (estatuto -> classdeclare .)


state 36

    (41) estatuto -> llamadafuncionclase .

    ID              reduce using rule 41 (estatuto -> llamadafuncionclase .)
    IF              reduce using rule 41 (estatuto -> llamadafuncionclase .)
    WHILE           reduce using rule 41 (estatuto -> llamadafuncionclase .)
    FOR             reduce using rule 41 (estatuto -> llamadafuncionclase .)
    CLASS           reduce using rule 41 (estatuto -> llamadafuncionclase .)
    CLASS_ID        reduce using rule 41 (estatuto -> llamadafuncionclase .)
    INT             reduce using rule 41 (estatuto -> llamadafuncionclase .)
    FLOAT           reduce using rule 41 (estatuto -> llamadafuncionclase .)
    CHAR            reduce using rule 41 (estatuto -> llamadafuncionclase .)
    DATAFRAME       reduce using rule 41 (estatuto -> llamadafuncionclase .)
    FILE            reduce using rule 41 (estatuto -> llamadafuncionclase .)
    VOID            reduce using rule 41 (estatuto -> llamadafuncionclase .)
    CB              reduce using rule 41 (estatuto -> llamadafuncionclase .)


state 37

    (42) estatuto -> function .

    ID              reduce using rule 42 (estatuto -> function .)
    IF              reduce using rule 42 (estatuto -> function .)
    WHILE           reduce using rule 42 (estatuto -> function .)
    FOR             reduce using rule 42 (estatuto -> function .)
    CLASS           reduce using rule 42 (estatuto -> function .)
    CLASS_ID        reduce using rule 42 (estatuto -> function .)
    INT             reduce using rule 42 (estatuto -> function .)
    FLOAT           reduce using rule 42 (estatuto -> function .)
    CHAR            reduce using rule 42 (estatuto -> function .)
    DATAFRAME       reduce using rule 42 (estatuto -> function .)
    FILE            reduce using rule 42 (estatuto -> function .)
    VOID            reduce using rule 42 (estatuto -> function .)
    CB              reduce using rule 42 (estatuto -> function .)


state 38

    (88) asignacion -> ID . asignacion_a asignacion_a EQ expresion SC
    (62) llamada -> ID . OP llamada_a CP SC
    (87) llamadafuncionclase -> ID . POINT llamada
    (27) tipocompuesto -> ID .
    (89) asignacion_a -> . OSB exp CSB
    (90) asignacion_a -> . empty
    (98) empty -> .

  ! shift/reduce conflict for OSB resolved as shift
    OP              shift and go to state 56
    POINT           shift and go to state 57
    ID              reduce using rule 27 (tipocompuesto -> ID .)
    OSB             shift and go to state 58
    EQ              reduce using rule 98 (empty -> .)

  ! OSB             [ reduce using rule 98 (empty -> .) ]

    asignacion_a                   shift and go to state 55
    empty                          shift and go to state 59

state 39

    (82) condicion -> IF . OP expresion CP bloque condicion_a

    OP              shift and go to state 60


state 40

    (54) while -> WHILE . OB expresion CB bloque

    OB              shift and go to state 61


state 41

    (61) for -> FOR . OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque

    OP              shift and go to state 62


state 42

    (74) classcreate -> CLASS . CLASS_ID OB classcreate_a function classcreate_c CB

    CLASS_ID        shift and go to state 63


state 43

    (86) classdeclare -> CLASS_ID . ID SC

    ID              shift and go to state 64


state 44

    (6) vars -> tiposimple . vars_a SC
    (94) function_a -> tiposimple .
    (8) vars_a -> . vars_b
    (9) vars_a -> . vars_b COMMA vars_a
    (10) vars_b -> . ID
    (11) vars_b -> . ID EQ varcte

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 24

  ! ID              [ reduce using rule 94 (function_a -> tiposimple .) ]

    vars_a                         shift and go to state 20
    vars_b                         shift and go to state 22

state 45

    (92) function -> function_a . ID OP function_b CP bloque

    ID              shift and go to state 65


state 46

    (93) function_a -> VOID .

    ID              reduce using rule 93 (function_a -> VOID .)


state 47

    (6) vars -> tiposimple vars_a SC .

    INT             reduce using rule 6 (vars -> tiposimple vars_a SC .)
    FLOAT           reduce using rule 6 (vars -> tiposimple vars_a SC .)
    CHAR            reduce using rule 6 (vars -> tiposimple vars_a SC .)
    DATAFRAME       reduce using rule 6 (vars -> tiposimple vars_a SC .)
    ID              reduce using rule 6 (vars -> tiposimple vars_a SC .)
    FILE            reduce using rule 6 (vars -> tiposimple vars_a SC .)
    OB              reduce using rule 6 (vars -> tiposimple vars_a SC .)
    IF              reduce using rule 6 (vars -> tiposimple vars_a SC .)
    WHILE           reduce using rule 6 (vars -> tiposimple vars_a SC .)
    FOR             reduce using rule 6 (vars -> tiposimple vars_a SC .)
    CLASS           reduce using rule 6 (vars -> tiposimple vars_a SC .)
    CLASS_ID        reduce using rule 6 (vars -> tiposimple vars_a SC .)
    VOID            reduce using rule 6 (vars -> tiposimple vars_a SC .)
    CB              reduce using rule 6 (vars -> tiposimple vars_a SC .)


state 48

    (12) vars_vect_mat -> tiposimple ID vars_vect_mat_a . SC
    (13) vars_vect_mat -> tiposimple ID vars_vect_mat_a . vars_vect_mat_a SC
    (14) vars_vect_mat_a -> . OSB exp CSB

    SC              shift and go to state 67
    OSB             shift and go to state 50

    vars_vect_mat_a                shift and go to state 66

state 49

    (11) vars_b -> ID EQ . varcte
    (51) varcte -> . ID
    (52) varcte -> . CTE_I
    (53) varcte -> . CTE_F

    ID              shift and go to state 68
    CTE_I           shift and go to state 70
    CTE_F           shift and go to state 71

    varcte                         shift and go to state 69

state 50

    (14) vars_vect_mat_a -> OSB . exp CSB
    (55) exp -> . and_exp exp_a
    (58) and_exp -> . expresion and_exp_a
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    exp                            shift and go to state 72
    and_exp                        shift and go to state 73
    expresion                      shift and go to state 74
    m_exp                          shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 51

    (9) vars_a -> vars_b COMMA . vars_a
    (8) vars_a -> . vars_b
    (9) vars_a -> . vars_b COMMA vars_a
    (10) vars_b -> . ID
    (11) vars_b -> . ID EQ varcte

    ID              shift and go to state 24

    vars_b                         shift and go to state 22
    vars_a                         shift and go to state 84

state 52

    (7) vars -> tipocompuesto vars_a SC .

    INT             reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    FLOAT           reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    CHAR            reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    DATAFRAME       reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    ID              reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    FILE            reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    OB              reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    IF              reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    WHILE           reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    FOR             reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    CLASS           reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    CLASS_ID        reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    VOID            reduce using rule 7 (vars -> tipocompuesto vars_a SC .)
    CB              reduce using rule 7 (vars -> tipocompuesto vars_a SC .)


state 53

    (29) bloque -> OB bloque_a CB .

    $end            reduce using rule 29 (bloque -> OB bloque_a CB .)
    ELSE            reduce using rule 29 (bloque -> OB bloque_a CB .)
    ID              reduce using rule 29 (bloque -> OB bloque_a CB .)
    IF              reduce using rule 29 (bloque -> OB bloque_a CB .)
    WHILE           reduce using rule 29 (bloque -> OB bloque_a CB .)
    FOR             reduce using rule 29 (bloque -> OB bloque_a CB .)
    CLASS           reduce using rule 29 (bloque -> OB bloque_a CB .)
    CLASS_ID        reduce using rule 29 (bloque -> OB bloque_a CB .)
    INT             reduce using rule 29 (bloque -> OB bloque_a CB .)
    FLOAT           reduce using rule 29 (bloque -> OB bloque_a CB .)
    CHAR            reduce using rule 29 (bloque -> OB bloque_a CB .)
    DATAFRAME       reduce using rule 29 (bloque -> OB bloque_a CB .)
    FILE            reduce using rule 29 (bloque -> OB bloque_a CB .)
    VOID            reduce using rule 29 (bloque -> OB bloque_a CB .)
    CB              reduce using rule 29 (bloque -> OB bloque_a CB .)
    OB              reduce using rule 29 (bloque -> OB bloque_a CB .)


state 54

    (30) bloque_a -> estatuto bloque_a .

    CB              reduce using rule 30 (bloque_a -> estatuto bloque_a .)


state 55

    (88) asignacion -> ID asignacion_a . asignacion_a EQ expresion SC
    (89) asignacion_a -> . OSB exp CSB
    (90) asignacion_a -> . empty
    (98) empty -> .

    OSB             shift and go to state 58
    EQ              reduce using rule 98 (empty -> .)

    asignacion_a                   shift and go to state 85
    empty                          shift and go to state 59

state 56

    (62) llamada -> ID OP . llamada_a CP SC
    (63) llamada_a -> . expresion llamada_b
    (64) llamada_a -> . CTE_STRING llamada_b
    (65) llamada_a -> . llamada_b
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (66) llamada_b -> . COMMA llamada_a
    (67) llamada_b -> . empty
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (98) empty -> .
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    CTE_STRING      shift and go to state 89
    COMMA           shift and go to state 90
    CP              reduce using rule 98 (empty -> .)
    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    llamada_a                      shift and go to state 86
    expresion                      shift and go to state 87
    llamada_b                      shift and go to state 88
    m_exp                          shift and go to state 75
    empty                          shift and go to state 91
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 57

    (87) llamadafuncionclase -> ID POINT . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    ID              shift and go to state 92

    llamada                        shift and go to state 93

state 58

    (89) asignacion_a -> OSB . exp CSB
    (55) exp -> . and_exp exp_a
    (58) and_exp -> . expresion and_exp_a
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    exp                            shift and go to state 94
    and_exp                        shift and go to state 73
    expresion                      shift and go to state 74
    m_exp                          shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 59

    (90) asignacion_a -> empty .

    OSB             reduce using rule 90 (asignacion_a -> empty .)
    EQ              reduce using rule 90 (asignacion_a -> empty .)


state 60

    (82) condicion -> IF OP . expresion CP bloque condicion_a
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    expresion                      shift and go to state 95
    m_exp                          shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 61

    (54) while -> WHILE OB . expresion CB bloque
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    expresion                      shift and go to state 96
    m_exp                          shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 62

    (61) for -> FOR OP . asignacionsencilla SC expresion SC asignacionsencilla CP bloque
    (91) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 98

    asignacionsencilla             shift and go to state 97

state 63

    (74) classcreate -> CLASS CLASS_ID . OB classcreate_a function classcreate_c CB

    OB              shift and go to state 99


state 64

    (86) classdeclare -> CLASS_ID ID . SC

    SC              shift and go to state 100


state 65

    (92) function -> function_a ID . OP function_b CP bloque

    OP              shift and go to state 101


state 66

    (13) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a . SC

    SC              shift and go to state 102


state 67

    (12) vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .

    INT             reduce using rule 12 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FLOAT           reduce using rule 12 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    CHAR            reduce using rule 12 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 12 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    ID              reduce using rule 12 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    FILE            reduce using rule 12 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    OB              reduce using rule 12 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)
    VOID            reduce using rule 12 (vars_vect_mat -> tiposimple ID vars_vect_mat_a SC .)


state 68

    (51) varcte -> ID .

    COMMA           reduce using rule 51 (varcte -> ID .)
    SC              reduce using rule 51 (varcte -> ID .)


state 69

    (11) vars_b -> ID EQ varcte .

    COMMA           reduce using rule 11 (vars_b -> ID EQ varcte .)
    SC              reduce using rule 11 (vars_b -> ID EQ varcte .)


state 70

    (52) varcte -> CTE_I .

    COMMA           reduce using rule 52 (varcte -> CTE_I .)
    SC              reduce using rule 52 (varcte -> CTE_I .)


state 71

    (53) varcte -> CTE_F .

    COMMA           reduce using rule 53 (varcte -> CTE_F .)
    SC              reduce using rule 53 (varcte -> CTE_F .)


state 72

    (14) vars_vect_mat_a -> OSB exp . CSB

    CSB             shift and go to state 103


state 73

    (55) exp -> and_exp . exp_a
    (56) exp_a -> . OR
    (57) exp_a -> . empty
    (98) empty -> .

    OR              shift and go to state 105
    CSB             reduce using rule 98 (empty -> .)
    CP              reduce using rule 98 (empty -> .)

    exp_a                          shift and go to state 104
    empty                          shift and go to state 106

state 74

    (58) and_exp -> expresion . and_exp_a
    (59) and_exp_a -> . AND
    (60) and_exp_a -> . empty
    (98) empty -> .

    AND             shift and go to state 108
    OR              reduce using rule 98 (empty -> .)
    CSB             reduce using rule 98 (empty -> .)
    CP              reduce using rule 98 (empty -> .)

    and_exp_a                      shift and go to state 107
    empty                          shift and go to state 109

state 75

    (43) expresion -> m_exp .
    (44) expresion -> m_exp . expresion_a m_exp
    (45) expresion_a -> . LT
    (46) expresion_a -> . GT
    (47) expresion_a -> . NE
    (48) expresion_a -> . EQEQ
    (49) expresion_a -> . LE
    (50) expresion_a -> . GE

    AND             reduce using rule 43 (expresion -> m_exp .)
    OR              reduce using rule 43 (expresion -> m_exp .)
    CSB             reduce using rule 43 (expresion -> m_exp .)
    COMMA           reduce using rule 43 (expresion -> m_exp .)
    CP              reduce using rule 43 (expresion -> m_exp .)
    CB              reduce using rule 43 (expresion -> m_exp .)
    SC              reduce using rule 43 (expresion -> m_exp .)
    LT              shift and go to state 111
    GT              shift and go to state 112
    NE              shift and go to state 113
    EQEQ            shift and go to state 114
    LE              shift and go to state 115
    GE              shift and go to state 116

    expresion_a                    shift and go to state 110

state 76

    (15) m_exp -> term .
    (16) m_exp -> term . m_exp_a m_exp
    (17) m_exp_a -> . ADD
    (18) m_exp_a -> . SUB

    LT              reduce using rule 15 (m_exp -> term .)
    GT              reduce using rule 15 (m_exp -> term .)
    NE              reduce using rule 15 (m_exp -> term .)
    EQEQ            reduce using rule 15 (m_exp -> term .)
    LE              reduce using rule 15 (m_exp -> term .)
    GE              reduce using rule 15 (m_exp -> term .)
    AND             reduce using rule 15 (m_exp -> term .)
    OR              reduce using rule 15 (m_exp -> term .)
    CSB             reduce using rule 15 (m_exp -> term .)
    COMMA           reduce using rule 15 (m_exp -> term .)
    CP              reduce using rule 15 (m_exp -> term .)
    CB              reduce using rule 15 (m_exp -> term .)
    SC              reduce using rule 15 (m_exp -> term .)
    ADD             shift and go to state 118
    SUB             shift and go to state 119

    m_exp_a                        shift and go to state 117

state 77

    (19) term -> fact .
    (20) term -> fact . term_a term
    (21) term_a -> . MULT
    (22) term_a -> . DIV

    ADD             reduce using rule 19 (term -> fact .)
    SUB             reduce using rule 19 (term -> fact .)
    LT              reduce using rule 19 (term -> fact .)
    GT              reduce using rule 19 (term -> fact .)
    NE              reduce using rule 19 (term -> fact .)
    EQEQ            reduce using rule 19 (term -> fact .)
    LE              reduce using rule 19 (term -> fact .)
    GE              reduce using rule 19 (term -> fact .)
    AND             reduce using rule 19 (term -> fact .)
    OR              reduce using rule 19 (term -> fact .)
    CSB             reduce using rule 19 (term -> fact .)
    COMMA           reduce using rule 19 (term -> fact .)
    CP              reduce using rule 19 (term -> fact .)
    CB              reduce using rule 19 (term -> fact .)
    SC              reduce using rule 19 (term -> fact .)
    MULT            shift and go to state 121
    DIV             shift and go to state 122

    term_a                         shift and go to state 120

state 78

    (68) fact -> OP . exp CP
    (55) exp -> . and_exp exp_a
    (58) and_exp -> . expresion and_exp_a
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    exp                            shift and go to state 123
    and_exp                        shift and go to state 73
    expresion                      shift and go to state 74
    m_exp                          shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 79

    (69) fact -> CTE_I .

    MULT            reduce using rule 69 (fact -> CTE_I .)
    DIV             reduce using rule 69 (fact -> CTE_I .)
    ADD             reduce using rule 69 (fact -> CTE_I .)
    SUB             reduce using rule 69 (fact -> CTE_I .)
    LT              reduce using rule 69 (fact -> CTE_I .)
    GT              reduce using rule 69 (fact -> CTE_I .)
    NE              reduce using rule 69 (fact -> CTE_I .)
    EQEQ            reduce using rule 69 (fact -> CTE_I .)
    LE              reduce using rule 69 (fact -> CTE_I .)
    GE              reduce using rule 69 (fact -> CTE_I .)
    AND             reduce using rule 69 (fact -> CTE_I .)
    OR              reduce using rule 69 (fact -> CTE_I .)
    CSB             reduce using rule 69 (fact -> CTE_I .)
    COMMA           reduce using rule 69 (fact -> CTE_I .)
    CP              reduce using rule 69 (fact -> CTE_I .)
    CB              reduce using rule 69 (fact -> CTE_I .)
    SC              reduce using rule 69 (fact -> CTE_I .)


state 80

    (70) fact -> CTE_F .

    MULT            reduce using rule 70 (fact -> CTE_F .)
    DIV             reduce using rule 70 (fact -> CTE_F .)
    ADD             reduce using rule 70 (fact -> CTE_F .)
    SUB             reduce using rule 70 (fact -> CTE_F .)
    LT              reduce using rule 70 (fact -> CTE_F .)
    GT              reduce using rule 70 (fact -> CTE_F .)
    NE              reduce using rule 70 (fact -> CTE_F .)
    EQEQ            reduce using rule 70 (fact -> CTE_F .)
    LE              reduce using rule 70 (fact -> CTE_F .)
    GE              reduce using rule 70 (fact -> CTE_F .)
    AND             reduce using rule 70 (fact -> CTE_F .)
    OR              reduce using rule 70 (fact -> CTE_F .)
    CSB             reduce using rule 70 (fact -> CTE_F .)
    COMMA           reduce using rule 70 (fact -> CTE_F .)
    CP              reduce using rule 70 (fact -> CTE_F .)
    CB              reduce using rule 70 (fact -> CTE_F .)
    SC              reduce using rule 70 (fact -> CTE_F .)


state 81

    (71) fact -> CTE_CHAR .

    MULT            reduce using rule 71 (fact -> CTE_CHAR .)
    DIV             reduce using rule 71 (fact -> CTE_CHAR .)
    ADD             reduce using rule 71 (fact -> CTE_CHAR .)
    SUB             reduce using rule 71 (fact -> CTE_CHAR .)
    LT              reduce using rule 71 (fact -> CTE_CHAR .)
    GT              reduce using rule 71 (fact -> CTE_CHAR .)
    NE              reduce using rule 71 (fact -> CTE_CHAR .)
    EQEQ            reduce using rule 71 (fact -> CTE_CHAR .)
    LE              reduce using rule 71 (fact -> CTE_CHAR .)
    GE              reduce using rule 71 (fact -> CTE_CHAR .)
    AND             reduce using rule 71 (fact -> CTE_CHAR .)
    OR              reduce using rule 71 (fact -> CTE_CHAR .)
    CSB             reduce using rule 71 (fact -> CTE_CHAR .)
    COMMA           reduce using rule 71 (fact -> CTE_CHAR .)
    CP              reduce using rule 71 (fact -> CTE_CHAR .)
    CB              reduce using rule 71 (fact -> CTE_CHAR .)
    SC              reduce using rule 71 (fact -> CTE_CHAR .)


state 82

    (72) fact -> ID .
    (62) llamada -> ID . OP llamada_a CP SC

    MULT            reduce using rule 72 (fact -> ID .)
    DIV             reduce using rule 72 (fact -> ID .)
    ADD             reduce using rule 72 (fact -> ID .)
    SUB             reduce using rule 72 (fact -> ID .)
    LT              reduce using rule 72 (fact -> ID .)
    GT              reduce using rule 72 (fact -> ID .)
    NE              reduce using rule 72 (fact -> ID .)
    EQEQ            reduce using rule 72 (fact -> ID .)
    LE              reduce using rule 72 (fact -> ID .)
    GE              reduce using rule 72 (fact -> ID .)
    AND             reduce using rule 72 (fact -> ID .)
    OR              reduce using rule 72 (fact -> ID .)
    CSB             reduce using rule 72 (fact -> ID .)
    COMMA           reduce using rule 72 (fact -> ID .)
    CP              reduce using rule 72 (fact -> ID .)
    CB              reduce using rule 72 (fact -> ID .)
    SC              reduce using rule 72 (fact -> ID .)
    OP              shift and go to state 56


state 83

    (73) fact -> llamada .

    MULT            reduce using rule 73 (fact -> llamada .)
    DIV             reduce using rule 73 (fact -> llamada .)
    ADD             reduce using rule 73 (fact -> llamada .)
    SUB             reduce using rule 73 (fact -> llamada .)
    LT              reduce using rule 73 (fact -> llamada .)
    GT              reduce using rule 73 (fact -> llamada .)
    NE              reduce using rule 73 (fact -> llamada .)
    EQEQ            reduce using rule 73 (fact -> llamada .)
    LE              reduce using rule 73 (fact -> llamada .)
    GE              reduce using rule 73 (fact -> llamada .)
    AND             reduce using rule 73 (fact -> llamada .)
    OR              reduce using rule 73 (fact -> llamada .)
    CSB             reduce using rule 73 (fact -> llamada .)
    COMMA           reduce using rule 73 (fact -> llamada .)
    CP              reduce using rule 73 (fact -> llamada .)
    CB              reduce using rule 73 (fact -> llamada .)
    SC              reduce using rule 73 (fact -> llamada .)


state 84

    (9) vars_a -> vars_b COMMA vars_a .

    SC              reduce using rule 9 (vars_a -> vars_b COMMA vars_a .)


state 85

    (88) asignacion -> ID asignacion_a asignacion_a . EQ expresion SC

    EQ              shift and go to state 124


state 86

    (62) llamada -> ID OP llamada_a . CP SC

    CP              shift and go to state 125


state 87

    (63) llamada_a -> expresion . llamada_b
    (66) llamada_b -> . COMMA llamada_a
    (67) llamada_b -> . empty
    (98) empty -> .

    COMMA           shift and go to state 90
    CP              reduce using rule 98 (empty -> .)

    llamada_b                      shift and go to state 126
    empty                          shift and go to state 91

state 88

    (65) llamada_a -> llamada_b .

    CP              reduce using rule 65 (llamada_a -> llamada_b .)


state 89

    (64) llamada_a -> CTE_STRING . llamada_b
    (66) llamada_b -> . COMMA llamada_a
    (67) llamada_b -> . empty
    (98) empty -> .

    COMMA           shift and go to state 90
    CP              reduce using rule 98 (empty -> .)

    llamada_b                      shift and go to state 127
    empty                          shift and go to state 91

state 90

    (66) llamada_b -> COMMA . llamada_a
    (63) llamada_a -> . expresion llamada_b
    (64) llamada_a -> . CTE_STRING llamada_b
    (65) llamada_a -> . llamada_b
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (66) llamada_b -> . COMMA llamada_a
    (67) llamada_b -> . empty
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (98) empty -> .
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    CTE_STRING      shift and go to state 89
    COMMA           shift and go to state 90
    CP              reduce using rule 98 (empty -> .)
    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    llamada_a                      shift and go to state 128
    expresion                      shift and go to state 87
    llamada_b                      shift and go to state 88
    m_exp                          shift and go to state 75
    empty                          shift and go to state 91
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 91

    (67) llamada_b -> empty .

    CP              reduce using rule 67 (llamada_b -> empty .)


state 92

    (62) llamada -> ID . OP llamada_a CP SC

    OP              shift and go to state 56


state 93

    (87) llamadafuncionclase -> ID POINT llamada .

    ID              reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    IF              reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    WHILE           reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    FOR             reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    CLASS           reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    CLASS_ID        reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    INT             reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    FLOAT           reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    CHAR            reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    DATAFRAME       reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    FILE            reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    VOID            reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)
    CB              reduce using rule 87 (llamadafuncionclase -> ID POINT llamada .)


state 94

    (89) asignacion_a -> OSB exp . CSB

    CSB             shift and go to state 129


state 95

    (82) condicion -> IF OP expresion . CP bloque condicion_a

    CP              shift and go to state 130


state 96

    (54) while -> WHILE OB expresion . CB bloque

    CB              shift and go to state 131


state 97

    (61) for -> FOR OP asignacionsencilla . SC expresion SC asignacionsencilla CP bloque

    SC              shift and go to state 132


state 98

    (91) asignacionsencilla -> ID . EQ expresion

    EQ              shift and go to state 133


state 99

    (74) classcreate -> CLASS CLASS_ID OB . classcreate_a function classcreate_c CB
    (75) classcreate_a -> . vars classcreate_a
    (76) classcreate_a -> . vars_vect_mat classcreate_a
    (77) classcreate_a -> . empty
    (6) vars -> . tiposimple vars_a SC
    (7) vars -> . tipocompuesto vars_a SC
    (12) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (98) empty -> .
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (26) tipocompuesto -> . DATAFRAME
    (27) tipocompuesto -> . ID
    (28) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 98 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    DATAFRAME       shift and go to state 15
    ID              shift and go to state 5
    FILE            shift and go to state 16

  ! INT             [ reduce using rule 98 (empty -> .) ]
  ! FLOAT           [ reduce using rule 98 (empty -> .) ]
  ! CHAR            [ reduce using rule 98 (empty -> .) ]

    classcreate_a                  shift and go to state 134
    vars                           shift and go to state 135
    vars_vect_mat                  shift and go to state 136
    empty                          shift and go to state 137
    tiposimple                     shift and go to state 10
    tipocompuesto                  shift and go to state 11

state 100

    (86) classdeclare -> CLASS_ID ID SC .

    ID              reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    IF              reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    WHILE           reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    FOR             reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    CLASS           reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    CLASS_ID        reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    INT             reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    FLOAT           reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    CHAR            reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    DATAFRAME       reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    FILE            reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    VOID            reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)
    CB              reduce using rule 86 (classdeclare -> CLASS_ID ID SC .)


state 101

    (92) function -> function_a ID OP . function_b CP bloque
    (95) function_b -> . tiposimple ID
    (96) function_b -> . tiposimple ID COMMA function_b
    (97) function_b -> . empty
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (98) empty -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    CP              reduce using rule 98 (empty -> .)

    function_b                     shift and go to state 138
    tiposimple                     shift and go to state 139
    empty                          shift and go to state 140

state 102

    (13) vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .

    INT             reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FLOAT           reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    CHAR            reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    DATAFRAME       reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    ID              reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    FILE            reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    OB              reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)
    VOID            reduce using rule 13 (vars_vect_mat -> tiposimple ID vars_vect_mat_a vars_vect_mat_a SC .)


state 103

    (14) vars_vect_mat_a -> OSB exp CSB .

    SC              reduce using rule 14 (vars_vect_mat_a -> OSB exp CSB .)
    OSB             reduce using rule 14 (vars_vect_mat_a -> OSB exp CSB .)


state 104

    (55) exp -> and_exp exp_a .

    CSB             reduce using rule 55 (exp -> and_exp exp_a .)
    CP              reduce using rule 55 (exp -> and_exp exp_a .)


state 105

    (56) exp_a -> OR .

    CSB             reduce using rule 56 (exp_a -> OR .)
    CP              reduce using rule 56 (exp_a -> OR .)


state 106

    (57) exp_a -> empty .

    CSB             reduce using rule 57 (exp_a -> empty .)
    CP              reduce using rule 57 (exp_a -> empty .)


state 107

    (58) and_exp -> expresion and_exp_a .

    OR              reduce using rule 58 (and_exp -> expresion and_exp_a .)
    CSB             reduce using rule 58 (and_exp -> expresion and_exp_a .)
    CP              reduce using rule 58 (and_exp -> expresion and_exp_a .)


state 108

    (59) and_exp_a -> AND .

    OR              reduce using rule 59 (and_exp_a -> AND .)
    CSB             reduce using rule 59 (and_exp_a -> AND .)
    CP              reduce using rule 59 (and_exp_a -> AND .)


state 109

    (60) and_exp_a -> empty .

    OR              reduce using rule 60 (and_exp_a -> empty .)
    CSB             reduce using rule 60 (and_exp_a -> empty .)
    CP              reduce using rule 60 (and_exp_a -> empty .)


state 110

    (44) expresion -> m_exp expresion_a . m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    m_exp                          shift and go to state 141
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 111

    (45) expresion_a -> LT .

    OP              reduce using rule 45 (expresion_a -> LT .)
    CTE_I           reduce using rule 45 (expresion_a -> LT .)
    CTE_F           reduce using rule 45 (expresion_a -> LT .)
    CTE_CHAR        reduce using rule 45 (expresion_a -> LT .)
    ID              reduce using rule 45 (expresion_a -> LT .)


state 112

    (46) expresion_a -> GT .

    OP              reduce using rule 46 (expresion_a -> GT .)
    CTE_I           reduce using rule 46 (expresion_a -> GT .)
    CTE_F           reduce using rule 46 (expresion_a -> GT .)
    CTE_CHAR        reduce using rule 46 (expresion_a -> GT .)
    ID              reduce using rule 46 (expresion_a -> GT .)


state 113

    (47) expresion_a -> NE .

    OP              reduce using rule 47 (expresion_a -> NE .)
    CTE_I           reduce using rule 47 (expresion_a -> NE .)
    CTE_F           reduce using rule 47 (expresion_a -> NE .)
    CTE_CHAR        reduce using rule 47 (expresion_a -> NE .)
    ID              reduce using rule 47 (expresion_a -> NE .)


state 114

    (48) expresion_a -> EQEQ .

    OP              reduce using rule 48 (expresion_a -> EQEQ .)
    CTE_I           reduce using rule 48 (expresion_a -> EQEQ .)
    CTE_F           reduce using rule 48 (expresion_a -> EQEQ .)
    CTE_CHAR        reduce using rule 48 (expresion_a -> EQEQ .)
    ID              reduce using rule 48 (expresion_a -> EQEQ .)


state 115

    (49) expresion_a -> LE .

    OP              reduce using rule 49 (expresion_a -> LE .)
    CTE_I           reduce using rule 49 (expresion_a -> LE .)
    CTE_F           reduce using rule 49 (expresion_a -> LE .)
    CTE_CHAR        reduce using rule 49 (expresion_a -> LE .)
    ID              reduce using rule 49 (expresion_a -> LE .)


state 116

    (50) expresion_a -> GE .

    OP              reduce using rule 50 (expresion_a -> GE .)
    CTE_I           reduce using rule 50 (expresion_a -> GE .)
    CTE_F           reduce using rule 50 (expresion_a -> GE .)
    CTE_CHAR        reduce using rule 50 (expresion_a -> GE .)
    ID              reduce using rule 50 (expresion_a -> GE .)


state 117

    (16) m_exp -> term m_exp_a . m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    term                           shift and go to state 76
    m_exp                          shift and go to state 142
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 118

    (17) m_exp_a -> ADD .

    OP              reduce using rule 17 (m_exp_a -> ADD .)
    CTE_I           reduce using rule 17 (m_exp_a -> ADD .)
    CTE_F           reduce using rule 17 (m_exp_a -> ADD .)
    CTE_CHAR        reduce using rule 17 (m_exp_a -> ADD .)
    ID              reduce using rule 17 (m_exp_a -> ADD .)


state 119

    (18) m_exp_a -> SUB .

    OP              reduce using rule 18 (m_exp_a -> SUB .)
    CTE_I           reduce using rule 18 (m_exp_a -> SUB .)
    CTE_F           reduce using rule 18 (m_exp_a -> SUB .)
    CTE_CHAR        reduce using rule 18 (m_exp_a -> SUB .)
    ID              reduce using rule 18 (m_exp_a -> SUB .)


state 120

    (20) term -> fact term_a . term
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    fact                           shift and go to state 77
    term                           shift and go to state 143
    llamada                        shift and go to state 83

state 121

    (21) term_a -> MULT .

    OP              reduce using rule 21 (term_a -> MULT .)
    CTE_I           reduce using rule 21 (term_a -> MULT .)
    CTE_F           reduce using rule 21 (term_a -> MULT .)
    CTE_CHAR        reduce using rule 21 (term_a -> MULT .)
    ID              reduce using rule 21 (term_a -> MULT .)


state 122

    (22) term_a -> DIV .

    OP              reduce using rule 22 (term_a -> DIV .)
    CTE_I           reduce using rule 22 (term_a -> DIV .)
    CTE_F           reduce using rule 22 (term_a -> DIV .)
    CTE_CHAR        reduce using rule 22 (term_a -> DIV .)
    ID              reduce using rule 22 (term_a -> DIV .)


state 123

    (68) fact -> OP exp . CP

    CP              shift and go to state 144


state 124

    (88) asignacion -> ID asignacion_a asignacion_a EQ . expresion SC
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    expresion                      shift and go to state 145
    m_exp                          shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 125

    (62) llamada -> ID OP llamada_a CP . SC

    SC              shift and go to state 146


state 126

    (63) llamada_a -> expresion llamada_b .

    CP              reduce using rule 63 (llamada_a -> expresion llamada_b .)


state 127

    (64) llamada_a -> CTE_STRING llamada_b .

    CP              reduce using rule 64 (llamada_a -> CTE_STRING llamada_b .)


state 128

    (66) llamada_b -> COMMA llamada_a .

    CP              reduce using rule 66 (llamada_b -> COMMA llamada_a .)


state 129

    (89) asignacion_a -> OSB exp CSB .

    OSB             reduce using rule 89 (asignacion_a -> OSB exp CSB .)
    EQ              reduce using rule 89 (asignacion_a -> OSB exp CSB .)


state 130

    (82) condicion -> IF OP expresion CP . bloque condicion_a
    (29) bloque -> . OB bloque_a CB

    OB              shift and go to state 18

    bloque                         shift and go to state 147

state 131

    (54) while -> WHILE OB expresion CB . bloque
    (29) bloque -> . OB bloque_a CB

    OB              shift and go to state 18

    bloque                         shift and go to state 148

state 132

    (61) for -> FOR OP asignacionsencilla SC . expresion SC asignacionsencilla CP bloque
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    expresion                      shift and go to state 149
    m_exp                          shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 133

    (91) asignacionsencilla -> ID EQ . expresion
    (43) expresion -> . m_exp
    (44) expresion -> . m_exp expresion_a m_exp
    (15) m_exp -> . term
    (16) m_exp -> . term m_exp_a m_exp
    (19) term -> . fact
    (20) term -> . fact term_a term
    (68) fact -> . OP exp CP
    (69) fact -> . CTE_I
    (70) fact -> . CTE_F
    (71) fact -> . CTE_CHAR
    (72) fact -> . ID
    (73) fact -> . llamada
    (62) llamada -> . ID OP llamada_a CP SC

    OP              shift and go to state 78
    CTE_I           shift and go to state 79
    CTE_F           shift and go to state 80
    CTE_CHAR        shift and go to state 81
    ID              shift and go to state 82

    expresion                      shift and go to state 150
    m_exp                          shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 77
    llamada                        shift and go to state 83

state 134

    (74) classcreate -> CLASS CLASS_ID OB classcreate_a . function classcreate_c CB
    (92) function -> . function_a ID OP function_b CP bloque
    (93) function_a -> . VOID
    (94) function_a -> . tiposimple
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR

    VOID            shift and go to state 46
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14

    function                       shift and go to state 151
    function_a                     shift and go to state 45
    tiposimple                     shift and go to state 152

state 135

    (75) classcreate_a -> vars . classcreate_a
    (75) classcreate_a -> . vars classcreate_a
    (76) classcreate_a -> . vars_vect_mat classcreate_a
    (77) classcreate_a -> . empty
    (6) vars -> . tiposimple vars_a SC
    (7) vars -> . tipocompuesto vars_a SC
    (12) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (98) empty -> .
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (26) tipocompuesto -> . DATAFRAME
    (27) tipocompuesto -> . ID
    (28) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 98 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    DATAFRAME       shift and go to state 15
    ID              shift and go to state 5
    FILE            shift and go to state 16

  ! INT             [ reduce using rule 98 (empty -> .) ]
  ! FLOAT           [ reduce using rule 98 (empty -> .) ]
  ! CHAR            [ reduce using rule 98 (empty -> .) ]

    vars                           shift and go to state 135
    classcreate_a                  shift and go to state 153
    vars_vect_mat                  shift and go to state 136
    empty                          shift and go to state 137
    tiposimple                     shift and go to state 10
    tipocompuesto                  shift and go to state 11

state 136

    (76) classcreate_a -> vars_vect_mat . classcreate_a
    (75) classcreate_a -> . vars classcreate_a
    (76) classcreate_a -> . vars_vect_mat classcreate_a
    (77) classcreate_a -> . empty
    (6) vars -> . tiposimple vars_a SC
    (7) vars -> . tipocompuesto vars_a SC
    (12) vars_vect_mat -> . tiposimple ID vars_vect_mat_a SC
    (13) vars_vect_mat -> . tiposimple ID vars_vect_mat_a vars_vect_mat_a SC
    (98) empty -> .
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (26) tipocompuesto -> . DATAFRAME
    (27) tipocompuesto -> . ID
    (28) tipocompuesto -> . FILE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 98 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    DATAFRAME       shift and go to state 15
    ID              shift and go to state 5
    FILE            shift and go to state 16

  ! INT             [ reduce using rule 98 (empty -> .) ]
  ! FLOAT           [ reduce using rule 98 (empty -> .) ]
  ! CHAR            [ reduce using rule 98 (empty -> .) ]

    vars_vect_mat                  shift and go to state 136
    classcreate_a                  shift and go to state 154
    vars                           shift and go to state 135
    empty                          shift and go to state 137
    tiposimple                     shift and go to state 10
    tipocompuesto                  shift and go to state 11

state 137

    (77) classcreate_a -> empty .

    VOID            reduce using rule 77 (classcreate_a -> empty .)
    INT             reduce using rule 77 (classcreate_a -> empty .)
    FLOAT           reduce using rule 77 (classcreate_a -> empty .)
    CHAR            reduce using rule 77 (classcreate_a -> empty .)


state 138

    (92) function -> function_a ID OP function_b . CP bloque

    CP              shift and go to state 155


state 139

    (95) function_b -> tiposimple . ID
    (96) function_b -> tiposimple . ID COMMA function_b

    ID              shift and go to state 156


state 140

    (97) function_b -> empty .

    CP              reduce using rule 97 (function_b -> empty .)


state 141

    (44) expresion -> m_exp expresion_a m_exp .

    AND             reduce using rule 44 (expresion -> m_exp expresion_a m_exp .)
    OR              reduce using rule 44 (expresion -> m_exp expresion_a m_exp .)
    CSB             reduce using rule 44 (expresion -> m_exp expresion_a m_exp .)
    COMMA           reduce using rule 44 (expresion -> m_exp expresion_a m_exp .)
    CP              reduce using rule 44 (expresion -> m_exp expresion_a m_exp .)
    CB              reduce using rule 44 (expresion -> m_exp expresion_a m_exp .)
    SC              reduce using rule 44 (expresion -> m_exp expresion_a m_exp .)


state 142

    (16) m_exp -> term m_exp_a m_exp .

    LT              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    GT              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    NE              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    EQEQ            reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    LE              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    GE              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    AND             reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    OR              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    CSB             reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    COMMA           reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    CP              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    CB              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)
    SC              reduce using rule 16 (m_exp -> term m_exp_a m_exp .)


state 143

    (20) term -> fact term_a term .

    ADD             reduce using rule 20 (term -> fact term_a term .)
    SUB             reduce using rule 20 (term -> fact term_a term .)
    LT              reduce using rule 20 (term -> fact term_a term .)
    GT              reduce using rule 20 (term -> fact term_a term .)
    NE              reduce using rule 20 (term -> fact term_a term .)
    EQEQ            reduce using rule 20 (term -> fact term_a term .)
    LE              reduce using rule 20 (term -> fact term_a term .)
    GE              reduce using rule 20 (term -> fact term_a term .)
    AND             reduce using rule 20 (term -> fact term_a term .)
    OR              reduce using rule 20 (term -> fact term_a term .)
    CSB             reduce using rule 20 (term -> fact term_a term .)
    COMMA           reduce using rule 20 (term -> fact term_a term .)
    CP              reduce using rule 20 (term -> fact term_a term .)
    CB              reduce using rule 20 (term -> fact term_a term .)
    SC              reduce using rule 20 (term -> fact term_a term .)


state 144

    (68) fact -> OP exp CP .

    MULT            reduce using rule 68 (fact -> OP exp CP .)
    DIV             reduce using rule 68 (fact -> OP exp CP .)
    ADD             reduce using rule 68 (fact -> OP exp CP .)
    SUB             reduce using rule 68 (fact -> OP exp CP .)
    LT              reduce using rule 68 (fact -> OP exp CP .)
    GT              reduce using rule 68 (fact -> OP exp CP .)
    NE              reduce using rule 68 (fact -> OP exp CP .)
    EQEQ            reduce using rule 68 (fact -> OP exp CP .)
    LE              reduce using rule 68 (fact -> OP exp CP .)
    GE              reduce using rule 68 (fact -> OP exp CP .)
    AND             reduce using rule 68 (fact -> OP exp CP .)
    OR              reduce using rule 68 (fact -> OP exp CP .)
    CSB             reduce using rule 68 (fact -> OP exp CP .)
    COMMA           reduce using rule 68 (fact -> OP exp CP .)
    CP              reduce using rule 68 (fact -> OP exp CP .)
    CB              reduce using rule 68 (fact -> OP exp CP .)
    SC              reduce using rule 68 (fact -> OP exp CP .)


state 145

    (88) asignacion -> ID asignacion_a asignacion_a EQ expresion . SC

    SC              shift and go to state 157


state 146

    (62) llamada -> ID OP llamada_a CP SC .

    ID              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    IF              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    WHILE           reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    FOR             reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    CLASS           reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    CLASS_ID        reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    INT             reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    FLOAT           reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    CHAR            reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    DATAFRAME       reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    FILE            reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    VOID            reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    CB              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    MULT            reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    DIV             reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    ADD             reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    SUB             reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    LT              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    GT              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    NE              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    EQEQ            reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    LE              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    GE              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    AND             reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    OR              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    CSB             reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    COMMA           reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    CP              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)
    SC              reduce using rule 62 (llamada -> ID OP llamada_a CP SC .)


state 147

    (82) condicion -> IF OP expresion CP bloque . condicion_a
    (83) condicion_a -> . ELSE condicion_b bloque

    ELSE            shift and go to state 159

    condicion_a                    shift and go to state 158

state 148

    (54) while -> WHILE OB expresion CB bloque .

    ID              reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    IF              reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    WHILE           reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    FOR             reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    CLASS           reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    CLASS_ID        reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    INT             reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    FLOAT           reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    CHAR            reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    DATAFRAME       reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    FILE            reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    VOID            reduce using rule 54 (while -> WHILE OB expresion CB bloque .)
    CB              reduce using rule 54 (while -> WHILE OB expresion CB bloque .)


state 149

    (61) for -> FOR OP asignacionsencilla SC expresion . SC asignacionsencilla CP bloque

    SC              shift and go to state 160


state 150

    (91) asignacionsencilla -> ID EQ expresion .

    SC              reduce using rule 91 (asignacionsencilla -> ID EQ expresion .)
    CP              reduce using rule 91 (asignacionsencilla -> ID EQ expresion .)


state 151

    (74) classcreate -> CLASS CLASS_ID OB classcreate_a function . classcreate_c CB
    (78) classcreate_c -> . function classcreate_d
    (79) classcreate_c -> . classcreate_d
    (92) function -> . function_a ID OP function_b CP bloque
    (80) classcreate_d -> . classcreate_c
    (81) classcreate_d -> . empty
    (93) function_a -> . VOID
    (94) function_a -> . tiposimple
    (98) empty -> .
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR

    VOID            shift and go to state 46
    CB              reduce using rule 98 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14

    function                       shift and go to state 161
    classcreate_c                  shift and go to state 162
    classcreate_d                  shift and go to state 163
    function_a                     shift and go to state 45
    empty                          shift and go to state 164
    tiposimple                     shift and go to state 152

state 152

    (94) function_a -> tiposimple .

    ID              reduce using rule 94 (function_a -> tiposimple .)


state 153

    (75) classcreate_a -> vars classcreate_a .

    VOID            reduce using rule 75 (classcreate_a -> vars classcreate_a .)
    INT             reduce using rule 75 (classcreate_a -> vars classcreate_a .)
    FLOAT           reduce using rule 75 (classcreate_a -> vars classcreate_a .)
    CHAR            reduce using rule 75 (classcreate_a -> vars classcreate_a .)


state 154

    (76) classcreate_a -> vars_vect_mat classcreate_a .

    VOID            reduce using rule 76 (classcreate_a -> vars_vect_mat classcreate_a .)
    INT             reduce using rule 76 (classcreate_a -> vars_vect_mat classcreate_a .)
    FLOAT           reduce using rule 76 (classcreate_a -> vars_vect_mat classcreate_a .)
    CHAR            reduce using rule 76 (classcreate_a -> vars_vect_mat classcreate_a .)


state 155

    (92) function -> function_a ID OP function_b CP . bloque
    (29) bloque -> . OB bloque_a CB

    OB              shift and go to state 18

    bloque                         shift and go to state 165

state 156

    (95) function_b -> tiposimple ID .
    (96) function_b -> tiposimple ID . COMMA function_b

    CP              reduce using rule 95 (function_b -> tiposimple ID .)
    COMMA           shift and go to state 166


state 157

    (88) asignacion -> ID asignacion_a asignacion_a EQ expresion SC .

    ID              reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    IF              reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    WHILE           reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FOR             reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS           reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CLASS_ID        reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    INT             reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FLOAT           reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CHAR            reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    DATAFRAME       reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    FILE            reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    VOID            reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)
    CB              reduce using rule 88 (asignacion -> ID asignacion_a asignacion_a EQ expresion SC .)


state 158

    (82) condicion -> IF OP expresion CP bloque condicion_a .

    ID              reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    IF              reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    WHILE           reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    FOR             reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    CLASS           reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    CLASS_ID        reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    INT             reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    FLOAT           reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    CHAR            reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    DATAFRAME       reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    FILE            reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    VOID            reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    CB              reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)
    OB              reduce using rule 82 (condicion -> IF OP expresion CP bloque condicion_a .)


state 159

    (83) condicion_a -> ELSE . condicion_b bloque
    (84) condicion_b -> . condicion
    (85) condicion_b -> . empty
    (82) condicion -> . IF OP expresion CP bloque condicion_a
    (98) empty -> .

    IF              shift and go to state 39
    OB              reduce using rule 98 (empty -> .)

    condicion_b                    shift and go to state 167
    condicion                      shift and go to state 168
    empty                          shift and go to state 169

state 160

    (61) for -> FOR OP asignacionsencilla SC expresion SC . asignacionsencilla CP bloque
    (91) asignacionsencilla -> . ID EQ expresion

    ID              shift and go to state 98

    asignacionsencilla             shift and go to state 170

state 161

    (78) classcreate_c -> function . classcreate_d
    (80) classcreate_d -> . classcreate_c
    (81) classcreate_d -> . empty
    (78) classcreate_c -> . function classcreate_d
    (79) classcreate_c -> . classcreate_d
    (98) empty -> .
    (92) function -> . function_a ID OP function_b CP bloque
    (93) function_a -> . VOID
    (94) function_a -> . tiposimple
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR

    CB              reduce using rule 98 (empty -> .)
    VOID            shift and go to state 46
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14

    function                       shift and go to state 161
    classcreate_d                  shift and go to state 171
    classcreate_c                  shift and go to state 172
    empty                          shift and go to state 164
    function_a                     shift and go to state 45
    tiposimple                     shift and go to state 152

state 162

    (74) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c . CB
    (80) classcreate_d -> classcreate_c .

  ! shift/reduce conflict for CB resolved as shift
    CB              shift and go to state 173

  ! CB              [ reduce using rule 80 (classcreate_d -> classcreate_c .) ]


state 163

    (79) classcreate_c -> classcreate_d .

    CB              reduce using rule 79 (classcreate_c -> classcreate_d .)


state 164

    (81) classcreate_d -> empty .

    CB              reduce using rule 81 (classcreate_d -> empty .)


state 165

    (92) function -> function_a ID OP function_b CP bloque .

    ID              reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    IF              reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    WHILE           reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    FOR             reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    CLASS           reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    CLASS_ID        reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    INT             reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    FLOAT           reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    CHAR            reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    DATAFRAME       reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    FILE            reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    VOID            reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)
    CB              reduce using rule 92 (function -> function_a ID OP function_b CP bloque .)


state 166

    (96) function_b -> tiposimple ID COMMA . function_b
    (95) function_b -> . tiposimple ID
    (96) function_b -> . tiposimple ID COMMA function_b
    (97) function_b -> . empty
    (23) tiposimple -> . INT
    (24) tiposimple -> . FLOAT
    (25) tiposimple -> . CHAR
    (98) empty -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    CP              reduce using rule 98 (empty -> .)

    tiposimple                     shift and go to state 139
    function_b                     shift and go to state 174
    empty                          shift and go to state 140

state 167

    (83) condicion_a -> ELSE condicion_b . bloque
    (29) bloque -> . OB bloque_a CB

    OB              shift and go to state 18

    bloque                         shift and go to state 175

state 168

    (84) condicion_b -> condicion .

    OB              reduce using rule 84 (condicion_b -> condicion .)


state 169

    (85) condicion_b -> empty .

    OB              reduce using rule 85 (condicion_b -> empty .)


state 170

    (61) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla . CP bloque

    CP              shift and go to state 176


state 171

    (78) classcreate_c -> function classcreate_d .
    (79) classcreate_c -> classcreate_d .

  ! reduce/reduce conflict for CB resolved using rule 78 (classcreate_c -> function classcreate_d .)
    CB              reduce using rule 78 (classcreate_c -> function classcreate_d .)

  ! CB              [ reduce using rule 79 (classcreate_c -> classcreate_d .) ]


state 172

    (80) classcreate_d -> classcreate_c .

    CB              reduce using rule 80 (classcreate_d -> classcreate_c .)


state 173

    (74) classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .

    ID              reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    IF              reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    WHILE           reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FOR             reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS           reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CLASS_ID        reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    INT             reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FLOAT           reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CHAR            reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    DATAFRAME       reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    FILE            reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    VOID            reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)
    CB              reduce using rule 74 (classcreate -> CLASS CLASS_ID OB classcreate_a function classcreate_c CB .)


state 174

    (96) function_b -> tiposimple ID COMMA function_b .

    CP              reduce using rule 96 (function_b -> tiposimple ID COMMA function_b .)


state 175

    (83) condicion_a -> ELSE condicion_b bloque .

    ID              reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    IF              reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    WHILE           reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    FOR             reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    CLASS           reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    CLASS_ID        reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    INT             reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    FLOAT           reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    CHAR            reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    DATAFRAME       reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    FILE            reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    VOID            reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    CB              reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)
    OB              reduce using rule 83 (condicion_a -> ELSE condicion_b bloque .)


state 176

    (61) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP . bloque
    (29) bloque -> . OB bloque_a CB

    OB              shift and go to state 18

    bloque                         shift and go to state 177

state 177

    (61) for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .

    ID              reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    IF              reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    WHILE           reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FOR             reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CLASS           reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CLASS_ID        reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    INT             reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FLOAT           reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CHAR            reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    DATAFRAME       reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    FILE            reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    VOID            reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)
    CB              reduce using rule 61 (for -> FOR OP asignacionsencilla SC expresion SC asignacionsencilla CP bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OSB in state 38 resolved as shift
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: shift/reduce conflict for INT in state 99 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 99 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 99 resolved as shift
WARNING: shift/reduce conflict for INT in state 135 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 135 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 135 resolved as shift
WARNING: shift/reduce conflict for INT in state 136 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 136 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 136 resolved as shift
WARNING: shift/reduce conflict for CB in state 162 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (bloque_a -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 171 resolved using rule (classcreate_c -> function classcreate_d)
WARNING: rejected rule (classcreate_c -> classcreate_d) in state 171
